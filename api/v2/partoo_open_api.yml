---
openapi: 3.1.0
info:
  title: Partoo Rest API
  version: v2
  license:
    name: "© Copyright Partoo"
    url: https://www.partoo.co/en/gtu-api/
  x-logo:
    url: https://partoo-client-images.s3.amazonaws.com/logo-partoo-restapi-white.png
  description: |
    ## Introduction
    The Partoo Rest API allows you to automate all the actions that are possible to do in the Partoo Web Application.

    The Partoo Rest API can be used for many different purposes:
      - Create/update/delete your businesses & users if you are a client.
      - Create/subscribe/manage organizations, businesses & users if you are a reseller.
      - Retrieve data on businesses you have access to if you are a publisher.
      - ...
servers:
- url: https://api.partoo.co/v2
  description: Production server
- url: https://api.sandbox.partoo.co/v2
  description: Sandbox server (dev environment for clients & partners)
tags:
- name: Change Log
  description: "<h2>Upcoming changes</h2> <h2>2025-07-15</h2> <ul>\n  <li>\n    <h3>Review
    analytics V1 API endpoints deprecation</h3>\n    <p>The impacted endpoints are:</p>\n
    \   <ul>\n      <li>GET <a href=\"#operation/getReviewAnalytics\">/v2/reviews/stats</a></li>\n
    \     <li>GET <a href=\"#operation/getQualitativeEvolution\">/v2/reviews/qualitative-evolution</a></li>\n
    \     <li>GET <a href=\"#operation/getQuantitativeEvolution\">/v2/reviews/quantitative-evolution</a></li>\n
    \   </ul>\n    <p>\n      You can use the new GET <a href=\"#operation/getReviewAnalyticsMetrics\">/v2/review_analytics/metrics</a>\n
    \     endpoint to get the same data:\n    </p>\n    <ul>\n      <li>\n        <code>/v2/reviews/stats</code>\n
    \       ➡ <code>/v2/review_analytics/metrics?metrics=average_rating,rating_distribution,reply_time,reviews_count</code>\n
    \       <br/>⚠ The properties treated, not_treated and answer_time are no longer
    available<br/><br/>\n      </li>\n      <li>\n        <code>/v2/reviews/quantitative-evolution</code>\n
    \       ➡ <code>/v2/review_analytics/metrics?dimensions={dimension}&metrics=reviews_count</code>\n
    \       <br/>where dimension = <code>day</code> | <code>week</code> | <code>month</code>
    | <code>year</code>\n        <br/><br/>\n      </li>\n      <li>\n        <code>/v2/reviews/qualitative-evolution</code>\n
    \       ➡ <code>/v2/review_analytics/metrics?dimensions={dimension}&metrics=reviews_count,average_rating</code>\n
    \       <br/>where dimension = <code>day</code> | <code>week</code> | <code>month</code>
    | <code>year</code>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <h3>Deprecation
    of products for features</h3>\n    <p>\n      We're replacing our products for
    a new system with features.<br />\n      This will allow to have a more fine-grained
    control over the features available to organizations, businesses and users.<br
    />\n    </p>\n    <h4>Impacts</h4>\n      <h5>Organization</h5>\n        <p>\n
    \         You can now retrieve the list of features your org has access to with
    its subscribed plans through the <code>org_features</code> field.<br />\n          You
    can also retrieve the list of all available features from the org subscribed plans
    as well as the plans only some businesses may have subscribed to, through the
    <code>features</code> field.\n        <p>\n        <p>Deprecated fields: </p>\n
    \       <ul>\n          <li><code>has_google_post</code></li>\n          <li><code>display_google_post</code></li>\n
    \       </ul>\n      <h5>Business</h5>\n        <p>\n          You can now retrieve
    the list of features your business has access to with its organization and its
    own subscribed plans through the <code>features</code> field. This field does
    not appear in the GET <a href=\"#operation/searchBusinesses\">/v2/business/search</a>
    endpoint. <br />\n          You can now search businesses by features using the
    <code>features__in</code> and <code>features__notin</code> query parameters.\n
    \       </p>\n      <h5>User</h5>\n        <p>\n          We're replacing the
    <code>sidebar_products</code> field with <code>sidebar_pages</code> field.<br
    />\n          This will allow you to control which pages a user can access to
    in a more granular way.<br />\n          You can find the correspondence between
    products and features in the table below, this will be used during the transition
    period.<br />\n          ⚠ Warning: during the deprecation time, if you update
    a user's <code>sidebar_product</code> field and give them <code>presence_management</code>,
    it will give them the <code>available_features</code> <code>diffusion</code> and
    <code>presence_analytics</code>.<br />\n          ⚠ Warning: during the depreciation
    time, if you update a user's <code>sidebar_product</code> field with any value,
    it will give them the <code>posts</code> and <code>bulk_modification</code> features
    if their organization have the feature. <br />\n          ⚠ Warning: during the
    deprecation time, a user having the product <code>presence_management</code> returned
    in the <code>sidebar_product</code> field may have only one of the features <code>diffusion</code>
    and <code>presence_analytics</code>.\n        </p>\n        <p>Deprecated field:
    </p>\n        <ul>\n          <li><code>sidebar_products</code></li>\n        </ul>\n
    \       <table>\n          <thead>\n            <tr>\n              <th>Product</th>\n
    \             <th>Feature</th>\n            </tr>\n          </thead>\n          <tbody>\n
    \           <tr>\n              <td><code>presence_management</code></td>\n              <td><code>diffusion</code>
    and <code>presence_analytics</code></td>\n            </tr>\n            <tr>\n
    \             <td><code>review_management</code></td>\n              <td><code>review_management</code>
    and <code>review_analytics</code></td>\n            </tr>\n            <tr>\n
    \             <td><code>review_booster</code></td>\n              <td><code>review_invite</code></td>\n
    \           </tr>\n            <tr>\n            <tr>\n              <td><code>messages</code></td>\n
    \             <td><code>messages</code></td>\n            </tr>\n            <tr>\n
    \             <td>Managed at Organization level if the Organization has subscribed
    to Google Posts</td>\n              <td><code>posts</code></td>\n            </tr>\n
    \           <tr>\n              <td>Managed at Organization level if the Organization
    has subscribed to Bulk Modification</td>\n              <td><code>bulk_modification</code></td>\n
    \           </tr>\n          </tbody>\n        </table>\n    <p>\n      The impacted
    endpoints are:\n    </p>\n    <ul>\n      <li>GET <a href=\"#operation/getOrganization\">/v2/org/{org_id}</a></li>\n
    \     <li>GET <a href=\"#operation/searchOrganizations\">/v2/org/search</a></li>\n
    \     <li>GET <a href=\"#operation/searchUser\">/v2/user/search</a></li>\n      <li>GET
    <a href=\"#operation/getMyUser\">/v2/user/me</a></li>\n      <li>GET <a href=\"#operation/getUser\">/v2/user/{user_id}</a></li>\n
    \     <li>POST <a href=\"#operation/createUser\">/v2/user</a></li>\n      <li>POST
    <a href=\"#operation/updateUser\">/v2/user/{user_id}</a></li>\n      <li>GET <a
    href=\"#operation/searchBusinesses\">/v2/business/search</a></li>\n      <li>GET
    <a href=\"#operation/searchBusinessesStats\">/v2/business/search/stats</a></li>\n
    \     <li>GET <a href=\"#operation/getBusiness\">/v2/business/{business_id}</a></li>\n
    \   </ul>\n  </li>\n</ul> <h2>2025-04-22</h2> <ul>\n  <li><h3>Adding media support
    to messaging</h3></li>\n  <p>\n    We added support for 3 new message content_types
    : <code>Audio</code>, <code>Video</code> and <code>Document</code>.\n  </p>\n
    \ <p>\n    This means that you will now be able to receive media messages in your
    conversations, and also send them.\n  </p>\n  <p>\n  </p>\n  <table>\n    <caption>\n
    \     ⚠️ Due to channel limitations, some media types are not supported on all
    channels.\n    </caption>\n    <thead>\n      <tr>\n        <th scope=\"col\">Channel</th>\n
    \       <th scope=\"col\">Image</th>\n        <th scope=\"col\">Video</th>\n        <th
    scope=\"col\">Audio</th>\n        <th scope=\"col\">Document</th>\n      </tr>\n
    \   </thead>\n    <tbody>\n      <tr>\n        <th scope=\"row\">Facebook</th>\n
    \       <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n
    \     </tr>\n      <tr>\n        <th scope=\"row\">Instagram</th>\n        <td>✅</td>\n
    \       <td>✅</td>\n        <td>✅</td>\n        <td>❌</td>\n      </tr>\n      <tr>\n
    \       <th scope=\"row\">SMS</th>\n        <td>❌</td>\n        <td>❌</td>\n        <td>❌</td>\n
    \       <td>❌</td>\n      </tr>\n      <tr>\n        <th scope=\"row\">Whatsapp</th>\n
    \       <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n
    \     </tr>\n    </tbody>\n  </table>\n  <p>\n    This changes will reflect in
    all endpoints that deal with messages :\n  </p>\n  <ul>\n    <li><a href=\"#operation/listConversations\">GET
    /v2/conversations</a></li>\n    <li><a href=\"#operation/getConversation\">GET
    /v2/conversations/{conversation_id}</a></li>\n    <li><a href=\"#operation/listMessages\">GET
    /v2/messages</a></li>\n    <li><a href=\"#operation/postMessage\">POST /v2/messages</a></li>\n
    \ </ul>\n  <p>\n    And message webhooks events :\n  </p>\n  <ul>\n    <li><a
    href=\"#operation/message_created\">EVENT message_created</a></li>\n    <li><a
    href=\"#operation/message_updated\">EVENT message_updated</a></li>\n  </ul>\n</ul>
    <h2>2025-02-14</h2> <ul>\n  <li>Webhook configuration API</li>\n  <p>\n    Customers
    with access to the webhook feature can now configure their webhooks directly from
    the API.\n    You can also set webhooks on our website in the settings > integrations
    > webhooks.\n  </p>\n</ul> <h2>2025-01-15</h2> <ul>\n  <li>\n    <h3><code>Content-Type</code>
    validation</h3>\n    <p>\n      Following an upgrade on our webservers, we now
    enforce a validation of <code>Content-Type</code> on all the requests to avoid
    guessing.\n      The default value expected is <code>application/json</code>,
    unless specified on an endpoint.\n      All endpoints with method <code>POST</code>,
    <code>PATCH</code> and <code>PUT</code> are affected.\n    </p>\n  </li>\n  <li>\n
    \   <h3>Removing category_gmb_id usage for <a href=\"#tag/Google-Services\">GmbServices</a>
    endpoints</h3>\n    <p>\n        <b>category_gmb_id</b> is definitely removed,
    use <b>category_gmb_name</b> for the <a href=\"#tag/Google-Services\">GmbServices</a>
    endpoints\n    </p>\n  </li>\n  <li>\n    <h3>Removing <a href=\"#tag/Presence-analytics\">Presence
    analytics</a> endpoints</h3>\n      <p>\n          Presence analytics endpoints
    are removed and replaced by <a href=\"#tag/Presence-analytics/operation/getPresenceAnalyticsMetrics\">Profile
    metrics</a> and <a href=\"#tag/Presence-analytics/operation/getPresenceAnalyticsKeywords\">Profile
    keywords</a> endpoints.\n      </p>\n  </li>\n</ul> <h2>2024-10-15</h2> <ul>\n
    \ <li>\n    <h3>Store Code identification</h3>\n    <p>\n      It is now possible
    to replace business id by business code as path parameter, only for users inside
    the same organization.\n      To do so, you may replace <code>/{business_id}</code>
    by <code>/c-{code}</code>\n      <br/>\n    </p>\n    <p>\n      For example,
    you can now update a business directly from its code using\n      <p>\n      <pre>curl
    -H \"x-APIKey: ${API_KEY}\" --json '{\"address_full\": \"221b Baker Street\"}'
    https://api.partoo.co/v2/business/c-LON-HQ</pre>\n      </p>\n    </p>\n    <p>\n
    \     The following endpoints are affected:<br/>\n      <code>\n        /business/{business_id}<br/>\n
    \       /business/{business_id}/subscription<br/>\n        /business/{business_id}/additional_data<br/>\n
    \       /business/{business_id}/attributes<br/>\n        /business/{business_id}/more_hours<br/>\n
    \       /business/{business_id}/services<br/>\n        /business/{business_id}/services/{service_id}<br/>\n
    \       /business/{business_id}/structured_services<br/>\n        /business/{business_id}/free_form_services<br/>\n
    \       /business/{business_id}/food_menus<br/>\n        /business/{business_id}/place_action_links<br/>\n
    \       /business/{business_id}/business_fields<br/>\n        /publisher_errors/{business_id}<br/>\n
    \     </code>\n    </p>\n    <h4>Explanations</h4>\n    <p>\n      Since the rate
    limit has been put in place, it has become harder to integrate our API while complying
    with this limit.\n      Enabling the search by store code will simplify integrations
    which required business search just to map our internal ids with codes which are
    ids in external.\n    </p>\n    <p>\n      <b>Why the <code>/c-</code> prefix?</b><br/>\n
    \     We believe it is best for an integration to be explicit about requesting
    with a code rather than an id and we don't want to make guess.\n    </p>\n  </li>\n</ul>
    <h2>2024-10-15</h2> <ul>\n <li>\n   <h3>Repeatable URL</h3>\n   <p>\n    Following
    an update on Google's API, <code>REPEATABLE_URL</code> attributes will no longer
    be supported.\n    The impacted endpoints are:\n   </p>\n     <ul>\n       <li>GET
    <a href=\"#operation/getBusinessAttributes\">/v2/business/{business_id}/attributes</a></li>\n
    \      <li>POST <a href=\"#operation/postBusinessAttributes\">/v2/business/{business_id}/attributes</a></li>\n
    \    </ul>\n    <p>\n    Replace any usage of <code>REPEATABLE_URL</code> with
    Place Action Links:\n    </p>\n      <ul>\n        <li>GET: <a href=\"#operation/getPlaceActionLinks\">/business/{business_id}/place_action_links</a></li>\n
    \       <li>POST: <a href=\"#operation/postPlaceActionLink\">/business/{business_id}/place_action_links</a></li>\n
    \     </ul>\n </li>\n</ul> <h2>2024-07-15</h2> <ul>\n  <li>\n    <h3>Business
    address fields are nullable</h3>\n    <p>\n      Address-related fields within
    the Business object (<b>address</b>, <b>address_full</b>, <b>address2</b>, <b>zipcode</b>,
    <b>city</b>, <b>long</b>, <b>lat</b>) can now be <b>null</b> if the business does
    not have an address filled out.<br/>\n      The impacted endpoints are :\n      <ul>\n
    \     <li>GET <a href=\"#operation/searchBusinesses\">/v2/business/search</a></li>\n
    \     <li>GET <a href=\"#operation/getBusiness\">/v2/business/{business_id}</a></li>\n
    \     </ul>\n    </p>\n  </li>\n  <li>\n    <h3>Deprecation of body parameters
    on DELETE endpoints</h3>\n    <p>These body parameters are moved to query parameters
    for these endpoints:<p>\n    <ul>\n      <li>\n        <p>\n          <a href=\"#tag/Organizations/operation/deleteOrganization\">DELETE
    Organization</a>: <code>force</code>\n        </p>\n      </li>\n      <li>\n
    \       <p>\n          <a href=\"#tag/Custom-Fields/operation/deleteCustomFields\">DELETE
    Custom Field</a>: <code>forced_update</code> becomes <code>force</code>\n        </p>\n
    \     </li>\n    </ul>\n    <p>This route with body parameter is replaced by new
    route with path parameters:<p>\n    <ul>\n      <li>\n        <p>\n          <a
    href=\"#tag/Businesses/operation/deprecatedDeleteBusinessServices\">DELETE Google
    Services with body parameter route</a> is deprecated and replaced with <a href=\"#tag/Businesses/operation/deleteBusinessServices\">DELETE
    Google Services with path parameter route</a>\n        </p>\n      </li>\n    </ul>\n
    \   <p>All these body parameters will be removed on January 15th 2025, please
    update your integrations by then.</p>\n  </li>\n  <li>\n    <h3>Renamed <code>forced_update</code>
    parameter</h3>\n    <p>\n      The <code>forced_update</code> parameter in the
    <a href=\"#tag/Custom-Fields/operation/putUpdateCustomFields\">PUT Custom Field</a>
    endpoint has been renamed to <code>force</code>.\n    </p>\n  </li>\n  <li>\n
    \   <h3>Webhooks are now signed</h3>\n    In order to increase security and enable
    you to verify that incoming traffic comes from Partoo, we have enabled signatures
    on webhooks.\n    You may find a dedicated section on <a href=\"#tag/Webhooks/Webhook-security\"
    title=\"webhook security\">Webhook Security</a>\n  </li>\n</ul> <h2>2024-06-24</h2>
    <ul>\n  <li>\n    <h3>Swagger Corrections \U0001F389</h3>\n    <p>\n      Our
    Swagger file has been cleaned to make it compliant with standard OpenAPI 3.0.<br/>\n
    \     No change in API is to expect and no change is required in your existing
    integrations. <br/>\n      New integrations can now leverage on tools to automate
    boilerplate code.\n    </p>\n  </li>\n</ul> <h2>2024-02-29</h2> <ul>\n  <li>\n
    \     <h3>Publisher Errors Reporting Endpoint</h3>\n      <p>\n        Introduced
    a new endpoint to report and detail errors detected by publishers in specific
    sections and fields of business information edits. This feature allows users to
    receive targeted feedback on errors identified by different publishers, enabling
    more precise and efficient corrections. You can find it <a href=\"#tag/Presence/operation/postPublisherErrors\">here</a>\n
    \     </p>\n    </li>\n</ul> <h2>2023-07-15</h2> <ul>\n    <li>\n      <h3>Rate
    limiting</h3>\n      <p>\n          Due to recent incidents with faulty integrations
    consuming too much resources from our API and causing unavailability for others,
    we’ve decided to put a <a href=\"#section/Rate-Limiting\">rate limit</a> for each
    organization on API integrations.\n          All organizations will be limited
    to <b>300 API calls per minute</b>.\n      </p>\n    </li>\n    <li>\n        <h3>Presence
    Analytics Endpoints (DEPRECATION)</h3>\n        <ul>\n            <li>\n                Google
    will discontinue its current analytics API endpoint <strong>on 20/02/2023</strong>
    in favour of their new analytics API.\n                The endpoints mentioned
    below will be deprecated in response to this change.\n            </li>\n            <ul>\n
    \               <li>GET <a href=\"#operation/getPresenceAnalytics\">/v2/presence_analytics</a></li>\n
    \               <li>GET <a href=\"#operation/exportPresenceAnalytics\">/v2/presence_analytics/export</a></li>\n
    \           </ul>\n        </ul>\n        <ul>\n          <li>\n            Partoo
    will release new endpoints soon to provide access to the new Google analytics.\n
    \         </li>\n        </ul>\n    </li>\n    <li>\n        <h3>Posts Endpoints</h3>\n
    \       <ul>\n            <li>\n                Google will discontinue its current
    analytics API endpoint <strong>on 20/02/2023</strong>.\n                The insights
    related to Google Local Posts will be totally removed from their API.\n                Therefore
    views and clicks on Google Local Posts will no longer be available on Partoo.\n
    \               Facebook insights are still available.\n            </li>\n                <li>GET
    <a href=\"#operation/searchPost\">/v2/posts</a></li>\n            </ul>\n        </ul>\n
    \   </li>\n</ul>\n<h2>2023-04-17</h2> <ul>\n    <li>\n        <h3>Messaging Endpoints</h3>\n
    \       <ul>\n            <li>\n            Release of the endpoints related to
    the Business Messages product\n            </li>\n            <ul>\n                <li>Conversations</li>\n
    \               <li>Messaging Settings</li>\n                <li>Messages</li>\n
    \               <li>Webhooks</li>\n            </ul>\n        </ul>\n    </li>\n</ul>\n<h2>2023-04-15</h2>
    <ul>\n    <li>\n        <h3>Google Post endpoints (DEPRECATION)</h3>\n        <ul>\n
    \           <li>\n                Due to the possibility to create Post on Google
    + Facebook on <a href=\"#tag/Posts\">/posts</a> endpoints.\n                The
    following endpoint will be deleted :\n            </li>\n        </ul>\n    </li>\n
    \   <li>\n        <h3>Google Services endpoints (BREAKING CHANGES)</h3>\n        <ul>\n
    \           <li>\n                Changes occurrences of <b>category_gmb_id</b>
    to <b>category_gmb_name</b> for the <a href=\"#tag/Google-Services\">GmbServices</a>
    endpoints in :\n                    <ul>\n                        <li>request
    body</li>\n                        <li>response body</li>\n                    </ul>\n
    \               The following endpoint will be impacted :\n            </li>\n
    \           <ul>\n                <li>GET <a href=\"#operation/getServicesSuggestions\">/v2/services/suggestions</a></li>\n
    \               <li>GET <a href=\"#operation/getBusinessServices\">/v2/business/{business_id}/services</a></li>\n
    \               <li>POST <a href=\"#operation/postBusinessFreeFormServices\">/v2/business/{business_id}/free_form_services</a></li>\n
    \               <li>POST <a href=\"#operation/postBusinessStructuredServices\">/v2/business/{business_id}/structured_services</a></li>\n
    \           </ul>\n        </ul>\n    </li>\n</ul> <h2>2022-10-15</h2> <ul>\n
    \   <li>\n        <h3>Categories endpoints (DEPRECATION)</h3>\n        <ul>\n
    \           <li>\n                We are changing our categories endpoints to
    better reflect their use.\n                There are now 2 new parameters for
    both endpoints :\n                <ul>\n                    <li>with_names: adds
    in the return payload the list of translations in each available language</li>\n
    \                   <li>with_countries: adds in the return payload the list of
    countries in which the category is available</li>\n                </ul>\n            </li>\n
    \           <h3>Deprecated endpoint</h3>\n            <ul>\n                <li>GET
    <a href=\"#operation/getCategoryDeprecated\">/v2/category/{category_id}</a> replaced
    by GET <a href=\"#operation/getCategory\">/v2/categories/{category_id}</a></li>\n
    \           </ul>\n            <h3>Changed endpoint</h3>\n            <ul>\n                <li>\n
    \                   GET <a href=\"#operation/getCategories\">/v2/categories</a>\n
    \                   <ul>\n                        <li><code>country</code> will
    not appear in the field <code>names</code> after 2022-10-15\n                        <li>The
    countries list in which a category is available is now in the <code>countries</code>
    field, use the parameter <code>with_countries</code></li>\n                        <li><code>names</code>
    will not appear in the returned payload by default, use the parameter <code>with_names</code>
    to get it</li>\n                    </ul>\n                </li>\n            </ul>\n
    \       </ul>\n    </li>\n    <li>\n        <h3>Business integration data (DEPRECATION)</h3>\n
    \       <ul>\n            <li>\n                The following endpoint will be
    deleted :\n            </li>\n            <ul>\n                <li>GET <a href=\"#operation/getBusinessIntegrationStatus\">/v2/business/{business_id}/integration_status</a></li>\n
    \               <li>GET <a href=\"#operation/getBusinessPartnerUrls\">/v2/business/{business_id}/partner_urls</a></li>\n
    \           </ul>\n        </ul>\n    </li>\n    <li>\n      <h3>Presence (DEPRECATION)</h3>\n
    \       <ul>\n          <li>The following endpoint will be deleted : </li>\n            <ul>\n
    \               <li>GET <a href=\"#operation/getBusinessInfo\">/v2/publisher_states/business_info</a></li>\n
    \               <li>GET <a href=\"#operation/getBusinessesInfo\">/v2/publisher_states/businesses_info</a></li>\n
    \           </ul>\n            <li>All deleted information are now available on
    following endpoint :</li>\n            <ul>\n                <li>GET <a href=\"#operation/getPublisherStates\">/v2/publisher_states</a></li>\n
    \           </ul>\n        </ul>\n    </li>\n  </ul>\n  <ul>\n    <li>\n      <h3>Review
    Booster (DEPRECATION)</h3>\n      <ul>\n        <li>The parameter template_id
    will be deleted from endpoint : </li>\n        <ul>\n            <li>POST <a href=\"#tag/Review-Booster/paths/~1review_booster~1send_invitation/post\">/v2/review_booster/send_invitation</a></li>\n
    \           <li>There will be no impact on template already used by users.</li>\n
    \       </ul>\n      </ul>\n    </li>\n</ul>\n<h2>2022-07-15</h2> <ul>\n  <li><h3>Ordering
    of search results</h3>\n    <ul>\n      <li>We are aligning our ways of sorting
    paginated results across all endpoints.\n      All search operations offering
    ordering now provide a <code>order_by</code> parameter.\n      </li>\n      <h3>Changed
    endpoints</h3>\n      <ul>\n          <li>GET <a href=\"#operation/searchReviews\">/v2/reviews</a></li>\n
    \         <li>GET <a href=\"#operation/getCategories\">/v2/categories</a></li>\n
    \         <li>GET <a href=\"#operation/getPresenceAnalytics\">/v2/presence_analytics</a></li>\n
    \     </ul>\n      <h3>Endpoints now providing ordering</h3>\n      <ul>\n          <li>GET
    <a href=\"#operation/searchBusinesses\">/v2/business/search</a></li>\n          <li>GET
    <a href=\"#operation/searchUser\">/v2/user/search</a></li>\n      </ul>\n    </ul>\n
    \ </li>\n</ul> <ul>\n  <li>\n      <h3>Address details (DEPRECATION)</h3>\n      <ul>\n
    \         <li>\n          The new field <code>address_full</code> will replace
    <strong>deprecated</strong> <code>address_details</code> that <b>will be deleted
    from July, 2022</b> :\n          </li>\n          <ul>\n              <li>\n                  <code>address_full</code>
    <i>(string)</i> is the <b>new unique address field</b> allowing not to split address
    in several fields :<br />\n                  For example : <i>130 Rue du Mont-Cenis.</i>\n
    \             </li>\n              <li>\n                  <code>address_details</code>
    will be <b>deleted</b> from following endpoints :\n              </li>\n              <ul>\n
    \                 <li>POST <a href=\"#operation/createBusiness\">/v2/business</a></li>\n
    \                 <li>GET <a href=\"#operation/getBusiness\">/v2/business/{business_id}</a></li>\n
    \                 <li>POST <a href=\"#operation/updateBusiness\">/v2/business/{business_id}</a></li>\n
    \                 <li>GET <a href=\"#operation/searchBusinesses\">/v2/business/search</a></li>\n
    \             </ul>\n          </ul>\n      </ul>\n      <blockquote>\n          <p>⚠️
    It's <b>not possible</b> to use <code>address_full</code> with <code>address_details</code></p>\n
    \     </blockquote>\n  </li>\n</ul> <h2>2022-01-15</h2> <ul>\n  <li><h3>Pagination
    of search results</h3>\n    <ul>\n      <li>We are currently implementing a possibility
    to extend pagination.\n      Following search operations now offer a pagination
    extension up to 100 items per page using <code>per_page</code> parameter.\n      </li>\n
    \     <ul>\n          <li>GET <a href=\"#operation/searchReviews\">/v2/reviews</a></li>\n
    \         <li>GET <a href=\"#operation/searchBusinesses\">/v2/business/search</a></li>\n
    \         <li>GET <a href=\"#operation/searchUser\">/v2/user/search</a></li>\n
    \     </ul>\n    </ul>\n  </li>\n</ul> <ul>\n  <li><h3>API URLs changes (DEPRECATION)</h3>\n
    \   <ul>\n      <li>Sandbox's API is now accessible at <a href=\"https://api.sandbox.partoo.co\">api.sandbox.partoo.co</a>.
    There is a redirection from <a href=\"https://api.sandbox.partoo.co\">sandbox.api.partoo.co</a>
    to <a href=\"https://api.sandbox.partoo.co\">api.sandbox.partoo.co</a> that <b>will
    be deprecated</b> on <b>January 15th, 2022</b>.</li>\n    </ul>\n  <li><h3>Address
    (DEPRECATION)</h3>\n    <ul>\n      <li>\n        The following endpoints will
    be deleted on <b>January 15th, 2022</b>:\n        <ul>\n          <li>GET <a href=\"https://developers.partoo.co/rest_api/v2/#operation/getStreetTypes\">/v2/GET
    street types</a></li>\n          <li>GET <a href=\"https://developers.partoo.co/rest_api/v2/#operation/getNumberSupplements\">/v2/GET
    number supplements</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n
    \ <li><h3>Categories (DEPRECATION)</h3>\n    <ul>\n      <li>\n        To improve
    consistency against v2/categories endpoint, following changes have been made on
    GET /v2/category/{category_id}:\n        <ul>\n          <li><i>gmb_id</i> field
    has been added to response\n          <li><i>id</i> in response now return an
    integer</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul> <h2>2021-12-14</h2>
    <ul>\n  <li><h3>Categories (DEPRECATION)</h3>\n    <ul>\n      <li>Old category
    ids (format: ‘5109c3a237zdc544d8e267378’) are not accepted anymore when creating/updating
    businesses or in Categories endpoints requests. Please use new category ids (format:
    ’gcid:climbing_gym’). Available categories can be found using this <a href=\"https://developers.partoo.co/rest_api/v2/#operation/getCategories\">endpoint</a>.</li>\n
    \   </ul>\n  </li>\n</ul> <h2>2021-07-15</h2> <ul>\n  <li><h3>Categories (DEPRECATION)</h3>\n
    \   <ul>\n      <li>GET /v2/category/search has been deprecated. In order to search
    through Partoo categories, you can use <a href=\"https://developers.partoo.co/rest_api/v2/#operation/getCategories\">/v2/categories</a>
    offering more advanced filtering options.</li>\n    </ul>\n  <li><h3>API keys
    used to login users (DEPRECATION)</h3>\n    <ul>\n      <li>For security reasons,
    the following routes have been deprecated:</li>\n      <ul>\n        <li>POST
    <a href=\"https://developers.partoo.co/rest_api/v2/#operation/generateAPIKey\">/v2/authorize</a></li>\n
    \       <li>GET <a href=\"https://developers.partoo.co/rest_api/v2/#operation/listAPIKeys\">/v2/authorize/list</a></li>\n
    \       <li>POST <a href=\"https://developers.partoo.co/rest_api/v2/#operation/revokeAPIKey\">/v2/authorize/revoke</a></li>\n
    \     </ul>\n      <li>If you are still using them, you need to migrate to <a
    href=\"https://developers.partoo.co/rest_api/v2/#tag/Connection-Tokens\">/v2/connection/generate_token</a>
    route,\n      which has a similar signature than the deprecated authorization
    endpoints.</li>\n    </ul>\n  </li>\n  <li><h3>Business endpoints (UPDATES AND
    DEPRECATION)</h3>\n    <ul>\n      <li>To improve business data consistency and
    its diffusion on directories, changes below have been made on the following endpoints:\n
    \     <ul>\n        <li>GET <a href=\"https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses\">/v2/business</a></li>\n
    \       <li>POST <a href=\"https://developers.partoo.co/rest_api/v2/#operation/createBusiness\">/v2/business</a></li>\n
    \       <li>GET <a href=\"https://developers.partoo.co/rest_api/v2/#operation/getBusiness\">/v2/business/{business_id}</a></li>\n
    \       <li>POST <a href=\"https://developers.partoo.co/rest_api/v2/#operation/updateBusiness\">/v2/business/{business_id}</a></li>\n
    \     </ul>\n      </li>\n      <li>\n        Impacted fields:\n        <ul>\n
    \         <li>‘clean_name’, ‘video’, ‘siret’ and ‘news’ fields have been removed
    from params and from response</li>\n          <li>‘country’ standardized code
    format</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<!-- TEMPLATE\n\n
    \ <ul>\n    <li><h3>Title</h3>\n      <ul>\n        <li>Description</li>\n        <ul>\n
    \         <li>Change ...</li>\n          <li>Change ...</li>\n          <li>Change
    ...</li>\n        </ul>\n      </ul>\n    </li>\n  </ul>\n-->\n"
- name: Getting started
  description: "## Authentification\nThe authentication system on Partoo API is using
    API Key that should be put in the header of the request (the name\nof the header
    is `x-APIKey`).\nAn api_key is linked to a user. This user's role will give you
    different access level to the API features.\n\n|  Security Scheme Type |  API
    Key |\n|-----------------------|----------|\n| Header parameter name | x-APIKey
    |\n\n## Environments\nWe provide two public environments, **Sandbox** and **Production**.\n-
    **Sandbox** is a playground environment for you to test your API integration without
    having to worry about side effects.\n- **Production** is where your \"real\" data
    should live. Changes made there are propagated to publishers.\n\n## First steps\nFirst,
    it's a good idea to start building and testing your integration in the Sandbox
    environment.\n\nAsk your Partoo Account Manager to send you an API Key for Sandbox.
    You'll need to pass this API Key in all your API calls in order\nto be authentified,
    in the header `x-APIKey`. More details in the <a href=\"#section/Authentication\">Authentication
    section</a>.\n\nFrom there, you can call any route that your user has access to.
    To know the exact API endpoint to use, you can click\non the route url above the
    \"Response samples\", and this will give you the urls for Production and Sandbox.\n\nIf
    you need a UI access to Sandbox, ask your Partoo Account Manager for one. Be aware,
    Sandbox environment is empty by default,\nand has limited functionalities.\n\nOnce
    you're confident that your integration is production ready, ask your Partoo Account
    Manager for a user access in Production,\nand to give you access to the API Key
    Manager tool. From there, you'll be able to generate and manage your own API Keys
    inside the Partoo Web Application.\n\nYou can now use the Production API Key to
    start calling the Production API.\n\n## Error codes\nPartoo uses conventional
    HTTP response codes to indicate the success or failure of an API request.\nIn
    general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate
    an error that failed given the information provided.\nCodes in the 5xx range indicate
    an error with Partoo servers (these are rare).\nList of potential error code\n\n###
    400 - Bad request\n```json\n\"error\": {\n    \"json\": { }\n}\n```\n### 401 -
    No valid API key provided\n```json\n\"error\": {\n    \"authentication\": \"User
    not authenticated\"\n}\n```\n### 403 - The API key doesn't have permissions to
    perform the request\n```json\n\"error\": {\n    \"authorization\": \"Operation
    not allowed\"\n}\n```\n### 404 - The requested resource doesn't exist\n```json\n\"error\":
    {\n    \"json\": \"Resource not found\"\n}\n```\n### 415 - Invalid media type\nOur
    API framework requires `Content-Type` header to be provided as `application/json`
    on `POST`, `PUT` and `PATCH` operations.\n\nIf your API integration doesn't properly
    send this header, an error may appear\n```json\n{\n    \"errors\": {\n        \"json\":
    \"Unsupported media type. Please use application/json\"\n    }\n}\n```\n\n###
    429 - Too Many Requests\nSee [Rate Limiting](#tag/Getting-started/Rate-Limiting)\n\n\n##
    Security Disclaimer\n**The Partoo Rest API is meant to be used only from a server
    that you control.** You'll need an API Key in order to make API calls,\nand you
    should treat this key as secret as a password. The API Key should **never** be
    transmitted to or included into the front-end.\nIf you need to make calls from
    a front-end, you should proxy them by a server that you control, that will add
    your API Key.\n\nSome functionalities are disabled in Sandbox, to avoid having
    a production impact:\n- Business data will not be sent to the different publishers
    such as Google, Facebook, etc.\n- It's not possible to import Google and Facebook
    account listings.\n- There's no real reviews data, or real analytics data. The
    account starts empty, but can be filled by fake data if needed. For this, contact
    you Partoo Account Manager.\n\n## Rate Limiting\nIn order to keep service available
    for everyone, our APIs are protected using a Rate Limit.\n\nEach organization
    is limited to **300 calls per minute** by default.\nIf your integration requires
    more calls for any reason, get in touch with your customer success to update this
    limit, with review from our Tech team.\n\nAny call beyond the reached limit will
    result in an error with [status code 429](https://developer.mozilla.org/fr/docs/Web/HTTP/Status/429).\nA
    http header `Retry-After` is added to the response to hint when a query can be
    retried (60s later).\n\n\n## Resources ans roles\n\n\n### Resources structure\nPartoo
    data is organised around 5 main resources:\n1. **Provider:** A provider represents
    the entity that signs the contract with the client using Partoo solution & products.\nAn
    obvious example of provider is Partoo itself but a provider can also be a reseller
    of Partoo solutions.\nA provider owns `organizations`, `businesses`, `users` and
    `groups`. If you are a Partoo reseller there will be a provider resource representing\nyou
    inside Partoo app.\n2. **Organization:** An organization represents the legal
    entity, most likely a commercial company, that owns `businesses` (or listings).\nIf
    you are a Partoo client there are one or several organizations representing your
    companies.\nAn organization belongs to a `provider`.\n3. **User:** A user can
    be a Partoo app user or Partoo API user.\nA user belongs to an `organization`
    and has a `role` which gives him different levels of access on the different resources
    on Partoo (see section below).\n4. **Business:** A business represents a listing.
    It belongs to an `organization`\n5. **Group:** A group contains businesses, each
    organization can have several groups of businesses.\n\n### Roles\nTo use Partoo
    Rest API, you need an `api_key` (see authentication section). An `api_key` authenticates
    a user and each user has a `role`.\n\nA `role` defines for each resource (for
    instance `user`) a`READ` and/or `WRITE` access with the scope on which this access
    can be used.\n\nFor instance a user with `BUSINESS_MANAGER` role has `WRITE` access
    on its own user and `READ` acces to all the users of its organization.\n\nFor
    now there are 5 roles available:\n- `PROVIDER` role is meant for reseller admin
    user. It can manage organizations, users and businesses of a provider\n- `ORG_ADMIN`
    role is meant for client admin user. It can manage the user and businesses of
    its organization\n- `GROUP_MANAGER` role is meant for client group manager. It
    can manage several businesses and users that belong to the group he managed\n-
    `BUSINESS_MANAGER` role is meant for client business manager. It can manage several
    businesses, only if these businesses are in the same group.\n- `PUBLISHER` role
    is meant for publisher wanting to use Partoo as a data source. It can read Partoo
    businesses subscribed to presence management product\n\n#### PROVIDER\n`PROVIDER`
    role is meant for reseller admin user. It can manage its provider organizations,
    users and businesses.\n\n#### Read access\n| Resource     |\tScope\t| Details
    \                                             |\n| ------------ | -------- | ----------------------------------------------------
    |\n| User\t     | Provider | Can access the users that shares its provider        |\n|
    Organization | Provider | Can access the organizations that shares its provider|\n|
    Group        | Provider | Can access the groups that share its provider        |\n|
    Business\t | Provider | Can access the businesses that share its provider    |\n|
    Category\t | All\t    | Can access all categories                            |\n\n####
    Write access\n| Resource     |\tScope\t    | Details                                          |\n|
    ------------ | ------------ | ------------------------------------------------
    |\n| User\t     | Provider     | - Can create user, it will share its provider
    <br> - Can update user that shares its provider <br> - Can give role `ORG_ADMIN`
    and `BUSINESS_MANAGER` to user |\n| Organization | Provider     | - Can create
    organization, it will share its provider <br> - Can update org that shares its
    provider |\n| Group        | Provider     | - Can create group, it will share
    its provider <br> - Can update group that shares its provider |\n| Business     |
    Provider     | - Can create business, they will share its provider (and its org_id
    if no org_id given) <br> - Can update businesses that shares its provider |\n|
    Category\t | not writable\t|                                                  |\n\n###
    ORG_ADMIN\n`ORG_ADMIN` role is meant for client admin user. It can manage its
    organization users and businesses.\n\n#### Read access\n| Resource     |\tScope\t
    \   | Details                                           |\n| ------------ | ------------
    | ------------------------------------------------- |\n| User\t     | Organization
    | Can access the users that shares its org_id       |\n| Organization | Organization
    | Can access only its own org                       |\n| Group        | Organization
    | Can access the group that shares its org_id       |\n| Business\t | Organization
    | Can access the businesses that shares its org_id  |\n| Category\t | All\t        |
    Can access all categories                         |\n\n#### Write access\n| Resource
    \    |\tScope\t    | Details                                           |\n| ------------
    | ------------ | ------------------------------------------------- |\n| User\t
    \    | Organization | - Can create user, it will share its provider and its `org_id`.
    <br> - Can update user that shares its `org_id` <br> - Can give the role `GROUP_MANAGER`
    and `BUSINESS_MANAGER` to its user |\n| Organization | Organization | - Can update
    itself <br> - Cannot create new org. |\n| Group        | Organization | - Can
    create group, it will share its provider and its `org_id` <br> - Can update group
    that shares its `org_id`\n| Business\t | Organization | - Can create business,
    it will share its provider and its `org_id` <br> - Can update businesses that
    shares its `org_id`|\n| Category\t | not writable |                                                   |\n\n###
    GROUP MANAGER\n`GROUP_MANAGER` role is meant for client group manager. It can
    manage several businesses and users that belong to the group he managed.\n\n####
    Read access\n| Resource     |\tScope\t    | Details                                            |\n|
    ------------ | ------------ | --------------------------------------------------
    |\n| User\t     | Organization | Can access the `ORG_ADMIN` that shares its `org_id`
    and the `GROUP_MANAGER`and `BUSINESS_MANAGER` that belong to its group |\n| Organization
    | Organization | Can access only its own org                        |\n| Group
    \       | Group        | Can access only its group                          |\n|
    Business\t | Group        | Can access the businesses that belong to its group
    |\n| Category\t | All\t        | Can access all categories                          |\n\n####
    Write access\n| Resource     |\tScope\t    | Details                                            |\n|
    ------------ | ------------ | --------------------------------------------------
    |\n| User\t     | Group        | - Can create user, it will share its provider,
    its `org_id` and its `group_id`. <br> - Can update user that shares its `org_id`
    <br> - Can only give the role `BUSINESS_MANAGER` to its user |\n| Organization
    | No access    |                                                    |\n| Group
    \       | Group        | - Can update its own group <br> - Cannot create group
    |\n| Business     | Group        | - Can update businesses that belong to its
    group <br> - Cannot create business |\n| Category\t | not writable |                                                    |\n\n###
    BUSINESS_MANAGER\n`BUSINESS_MANAGER` role is meant for client business manager.
    It can manage several businesses, only if these businesses are in the same group.\n\n####
    Read access\n| Resource     |\tScope\t    | Details                                           |\n|
    ------------ | ------------ | -------------------------------------------------
    |\n| User\t     | Organization | Can access the users that shares its org_id       |\n|
    Organization | Organization | Can access only its own org                       |\n|
    Group        | Group        | Can access only its group                         |\n|
    Business\t | Business     | Can access the businesses that it has direct access
    to |\n| Category\t | All\t        | Can access all categories                         |\n\n####
    Write access\n| Resource     |\tScope\t    | Details                                           |\n|
    ------------ | ------------ | -------------------------------------------------
    |\n| User\t     | User         | - Can update its user only                        |\n|
    Organization | No access    |                                                   |\n|
    Group        | No access    |                                                   |\n|
    Business\t | Business     | - Can update businesses that it has direct access
    to <br> - Cannot create business |\n| Category\t | not writable |                                                   |\n\n###
    PUBLISHER\n`PUBLISHER` role is meant for publisher wanting to use Partoo as a
    data source. It can read Partoo businesses subscribed to presence management product.\n\n####
    Read access\n| Resource     |\tScope\t                         | Details                                |\n|
    ------------ | --------------------------------- | --------------------------------------
    |\n| User\t     | No access                         |                                        |\n|
    Organization | All                               | Can access all Partoo organizations
    \   |\n| Group        | No access                         |                                        |\n|
    Business\t | Subscribed to Presence Management | Can access the businesses subscribed
    to presence management product |\n| Category\t | All\t                             |
    Can access all categories              |\n\n## Technical Support\nFor any questions
    related to the API functionality, please contact the technical support team at
    api@partoo.fr.\n"
- name: ApiKeys
  description: 'In this section you will have all the operation to list/information/revoke/update
    api keys that can be used to authenticate user either on the REST API or on the
    JS API. A user has access to it''s own api keys. Only ORG_ADMIN and PROVIDER users
    can access api keys type BOT.

    '
- name: Businesses
  description: "<p>A <code>business</code> object contains all the details related
    to a local store. All the businesses created will be grouped under your <code>organization</code>.
    The organization is created at the onboarding phase, by Partoo. <p>In this section,
    is explained how a business can be created, updated or retrieved.\n"
- name: Business Fields
  description: 'These endpoints give you the list of all the fields that are available
    for the business / organization / provider, grouped by section. <p>A `section`
    corresponds to the tabs in the Business Edit view of    Partoo UI. **Examples:**
    *Coordinates, Description, Custom Fields...* <p>Each section contains an array
    of fields that are displayed within it. **Examples:** *Name, Country, Email...*
    <p>**For each field**, these endpoints give you the `permissions` for each fields,
    depending on your role: <li>`enabled` Your right to write on a field, given by
    roles less restricitves than yours. <li>`enabled_for_subroles` The right to write
    on a field you give to roles more restrictives than yours. <p>**For example**:
    <li>If the user is **ORG_ADMIN**, `enabled_for_subroles` describes the permissions
    of the field for all the GROUP_MANAGER and BUSINESS_MANAGER of the given organization.
    <li>If the user is **PROVIDER**, `enabled_for_subroles` describes the permissions
    of the field for all the ORG_ADMIN, GROUP_MANAGER and BUSINESS_MANAGER of the
    given provider. <p>**For each `custom_fields`**, these endpoints also give you
    their `metadata`: <li>Type, id and order for all of them <li>Constraints such
    as minimum and maximum for a number or list of values for a select. <p>See the
    response schema below for more details about each type metadata.

    '
- name: Categories
  description: |
    Categories describe your business and has a huge impact on its discoverability on directories.
    For each business, you will need to pass at least one category id (example: <i>"gcid:restaurant"</i>) and up to 10.
    Please note that the order you pass to business.categories array is important: <b>the first category id</b> should correspond to <b>the most relevant category</b> for your business.

    You can find below all available operations that will let you get more information about categories you can use on Partoo.
- name: Connection Tokens
  description: 'In this section you will have all the operations to create/check/revoke
    connection tokens that can be used to authenticate users on the JS SDK or to build
    a SSO.</br>

    '
- name: Custom Fields
  description: '<p>All operations available on Custom Fields metadata : creation,
    update and deletion of custom fields. <p>⚠️ <b>What are Custom fields ?</b> <p>Custom
    Fields allow Enterprise Administrators to add custom data fields to businesses
    in Partoo / Localoo under different formats (List, Text, Number…) in order to
    create a central datahub for local information. These fields can be used to: <li>Automatically
    feed other tools (Store locator, website, CRM, Chatbot...) from Partoo / Localoo.
    <li>Allow local users to fill custom fields in order to transmit data from local
    to central. <p>Once created, Custom Fields values can be updated like any other
    business field. <p>To handle custom fields values for businesses, <a href="#tag/Businesses">see
    business endpoints</a>. <p>To recover the list of custom fields available for
    a business <a href="#operation/getBusinessFieldsForOrg">see GET business fields
    endpoint</a>.

    '
- name: Custom Fields Section
  description: "<p>All operations on <b>Custom Field Sections</b>: retrieval, creation,
    update, and deletion of custom field sections.  <p>⚠️ <b>What are Custom Field
    Sections ?</b> <p>Custom Field Sections are used to group related custom fields
    together for better organization and management. Each section can contain multiple
    custom fields, allowing you to structure, order and categorize your custom fields
    effectively.\n"
- name: Feedback Management
  description: |
    <b>⚠️ This feature is available only for businesses subscribed to Feedback Management. ⚠️</b>

    All available operation regarding the management of your feedbacks.

    The Feedback Management API is currently in **BETA**, therefore the following endpoints are subject to modification,
    given a 2 week notice.

    If you are planning to use any of them, please notify us
    so we will be able to keep you informed about upcoming changes.
- name: Google
  description: "All the operations you can perform on Google. \n"
- name: Groups and Sections
  description: |
    <h2>Introduction</h2> <p>
        Our group system offers flexible organization of businesses through a comprehensive
        system of Groups and Sections. Businesses can belong to multiple groups, and groups
        are organized into logical sections for easier management and filtering.
    </p>
    <h2>Key Features</h2> <ul>
        <li>A Business can belong to multiple Groups simultaneously</li>
        <li>Users with the <code>BUSINESS_MANAGER</code> role can manage businesses from multiple Groups</li>
        <li>Groups are organized into Sections for efficient filtering and organization</li>
    </ul>
    <h2>Groups Architecture</h2> <img src="https://partoo-api-doc.s3.eu-west-1.amazonaws.com/groups_example.png" />
    <p>Here, Country / Facade Color / Service are the sections in which groups are organized.</p> <p>A business can belong to any combination of these groups, for example:</p> <ul>
        <li>France / Blue</li>
        <li>Spain / Green / Red / Bakery</li>
        <li>Italy / Pharmacy</li>
    </ul>
    <h3>Filtering</h3>
    <p>Groups are used as a filtering system, either to filter businesses by group in our different pages (such as our Analytics pages), or to assign multiple businesses to a user using groups:</p>
    <ul>
      <li>When selecting different groups from the same section, the system will consider the selection as an <b>"OR"</b> condition. Example: selecting "France" and "Spain" will return all businesses that belong to <b>either</b> "France" <b>or</b> "Spain".</li>
      <li>When selecting groups from different sections, the system will consider the selection as an <b>"AND"</b> condition. Example: selecting "France" and "Blue" will return all businesses that belong to <b>both</b> "France" <b>and</b> "Blue".</li>
    </ul>
    <h2>Group Manager Access</h2>
    <p>
        Users with the <code>GROUP_MANAGER</code> role can manage businesses using group combinations.
        A business filtering using groups is what we call an <b>access</b>. For example, the access "France/Bakery" will return all businesses that belong to the "France" group and the "Bakery" group.
    </p>
    <p>
       A <code>GROUP_MANAGER</code> can be assigned to one or multiple accesses, and will be able to manage all businesses that belong to the groups included in these accesses.
    </p>
    <h3>Example</h3>
    <p>
        A <code>GROUP_MANAGER</code> can be set up to manage all Bakery businesses in France with the access "France/Bakery":
    </p>
    <img src="https://partoo-api-doc.s3.eu-west-1.amazonaws.com/groups_single_access.png" />
    <p>
        For more complex scenarios, multiple accesses can be created for the same user. For example, this user can manage:
    </p> <ul>
        <li>All banks in France</li>
        <li>All green pharmacies in Italy</li>
    </ul>
    <img src="https://partoo-api-doc.s3.eu-west-1.amazonaws.com/groups_multiple_accesses.png" />
    <h2>Assigning groups to businesses and accesses to users</h2>
    <ul>
        <li>You can assign businesses to a group using the <a href="#operation/createGroup">create group endpoint</a> or the <a href="#operation/updateGroup">update group endpoint</a>.</li>
        <li>For a single business, you can specify its groups using the <code>groups</code> field during the creation or update of the business using the <a href="#operation/createBusiness">create business endpoint</a> or the <a href="#operation/updateBusiness">update business endpoint</a>.</li>
        <li>You can assign accesses to a <code>GROUP_MANAGER</code> user using the <code>accesses</code> field during the creation or update of the user using the <a href="#operation/createUser">create user endpoint</a> or the <a href="#operation/updateUser">update user endpoint</a>.</li>
    </ul>
    <p>
        If you have any questions about implementing the groups system, please reach out to our technical support team at <a href="mailto:api@partoo.fr">api@partoo.fr</a>.
    </p>
- name: Holidays
  description: "**Holidays** Retrieve a list of upcoming holidays for the specified
    country\n"
- name: Messages
  description: |
    <b>⚠️ This feature is available only for businesses subscribed to the Messages Product. ⚠️</b>
    All the operations you can perform on Messages and Conversations.

    Conversations happens between a Business and a consumer that wants to get
    in touch with the business.

    A Consumer can reach out to the business on one of the supported messaging
    channels (Google, Facebook, Instagram, SMS). It will then create a new
    Conversation.

    ⚠️ When dealing with `Instagram` conversations, there are some requirements that you have to follow :
    - You must not store consumer media (images, stories, ...). You can store
    the media URL, but not it's content.
    - If you store conversation messages, you must also implement the
    [Message Deleted](#operation/message_deleted) webhook. When a
    Message Deleted event is received, you
    must delete the stored content of the message.
- name: Message Reply Templates
  description: |
    <b>⚠️ This feature is available only for businesses subscribed to the Messages Product. ⚠️</b>

    ↳ Perform all operations on Message Reply Templates setup.

    Reply Templates for Messages allow users to send pre-made messages to customers, ensuring quicker responses while maintaining the brand’s tone of voice.

    ℹ️ The message content can be dynamically changed using placeholders.<br/>
    Example: "Hello {{client_full_name}}, how can I help you today?"<br/>

    Available placeholders are: `client_full_name`, `client_first_name`, `business_name`, `my_first_name`, `rb_link`, `address`, `website_url`, and `phone_number`.
- name: Messaging Settings
  description: |
    All the operations you can perform on Messaging Settings.

    Messaging settings encapsulates all options available to customize the
    Partoo messaging experience, for a specific Business.

    - welcome message
    - offline messages
    - chat hours
    - launch status

    Messaging Settings are automatically created for businesses subscribed to
    the Messages Product.

    ⚠️ This feature is available only for businesses subscribed to the Messages
    product. ⚠️
- name: Organizations
  description: 'All the operations you can perform on organization. An organization
    is an entreprise that owns businesses.

    '
- name: Posts
  description: |
    Post is a feature that allows businesses to create and share announcements, offers,
    new or popular items in stock, or event details directly with the customers.
    The post will appear on the specified partner, which will boost the results for the business.

    When a business is connected to a Google location (action performed in Partoo app on
    <a href="https://app.partoo.co/settings/platforms/connection">Partner Connection</a> page),
    all the Google Posts will be automatically imported.
    When a business is disconnected the Google Posts published on Google will be deleted from Partoo database.
    </br></br></br>

    <b>⚠️ -- Google Post -- ⚠️<br />
    ⚠️ Feature only available for small and midsize businesses (SMBs) ⚠️</b>

    Google Posts is a feature that allows businesses to create and share announcements, offers,
    new or popular items in stock, or event details directly with the customers.
    The post will appear on Google Search and Maps, which will boost the results for the business.

    When a business is connected to a Google location (action performed in Partoo app on
    <a href="https://app.partoo.co/settings/platforms/connection">Partner Connection</a> page),
    all the Google Posts will be automatically imported.
    When a business is disconnected the Google Posts published on Google will be deleted from Partoo database.
- name: Place Action Links
  description: 'Endpoint to retrieve available place action links from the Google
    Places API

    '
- name: Presence analytics
  description: 'All the operations to perform analytics on Presence Management.

    '
- name: Reviews
  description: |
    <b>⚠️ This feature is available only for businesses subscribed to Review Management. ⚠️</b>

    Partoo centralises all businesses reviews from Google, Facebook and TripAdvisor platforms.

    The reviews are fetched once per day (over night), therefore a it is expected to have a delay of maximum 24h.
    The Partoo APIs enable a simple way of replying to any new reviews, update an existing reply or delete a reply.
    A review can have one of the following status:
    - `treated`: has a reply/comment or it was manually marked as treated in the Partoo UI
    - `not-treated`: it doesn't have a reply/comment and it was not manually marked as treated in the Partoo UI
    - `deleted`: the review was removed by the user on the original platfrom.

    **Note:** the review itself cannot be altered nor deleted via the APIs.

    Reply templates allow business managers to gain time in replying to the reviews,
    via a predefined answer which can be easily selected and sent.

    Reply templates are not meant to be used outside the Partoo application.
    For this reason it is not possible to access a _formatted_ template, with prefilled placeholders from the API.

    However it is still possible to browse through, create or delete reply templates from the Partoo API.
- name: Review analytics
  description: |
    <b>⚠️ This feature is available only for businesses subscribed to Review Management. ⚠️</b>

    All the operations to perform Reviews analytics.
- name: Review Booster
  description: |
    All operations related to the Review Booster product. <p>⚠️ SMS send functionality cannot be tested in Sandbox env.
    All operations related to the Review Booster product. <p>⚠️ SMS send functionality cannot be tested in Sandbox env.
- name: Users
  description: All operations available on users
- name: Webhooks
  description: |2

    ## About Webhooks
    The webhooks are a way for you to be automatically notified of real-time
    events.

    When a specific event occurs, the webhook is triggered and will send you
    related data through an url that you provided.

    The webhook will trigger for businesses with the same `org_id`.

    <br>
    <b>⚠️ To activate webhooks, you will need to contact your customer
    success. ⚠️</b>

    You can also set webhooks on our website in the settings > integrations > webhooks.

    You can subscribe to each event independently.

    To subscribe to an event, you need to provide the following informations:
      - An url where you will receive the event data (can be shared for multiple
      events)
      - Your `org_id`
      - The type of webhook event you wish to activate

    <br>
    When an event is triggered and if you configured a webhook for it, we will
    make an HTTP Post request to the URL that you provided. The body of the
    request will contain the payload of the event, as described in the sections
    below.

    Upon receiving this HTTP request, you must respond with a `200` Success HTTP
    code.

    If your server fails to treat the incoming request with an Internal error
    code (`500` range), we will assume that the error is temporary and retry
    sending the event.
    If after a few attempts the error persists, we will stop retrying and the
    event will be lost.

    If your server fails with any other error code, we will assume that you
    cannot treat the request and will not retry sending the event.

    <br>

    ## Webhook security

    A common requirement for webhook subscribers is the security aspect of validation of issuer.

    Here are the possible validations that we offer for security

    ### Digital Signature

    All webhooks contain a header `X-Partoo-Signature-<version>` (example: `X-Partoo-Signature-v1`)
    The value of this header is the base64-encoded hash of payload with asymmetric encryption ed25519 algorithm.

    <details>
      <summary>Production Key</summary>

      ```
      -----BEGIN PUBLIC KEY-----
      MCowBQYDK2VwAyEA0G9ciHL6XZQXuWq6W4dFLvwNEPWgcdtQgEVlBIwZWBQ=
      -----END PUBLIC KEY-----
      ```
    </details>
    <details>
      <summary>Sandbox Key</summary>

      ```
      -----BEGIN PUBLIC KEY-----
      MCowBQYDK2VwAyEALsyvX2yVnG3ZKRIFfEvYk2nkzanoNgAqBSqdeNub4sM=
      -----END PUBLIC KEY-----
      ```
    </details>

    Here are sample snippets

    <details>
      <summary>Python</summary>

      ```python
      from base64 import b64decode
      import binascii
      from cryptography.hazmat.primitives import serialization
      from cryptography.hazmat.primitives.asymmetric import ed25519

      # load public key from filesystem, you may adapt depending on your secret management framework
      public_key = serialization.load_pem_public_key(open("/var/secrets/partoo.pub.pem"))

      def validate_signature(request):
        if (signature:=request.headers.get("X-Partoo-Signature-v1")) is None:
          raise ValueError("Missing signature")

        # don't trust your inputs
        # will raise a subclass of ValueError if format is invalid
        decoded_signature = b64decode(signature, validate=True)

        # validate payload's signature
        try:
          public_key.verify(decoded_signature, request.body.encode())
        except Exception as e:
          raise ValueError("Invalid signature") from e
      ```

    </details>
    <details>
      <summary>JavaScript</summary>


      ```javascript
      const fs = require('fs');
      const crypto = require('crypto');

      // Load public key from filesystem
      const publicKey = fs.readFileSync('/var/secrets/partoo.pub.pem', 'utf8');

      function validateSignature(request) {
        const signature = sig;
        if (!signature) {
          throw new Error('Missing signature');
        }
        // Decode the base64 signature
        let decodedSignature;
        try {
          decodedSignature = Buffer.from(signature, 'base64');
        } catch (err) {
          throw new Error('Invalid signature format');
        }
        // Verify the payload's signature
          if (!crypto.verify(null, Buffer.from(payload), publicKey, decodedSignature)) {
        throw new Error('Invalid signature');
      }
      }
      ```

    </details>


    ### Add a secret to your webhook's url

    When configuring the webhook, you may add an additional parameter that may represent some secret that only Partoo and you share.<br/>
    This parameter can be either in url path, or as query string parameter.<br/>
    Examples:
    - `https://my.integration.io/webhooks/partoo/9fa91de19/business_update`
    - `https://my.integration.io/webhooks/partoo/business_update?key=9fa91de19`

    ## Webhook API

    You can use the API to subcribe to relevant events using the enpoints described
    below.

    This feature is currently in beta and the API might change before reaching the
    general availability stage.

    `PROVIDER` users acting for their customers are required to provide an `org_id`
    query parameter.
- name: JS SDK
  description: '<p>To know how to integrate Partoo in a white label mode using our
    JS SDK, please check our <a href="/js_sdk/">JS SDK documentation</a>.

    '
- name: SSO
  description: |
    <h2>What is SSO?</h2>
    <p> <b>Single sign-on (SSO)</b> is an authentication method that allows users to access multiple applications with a single set of credentials. </p>

    <p> For Partoo, this means users can access the Partoo app directly from your application directory. </p>
    <p> SSO involves two parts: </p>
    <ul>
        <li>
        The <b>Service</b> (the application you're connecting to, in this case,
        Partoo).
        </li>
        <li>
        The <b>Identity Provider</b> (the system managing users and logins, in
        this case, your system).
        </li>
    </ul>
    <p> Partoo, as a <b>Service</b>, supports SSO connections using two protocols commonly supported by most Identity Providers (such as Google, Microsoft Azure Active Directory, Okta, etc.): </p>
    <ul>
        <li><b>SAML</b></li>
        <li><b>OIDC</b> (OpenID Connect) with <b>PKCE flow</b></li>
    </ul>
    <p> ⚠️ <b>Important: Our SSO functionality only allows connections to existing Partoo accounts.  It does not automatically create accounts.  You must create users beforehand, either through the Partoo API or the Partoo interface.</b> </p>
    <h2>How to set up SSO with Partoo?</h2>
    <h3>Step 1 – Enable the SSO features for your organization</h3>
    <p> To enable SSO for your organization on Partoo, first contact your Customer Success Manager. </p>
    <h3>Step 2 – Retrieve required information from the Partoo App</h3>
    <p> After our team enables SSO for your organization, you can access the information needed to configure the connection with your identity provider. </p>
    <p> In the Partoo app, navigate to the SSO configuration page: <b>Settings</b> > <b>Integrations</b> > <b>SSO Connection</b> > <b>OIDC</b> or <b>SAML</b>, depending on your chosen protocol. </p>
    <p> This page will also be used in Step 4 to enter information from your identity provider. </p>
    <p> For the next step, you'll need the following information from this page: </p>
    <h4>For SAML</h4> <ul>
      <li>ACS URL</li>
      <li>Metadata URL</li>
    </ul>
    <h4>For OIDC</h4> <il>
      <li>Redirect URL</li>
    </il>
    <h3>Step 3 – Add a Partoo application to your identity provider</h3>
    <p> In the endpoints below, <code>{identifier}</code> is a placeholder for the unique identifier of your SSO configuration. Newer configurations use UUIDs, while older ones may use a name like "your_enterprise_name". The formatted URLs can be found on the configuration page mentioned at the previous step. </p>
    <p> You will need to create a Partoo application in your Identity Provider using the following parameters: </p>
    <h4>For SAML</h4> <ul>
        <li>ACS URL: <code>https://app.partoo.co/api/v2/saml/{identifier}/acs</code>
        <li>Entity Id: <code>https://app.partoo.co/api/v2/saml/{identifier}/metadata/</code>
        <li>Attribute mapping: email => <code>email</code> or <code>urn:oid:0.9.2342.19200300.100.1.3</code>
        <li>[optional] Allowed callback url: <code>https://app.partoo.co/api/v2/saml/{identifier}/acs</code>
    </ul>
    <h4>For OIDC</h4> <ul>
        <li>Redirect URL: <code>https://app.partoo.co/connection?sso_alias={identifier}</code>
    </ul>
    <h3>Step 4 – Add the connection information in the Partoo app</h3>
    <p> Once you've created the Partoo application in your Identity Provider, you'll need to configure the connection information in Partoo to finalise the setup. </p>
    <h4>For SAML</h4> <ul>
        <li>
          Click the <b>Prefill</b> button in the banner and upload your
          <code>metadata.xml</code> file. The configuration will be extracted
          automatically.
        </li>
        <li>
          Alternatively, you can manually fill in the following fields:
          <ul>
            <li>Entity ID</li>
            <li>Single Sign-on service</li>
            <li>X509 Certificate</li>
          </ul>
        </li>
        <li>Regardless of which method you choose, you can also set:
          <ul>
            <li>An expiration date for your certificate or configuration.</li>
            <li>A technical contact email address.</li>
          </ul>
        </li>
    </ul>
    <h4>For OIDC</h4> <ul>
        <li>
          Click the <b>Prefill</b> button in the banner and enter your
          <code>.well-known</code> URL. Most of the configuration will be
          extracted automatically.
        </li>
        <li>
          Alternatively, you can manually fill in the following fields:
          <ul>
            <li>Issuer</li>
            <li>Single Sign-on service</li>
            <li>Token endpoint</li>
            <li>JWKS URI</li>
          </ul>
        </li>
        <li>
         Regardless of the method you choose, you must enter your
         <code>client_id</code> and, if required by your identity provider, your
         <code>client_secret</code>.
        </li>
    </ul>
    <h3>Step 5 – Test the connection</h3>
    <p> Once the configuration is complete on both sides, you can test the login endpoint to initiate the SSO connection: </p>
    <ul>
        <li>For SAML: <code>https://app.partoo.co/api/v2/saml/{identifier}/login</code>
        <li>For OIDC: <code>https://app.partoo.co/api/v2/oidc/{identifier}/login</code>
    </ul>
    <p> You can also log in via SSO from the <a href="https://app.partoo.co/connection/sso">Partoo connection page</a>. </p>
    <h2>FAQ</h2>
      <h3>How can we create users?</h3>
        Users cannot be created automatically with the SSO. They need to be created manually through the app or the API.
        See <a href="https://developers.partoo.co/rest_api/v2/#operation/createUser">API User creation</a>
      <h3>How to create an SSO only user?</h3>
        To create a user with SSO only, you need to send <code>sso_only = True</code>, <code>send_invitation=False</code> and no <code>password</code> in the creation call.
      <h3>What should I do when my certificate expires?</h3>
        Your generated certificates have an expiration date.
        You will be reminded to update them by email (on the technical contact provided) before the certificate expires.
        You can follow the email instructions, which will ask you to send a new certificate to the given email address.
      <h3>Can I use other methods to log in on the connection page?</h3>
        Sure, for example, if you use Google as an Identity Provider, you can use the Google login.
      <h3>For any other question</h3>
        See <a href="https://developers.partoo.co/rest_api/v2/#tag/Technical-Support">Technical support</a>
paths:
  "/api_keys":
    get:
      summary: List user API keys
      deprecated: false
      description: This endpoint lets you list all the API keys you have access to.
      operationId: getApiKeys
      tags:
      - ApiKeys
      parameters:
      - in: query
        name: status
        schema:
          "$ref": "#/components/schemas/Status"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    api_keys:
                      type: array
                      description: List of API keys
                      items:
                        "$ref": "#/components/schemas/ApiKey"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/api_keys/{api_key_id}":
    get:
      summary: API key information
      deprecated: false
      description: Given an API key ID, this endpoint gives you information about
        one key.
      operationId: getApiKey
      tags:
      - ApiKeys
      parameters:
      - in: path
        name: api_key_id
        required: true
        schema:
          "$ref": "#/components/schemas/id"
        description: Key ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiKey"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    put:
      summary: Update API keys
      deprecated: false
      description: This endpoint lets you update API keys you have access to.
      operationId: updateApiKeys
      tags:
      - ApiKeys
      parameters:
      - in: path
        name: api_key_id
        required: true
        schema:
          "$ref": "#/components/schemas/id"
        description: Key ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  "$ref": "#/components/schemas/label"
                expiration_date:
                  "$ref": "#/components/schemas/expiration_date"
                ip_whitelist:
                  "$ref": "#/components/schemas/ip_whitelist"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiKey"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/api_keys/revoke/{api_key_id}":
    post:
      summary: Revoke API key
      description: This endpoint lets you revoke an API key you have access to.
      operationId: revokeApiKey
      tags:
      - ApiKeys
      parameters:
      - in: path
        name: api_key_id
        required: true
        schema:
          "$ref": "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/id"
                  status:
                    type: string
                    example: success
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/search":
    get:
      operationId: searchBusinesses
      tags:
      - Businesses
      summary: Search for businesses
      description: 'This lets you search among the businesses you have `READ` access
        to. You can use several filters. The response is paginated (30 results per
        page).

        '
      parameters:
      - "$ref": "#/components/parameters/query_filter_by_fuzzy_query_on_business"
      - "$ref": "#/components/parameters/query_business__in"
      - "$ref": "#/components/parameters/query_filter_by_org_id"
      - "$ref": "#/components/parameters/query_filter_by_groups"
      - "$ref": "#/components/parameters/query_filter_by_country"
      - "$ref": "#/components/parameters/query_filter_by_business_name"
      - "$ref": "#/components/parameters/query_filter_by_business_status"
      - "$ref": "#/components/parameters/query_filter_by_zipcode"
      - "$ref": "#/components/parameters/query_filter_by_city"
      - "$ref": "#/components/parameters/query_filter_by_business_code"
      - "$ref": "#/components/parameters/query_filter_by_business_modification_timestamp"
      - "$ref": "#/components/parameters/query_filter_by_business_features__in"
      - "$ref": "#/components/parameters/query_filter_by_business_features__notin"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_review_management"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_presence_management"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_review_booster"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_messages"
      - "$ref": "#/components/parameters/query_filter_by_business_completion_rate__gte"
      - "$ref": "#/components/parameters/query_filter_by_business_completion_rate__lte"
      - "$ref": "#/components/parameters/query_filter_by_business_completion_rate"
      - "$ref": "#/components/parameters/query_filter_by_business_promo"
      - in: query
        name: connected_to_gmb_location
        schema:
          type: string
          enum:
          - 'True'
          - 'False'
        required: false
        description: Filter by current link to a Google location
      - in: query
        name: connected_to_facebook_location
        schema:
          type: string
          enum:
          - 'True'
          - 'False'
        required: false
        description: Filter by current link to a Facebook location
      - "$ref": "#/components/parameters/query_page_up_to_100"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      - in: query
        name: order_by
        schema:
          type: string
          enum:
          - id
          - name
          - code
          - created
          - modified
          - country
          - city
          - zipcode
          - completion_rate
          - "-id"
          - "-name"
          - "-code"
          - "-created"
          - "-modified"
          - "-country"
          - "-city"
          - "-zipcode"
          - "-completion_rate"
          default: id
        required: false
        description: |
          Order result by given attribute.
          Reverse order can as well be obtained by using a `-` (minus sign) before the attribute name, e.g. `order_by=-name`
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    businesses:
                      type: array
                      description: List of Businesses
                      items:
                        "$ref": "#/components/schemas/BusinessWithCustomFields"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/business/search/stats":
    get:
      operationId: searchBusinessesStats
      tags:
      - Businesses
      summary: Get completion rate stats from your businesses
      description: |
        This endpoint works in the same way as the [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses) endpoint, but instead of returning data on all returned businesses, this endpoint returns completion rate statistics aggregated across all businesses.

        The statistics returned are the average completion rate for all businesses that fit the given filters, as well as the count of businesses with a low, medium, and high respectively. The thresholds for low, medium, and high can be found below in the response details.

        Note that this endpoint works in the exact same way as [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses) (with the exception of parameters that format the output, such as <code>order_by</code> and pagination), but the return value is different.
      parameters:
      - "$ref": "#/components/parameters/query_filter_by_fuzzy_query_on_business"
      - "$ref": "#/components/parameters/query_business__in"
      - "$ref": "#/components/parameters/query_filter_by_org_id"
      - "$ref": "#/components/parameters/query_filter_by_groups"
      - "$ref": "#/components/parameters/query_filter_by_country"
      - "$ref": "#/components/parameters/query_filter_by_business_name"
      - "$ref": "#/components/parameters/query_filter_by_business_status"
      - "$ref": "#/components/parameters/query_filter_by_zipcode"
      - "$ref": "#/components/parameters/query_filter_by_city"
      - "$ref": "#/components/parameters/query_filter_by_business_code"
      - "$ref": "#/components/parameters/query_filter_by_business_modification_timestamp"
      - "$ref": "#/components/parameters/query_filter_by_business_features__in"
      - "$ref": "#/components/parameters/query_filter_by_business_features__notin"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_review_management"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_presence_management"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_review_booster"
      - "$ref": "#/components/parameters/query_filter_by_business_subscription_to_messages"
      - "$ref": "#/components/parameters/query_filter_by_business_completion_rate__gte"
      - "$ref": "#/components/parameters/query_filter_by_business_completion_rate__lte"
      - "$ref": "#/components/parameters/query_filter_by_business_completion_rate"
      - "$ref": "#/components/parameters/query_filter_by_business_promo"
      - in: query
        name: connected_to_gmb_location
        schema:
          type: string
          enum:
          - 'True'
          - 'False'
        required: false
        description: Filter by current link to a Google location
      - in: query
        name: connected_to_facebook_location
        schema:
          type: string
          enum:
          - 'True'
          - 'False'
        required: false
        description: Filter by current link to a Facebook location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  average_completion_rate:
                    description: The average completion rate of all businesses that
                      fit the filters given in paramers.
                    type: integer
                    example: 72
                  counts:
                    type: object
                    properties:
                      low:
                        type: integer
                        example: 2
                        description: The number of businesses that fit the filters
                          given in paramers with a completion score of <=33.
                      mid:
                        type: integer
                        example: 10
                        description: The number of businesses that fit the filters
                          given in paramers with a completion score of >33 and <=66.
                      high:
                        type: integer
                        example: 22
                        description: The number of businesses that fit the filters
                          given in paramers with a completion score of >66.
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/business/connections_stats":
    get:
      tags:
      - Businesses
      operationId: getBusinessConnectionsStats
      summary: Statistics for your connected businesses
      description: 'This endpoint lets you access the number of businesses connected
        to different platforms.

        '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: 'Total number of businesses.

                      '
                  linked_to_gmb_count:
                    type: integer
                    description: 'Number of businesses linked to Google.

                      '
                  linked_to_facebook_count:
                    type: integer
                    description: 'Number of businesses linked to Facebook.

                      '
                  linked_to_tripadvisor_count:
                    type: integer
                    description: 'Number of businesses linked to Tripadvisor.

                      '
                  linked_to_instagram_count:
                    type: integer
                    description: 'Number of businesses linked to Instagram.

                      '
        '401':
          "$ref": "#/components/responses/401"
  "/business":
    post:
      tags:
      - Businesses
      summary: Create business
      description: 'This API allows the creation of a new business in the context
        of your organization.

        '
      operationId: createBusiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              required:
              - name
              - country
              - categories
              - contacts
              properties:
                name:
                  "$ref": "#/components/schemas/BusinessName"
                org_id:
                  "$ref": "#/components/schemas/BusinessOrgId"
                groups:
                  "$ref": "#/components/schemas/groups"
                reach:
                  "$ref": "#/components/schemas/BusinessReach"
                country:
                  "$ref": "#/components/schemas/BusinessCountry"
                zipcode:
                  "$ref": "#/components/schemas/BusinessZipcode"
                city:
                  "$ref": "#/components/schemas/RequiredBusinessCity"
                region:
                  "$ref": "#/components/schemas/BusinessRegion"
                categories:
                  "$ref": "#/components/schemas/BusinessCategories"
                code:
                  "$ref": "#/components/schemas/BusinessCode"
                status:
                  "$ref": "#/components/schemas/BusinessStatus"
                opening_date:
                  "$ref": "#/components/schemas/BusinessOpeningDate"
                address_full:
                  "$ref": "#/components/schemas/AddressFull"
                address2:
                  "$ref": "#/components/schemas/Address2"
                lat:
                  "$ref": "#/components/schemas/BusinessLatitude"
                long:
                  "$ref": "#/components/schemas/BusinessLongitude"
                website_url:
                  "$ref": "#/components/schemas/BusinessWebsite"
                facebook_url:
                  "$ref": "#/components/schemas/BusinessFacebookPage"
                twitter_url:
                  "$ref": "#/components/schemas/BusinessTwitter"
                description_short:
                  "$ref": "#/components/schemas/BusinessShortDescription"
                description_long:
                  "$ref": "#/components/schemas/BusinessLongDescription"
                open_hours:
                  "$ref": "#/components/schemas/OpenHours"
                specific_hours:
                  "$ref": "#/components/schemas/SpecificHours"
                contacts:
                  "$ref": "#/components/schemas/BusinessContactsCreate"
                photos:
                  "$ref": "#/components/schemas/Photos"
                national_identification_number:
                  "$ref": "#/components/schemas/BusinessNationalIdentificationNumber"
                custom_fields:
                  "$ref": "#/components/schemas/CustomFields.Update"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
                  id:
                    "$ref": "#/components/schemas/BusinessId"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/business/{business_id}":
    get:
      tags:
      - Businesses
      operationId: getBusiness
      summary: Business information
      description: 'This endpoint lets you access to the information of a business.
        You need to have `READ`access on this business.

        '
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessWithCustomFields"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Businesses
      operationId: updateBusiness
      summary: Update business
      description: 'This endpoint lets you access to the information of a business.
        You need to have `WRITE` access on this business. Only indicated values are
        taken into account (it works like a `PATCH`). You cannot push fields disabled
        for your org.

        '
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                name:
                  "$ref": "#/components/schemas/BusinessName"
                org_id:
                  "$ref": "#/components/schemas/BusinessOrgId"
                groups:
                  "$ref": "#/components/schemas/groups"
                country:
                  "$ref": "#/components/schemas/BusinessCountry"
                zipcode:
                  "$ref": "#/components/schemas/BusinessZipcode"
                city:
                  "$ref": "#/components/schemas/BusinessCity"
                region:
                  "$ref": "#/components/schemas/BusinessRegion"
                categories:
                  "$ref": "#/components/schemas/BusinessCategories"
                code:
                  "$ref": "#/components/schemas/BusinessCode"
                status:
                  "$ref": "#/components/schemas/BusinessStatus"
                opening_date:
                  "$ref": "#/components/schemas/BusinessOpeningDate"
                address2:
                  description: Row address string
                  type: string
                address_full:
                  "$ref": "#/components/schemas/AddressFull"
                lat:
                  "$ref": "#/components/schemas/BusinessLatitude"
                long:
                  "$ref": "#/components/schemas/BusinessLongitude"
                website_url:
                  "$ref": "#/components/schemas/BusinessWebsite"
                facebook_url:
                  "$ref": "#/components/schemas/BusinessFacebookPage"
                twitter_url:
                  "$ref": "#/components/schemas/BusinessTwitter"
                description_short:
                  "$ref": "#/components/schemas/BusinessShortDescription"
                description_long:
                  "$ref": "#/components/schemas/BusinessLongDescription"
                open_hours:
                  "$ref": "#/components/schemas/OpenHours"
                specific_hours:
                  "$ref": "#/components/schemas/SpecificHours"
                contacts:
                  "$ref": "#/components/schemas/BusinessContacts"
                photos:
                  "$ref": "#/components/schemas/Photos"
                national_identification_number:
                  "$ref": "#/components/schemas/BusinessNationalIdentificationNumber"
                custom_fields:
                  "$ref": "#/components/schemas/CustomFields.Update"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
                  id:
                    "$ref": "#/components/schemas/BusinessId"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          description: 'You are not allowed to perform this action

            '
          content:
            application/json:
              schema:
                description: 'Error that occurs when you are authenticated but you
                  are trying to perform an action you are not allowed to perform

                  '
                type: object
                properties:
                  errors:
                    type: object
                    description: The detail of the error encountered
                    properties:
                      authorization:
                        additionalProperties:
                          type: string
                          default: Operation not allowed
              example:
                errors:
                  authorization:
                    name: edit_not_allowed
                    open_hours: edit_not_allowed
                    photos.primary: edit_not_allowed
                    photos.secondary: edit_not_allowed
        '404':
          "$ref": "#/components/responses/404"
    delete:
      tags:
      - Businesses
      operationId: deleteBusiness
      summary: Delete business
      description: 'This endpoint lets you delete a business. You need to have `WRITE`access
        on this business.

        '
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/BusinessId"
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/subscription":
    get:
      tags:
      - Businesses
      operationId: getBusinessSubscriptions
      summary: Subscriptions for your business
      description: 'This endpoint lets you access the subscription of a business.
        You need to have `READ` access on this business.

        '
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Business subscriptions
                properties:
                  presence_management:
                    "$ref": "#/components/schemas/SubscriptionDetails"
                  review_management:
                    "$ref": "#/components/schemas/SubscriptionDetails"
                  review_booster:
                    "$ref": "#/components/schemas/SubscriptionDetails"
                  messages:
                    "$ref": "#/components/schemas/SubscriptionDetails"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/subscribe":
    post:
      summary: Subscribe a business
      operationId: subscribeBusiness
      description: 'This endpoint lets you subscribe a business to one or several
        Partoo products. You need to have `WRITE` access on the business you want
        to subscribe. You need to have `PROVIDER` to be able to perform this action.

        '
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_date:
                  type: number
                  description: Timestamp representing the date on which the subscription
                    will start
                  example: 1540628702
                products:
                  type: array
                  description: List of products
                  items:
                    "$ref": "#/components/schemas/Product"
                plan:
                  type: string
                  description: Any string that define your offer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence_management:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
                  review_management:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
                  review_booster:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
                  messages:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/unsubscribe":
    post:
      summary: Unsubscribe a business
      operationId: unsubscribeBusiness
      description: 'This endpoint lets you unsubscribe a business from one or several
        Partoo products. You need to have `WRITE` access on the business you want
        to subscribe. You need to have `PROVIDER` to be able to perform this action.

        '
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                canceling_date:
                  type: number
                  description: Timestamp representing the date on which the subscription
                    will stop to be valid
                  example: 1540628702
                products:
                  type: array
                  description: List of products
                  items:
                    "$ref": "#/components/schemas/Product"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence_management:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
                  review_management:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
                  review_booster:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
                  messages:
                    oneOf:
                    - "$ref": "#/components/schemas/ProductSubscribeResponseObject"
                    - "$ref": "#/components/schemas/ProductUnsubscribeResponseObject"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/additional_data":
    get:
      tags:
      - Businesses
      operationId: getBusinessAdditionalData
      summary: Additional data for your business
      description: 'This endpoint lets you access to the additional data of business.
        You need to have `READ`access on this business.

        '
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Business additional data
                properties:
                  additionnal_data_1:
                    type: string
                    example: Some data
                  additionnal_data_2:
                    type: number
                    example: 3.1415
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Businesses
      operationId: setBusinessAdditionalData
      summary: Set additional data for your business
      description: 'This endpoint lets you set additional data on a business. You
        need to have `WRITE` access on this business. Additional is a flat object
        with at most 10 keys.

        '
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: A flat object (ie. without nested value) with at most 10
                keys
              properties:
                additionnal_data_1:
                  type: string
                  example: Some data
                additionnal_data_2:
                  type: number
                  example: 3.1415
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/BusinessId"
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/attributes":
    get:
      summary: Google attributes for your business
      description: 'This endpoint allows you to view the **Google attributes** set
        for your business.

        '
      operationId: getBusinessAttributes
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      - "$ref": "#/components/parameters/category_name_optional"
      - "$ref": "#/components/parameters/country"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessAttributesResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      summary: Set Google attributes for your business
      description: 'This endpoint allows you to set **Google attributes** for your
        business.

        '
      operationId: postBusinessAttributes
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BusinessPostAttributesBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          description: Wrong request Body
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/BusinessPostWrongAttributesValuesError"
                - "$ref": "#/components/schemas/BusinessPostUnknownAttributesError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/more_hours":
    get:
      summary: More hours for your business
      description: 'This endpoint allows you to view the **More Hours** set for your
        business.

        '
      operationId: getBusinessMoreHours
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      - "$ref": "#/components/parameters/category_more_hours_business"
      - "$ref": "#/components/parameters/country_more_hours_business"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MoreHoursBusinessGetResponse"
        '400':
          description: Wrong or missing parameters
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/MoreHoursListInvalidCategoryError"
                - "$ref": "#/components/schemas/MoreHoursListInvalidCountryError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      summary: Set more hours for your business
      description: 'This endpoint allows you to set the **More Hours** for your business.

        '
      operationId: postBusinessMoreHours
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MoreHoursBusinessPostBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MoreHoursBusinessPostResponse"
        '400':
          description: Wrong or missing parameters
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/MoreHoursBusinessPostInvalidCategory"
                - "$ref": "#/components/schemas/MoreHoursBusinessPostOverlappingHours"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/services":
    get:
      summary: Google Services for your business
      description: 'This endpoint allows you to view the Google Services set for your
        business.

        '
      operationId: getBusinessServices
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessServicesResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/services/{service_id}":
    delete:
      summary: Delete Google Services for your business
      description: 'This endpoint allows you to delete the Google Services set for
        your business.

        '
      operationId: deleteBusinessServices
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      - "$ref": "#/components/parameters/path_service_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/structured_services":
    post:
      summary: Set Google Services for your business
      description: 'This endpoint allows you to set or update Google Services for
        your business. When you set a service of type STRUCTURED_SERVICE_ITEM for
        a category, every category that have this service available will also have
        it set for them.

        '
      operationId: postBusinessStructuredServices
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/StructuredServicesCreateUpdate"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessServicesResponse"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/free_form_services":
    post:
      summary: Set custom Google Services for your business
      description: 'This endpoint allows you to set or update custom Google Services
        for your business.

        '
      operationId: postBusinessFreeFormServices
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - "$ref": "#/components/schemas/FreeFormServicesCreate"
              - "$ref": "#/components/schemas/FreeFormServicesUpdate"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessServicesResponse"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/food_menus":
    get:
      summary: Google Food Menus for your business
      description: 'This endpoint allows you to view the Google Food Menus set for
        your business.

        '
      operationId: getBusinessFoodMenus
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessFoodMenus"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      summary: Delete Google Food Menus for your business
      description: 'This endpoint allows you to delete the Google Food Menus for your
        business.

        '
      operationId: deleteBusinessFoodMenus
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      summary: Set Google Food Menus for your business
      description: 'This endpoint allows you to set or update Google Food Menus for
        your business.

        '
      operationId: postBusinessFoodMenus
      tags:
      - Businesses
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BusinessFoodMenus"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessFoodMenus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/place_action_links":
    get:
      tags:
      - Businesses
      summary: Get Place Action Links
      description: 'Retrieve a list of place action links for a given business_id.  Only
        the available gmb_id links for the business are returned in the GET request.  Additionally,
        the business must be connected to a Google location.  For more details, refer
        to the <a href="https://app.partoo.co/settings/platforms/connection">Partner
        Connection</a> page.

        '
      operationId: getPlaceActionLinks
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlaceActionLinksResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Businesses
      summary: Set Place Action Links
      description: |
        This endpoint enables you to manage place action links for a given business.  Create, update, or delete place action links by modifying the urls array for each gmb_id.
        - Create: Include a place action link in urls without an id.
        - Update: Include the given place action link in urls with an existing id.
        - Delete: Omit the specific link object from urls or provide an empty urls array to remove all for the gmb_id .
        For the POST method, ensure you send the complete list of desired links to retain or update per gmb_id.
      operationId: postPlaceActionLink
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaceActionLinksPostBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          description: Wrong request Body
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/PlaceActionLinksNonExistingGmbIdsError"
                - "$ref": "#/components/schemas/PlaceActionLinksNonUniqueGmbIdsError"
                - "$ref": "#/components/schemas/PlaceActionLinksNonUniqueUrlsError"
                - "$ref": "#/components/schemas/PlaceActionLinksMultiplePreferredUrlsError"
                - "$ref": "#/components/schemas/PlaceActionLinksMissingIdsError"
                - "$ref": "#/components/schemas/PlaceActionLinksNonUniqueIdsError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/business/{business_id}/business_fields":
    get:
      tags:
      - Business Fields
      operationId: getBusinessFieldsForBusiness
      summary: Business fields configuration for a business
      description: "This endpoint gives you the list of all the fields that are available
        for a given Business. <p>It also tells you, for each field, if you have the
        permission to edit it or not, depending of the permission configured by your
        ORG_ADMIN and your PROVIDER. \n"
      parameters:
      - "$ref": "#/components/parameters/business_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessFields.SectionArray"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/org/{org_id}/business_fields":
    get:
      tags:
      - Business Fields
      operationId: getBusinessFieldsForOrg
      summary: Business fields configuration for an organization
      description: 'This endpoint gives you the list of all the fields that are available
        for a given Organization. <p> Also tells you, for each field: <li> If you
        have the permission to edit it or not, depending of the permission configured
        by PROVIDER. <li> If you gave the persission to edit it or not for the BUSINESS_MANAGER
        and GROUP_MANAGER who have access to the businesses of the organization. <p>Only
        User roles ORG_ADMIN or PROVIDER can access this information.

        '
      parameters:
      - "$ref": "#/components/parameters/path_org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BusinessFields.SectionArray"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/categories":
    get:
      summary: List Partoo categories
      tags:
      - Categories
      description: 'This endpoint lets you read and filter through Partoo categories.

        '
      operationId: getCategories
      parameters:
      - "$ref": "#/components/parameters/query_category_country"
      - "$ref": "#/components/parameters/query_category_lang"
      - "$ref": "#/components/parameters/query_category_state"
      - "$ref": "#/components/parameters/query_category_block_push_long"
      - "$ref": "#/components/parameters/query_category_search_query"
      - "$ref": "#/components/parameters/query_category_order_by"
      - "$ref": "#/components/parameters/query_category_live__isnull"
      - "$ref": "#/components/parameters/query_page"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      - "$ref": "#/components/parameters/query_category_with_names_categories"
      - "$ref": "#/components/parameters/query_category_with_countries"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    categories:
                      type: array
                      description: List of categories
                      items:
                        "$ref": "#/components/schemas/DeprecatedCategorySql"
              examples:
                with default parameters:
                  value:
                    page: 1
                    max_page: 10
                    count: 287
                    categories:
                    - id: 4018
                      gmb_id: gcid:wood_industry
                      name: Industrie du bois
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                with_countries=true:
                  value:
                    page: 1
                    max_page: 10
                    count: 287
                    categories:
                    - id: 4018
                      gmb_id: gcid:wood_industry
                      name: Industrie du bois
                      state: OK
                      block_push_long_description_on_gmb: false
                      countries:
                      - RU
                      - FR
                      live_id: 
                with_names=true:
                  value:
                    page: 1
                    max_page: 10
                    count: 287
                    categories:
                    - id: 4018
                      gmb_id: gcid:wood_industry
                      name: Industrie du bois
                      state: OK
                      block_push_long_description_on_gmb: false
                      names:
                      - name: Wood industry
                        lang: de
                      - name: Wood industry
                        lang: es
                      live_id: 
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/categories/{category_id}":
    get:
      summary: Category information
      tags:
      - Categories
      description: 'This endpoint lets you retrieve the data of a specific category.

        '
      operationId: getCategory
      parameters:
      - in: path
        required: true
        name: category_id
        schema:
          "$ref": "#/components/schemas/CategoryId"
      - "$ref": "#/components/parameters/query_category_lang"
      - "$ref": "#/components/parameters/query_category_return_live"
      - "$ref": "#/components/parameters/query_category_with_names"
      - "$ref": "#/components/parameters/query_category_with_countries"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CategorySql"
              examples:
                with default parameters:
                  value:
                    id: 4018
                    gmb_id: gcid:wood_industry
                    name: Industrie du bois
                    state: OK
                    block_push_long_description_on_gmb: false
                    live_id: 
                with_countries=true:
                  value:
                    id: 4018
                    gmb_id: gcid:wood_industry
                    name: Industrie du bois
                    state: OK
                    block_push_long_description_on_gmb: false
                    live_id: 
                    countries:
                    - RU
                    - FR
                with_names=true:
                  value:
                    id: 4018
                    gmb_id: gcid:wood_industry
                    name: Industrie du bois
                    state: OK
                    block_push_long_description_on_gmb: false
                    live_id: 
                    names:
                    - name: Wood industry
                      lang: de
                    - name: Wood industry
                      lang: es
                    - name: Wood industry
                      lang: ar
                    - name: Industrie du bois
                      lang: fr
                    - name: Wood industry
                      lang: en
                    - name: Wood industry
                      lang: it
                    - name: Wood industry
                      lang: pt-BR
                deprecated category with return_live=false:
                  value:
                    id: 7652
                    gmb_id: gcid:bailiff
                    name: ''
                    state: DEPRECATED
                    block_push_long_description_on_gmb: false
                    live_id: gcid:business_to_business_service
                deprecated category with return_live=true:
                  value:
                    id: 6715
                    gmb_id: gcid:business_to_business_service
                    name: Services aux entreprises
                    state: OK
                    block_push_long_description_on_gmb: false
                    live_id: 
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/categories/{category_id}/suggestions":
    get:
      summary: Suggested additional categories
      tags:
      - Categories
      description: 'This endpoint lets you retrieve Partoo''s suggestions for additional
        categories, based on a given category.

        '
      operationId: getSuggestedCategories
      parameters:
      - in: path
        required: true
        name: category_id
        schema:
          "$ref": "#/components/schemas/CategoryId"
      - "$ref": "#/components/parameters/query_category_lang"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  categories:
                    type: array
                    items:
                      "$ref": "#/components/schemas/SuggestedAdditionalCategoriesObject"
                    example:
                    - id: 7984
                      gmb_id: gcid:atm
                      name: ATM
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 4917
                      gmb_id: gcid:savings_bank
                      name: Savings bank
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 5742
                      gmb_id: gcid:home_insurance_agency
                      name: Home insurance agency
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 6678
                      gmb_id: gcid:auto_insurance_agency
                      name: Auto insurance agency
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 5520
                      gmb_id: gcid:life_insurance_agency
                      name: Life insurance agency
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 5339
                      gmb_id: gcid:motorcycle_insurance_agency
                      name: Motorcycle insurance agency
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 7133
                      gmb_id: gcid:insurance_agency
                      name: Insurance agency
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 7012
                      gmb_id: gcid:investment_service
                      name: Investment service
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
                    - id: 6026
                      gmb_id: gcid:financial_consultant
                      name: Financial consultant
                      state: OK
                      block_push_long_description_on_gmb: false
                      live_id: 
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '404':
          "$ref": "#/components/responses/404"
  "/connection/generate_token":
    post:
      tags:
      - Connection Tokens
      summary: Generate connection token
      description: 'This endpoint lets you generate a connection token to authenticate
        a user without having to indicate its credentials. To be able to generate
        a connection token for a user, you need to have `WRITE` access on that user
        and that user cannot have `PROVIDER` role. A connection token is valid only
        once and has a time to live of maximum one day.

        '
      operationId: generateConnectionToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - user_id
              properties:
                user_id:
                  "$ref": "#/components/schemas/UserId"
                ttl:
                  type: integer
                  maximum: 86400
                  default: 86400
                  example: 3600
                  description: Token time to live in seconds. It can be maximum 1
                    day.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: New connection token
                    type: string
                    example: "\\xaf3e8951c1f4c42f9cc53116b3fc855bd44bce01cf27604b"
                  expiration_date:
                    type: string
                    description: Expiration date of the newly created token
                    format: date-time
                    example: '2019-08-01T19:15:54.256000+02:00'
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/connection/revoke_token":
    post:
      tags:
      - Connection Tokens
      summary: Revoke connection token
      description: 'This endpoint lets you revoke a connection token. To be able to
        revoke a connection token for a user, you need to have `WRITE` access on that
        user and the connection token must be valid (not expired, not revoked and
        not consumed).

        '
      operationId: revokeConnectionToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - user_id
              properties:
                user_id:
                  "$ref": "#/components/schemas/UserId"
                token:
                  type: string
                  example: "\\xaf3e8951c1f4c42f9cc53116b3fc855bd44bce01cf27604b"
                  description: Token to revoke
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/connection/check_token":
    get:
      tags:
      - Connection Tokens
      summary: Check connection token
      description: 'This endpoint lets you check the status of a connection token.
        To be able to check a connection token of a user, you need to have `WRITE`
        access on that user.

        '
      operationId: checkConnectionToken
      parameters:
      - in: query
        name: user_id
        description: User id
        required: true
        schema:
          "$ref": "#/components/schemas/UserId"
      - in: query
        name: token
        description: User connection token
        required: true
        schema:
          type: string
          example: "\\xaf3e8951c1f4c42f9cc53116b3fc855bd44bce01cf27604b"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: New connection token
                    type: string
                    example: "\\xaf3e8951c1f4c42f9cc53116b3fc855bd44bce01cf27604b"
                  expiration_date:
                    type: string
                    description: Expiration date of the token
                    format: date-time
                    example: '2019-08-02T19:15:54.256000+02:00'
                  generated_by:
                    type: string
                    description: Id of the user that created the token
                    example: 5309c3a237bbc544d8e26737
                  creation_date:
                    type: string
                    description: Creation date of the token
                    format: date-time
                    example: '2019-08-01T19:15:54.256000+02:00'
                  consumption_date:
                    type: string
                    description: Date the token was consumed, ie. used to log in
                    format: date-time
                    example: '2019-08-01T23:15:54.256000+02:00'
                  status:
                    type: string
                    example: consumed
                    enum:
                    - revoked
                    - consumed
                    - expired
                    - valid
                    description: |
                      Status of the token:

                       - `valid` means it can be use to log in
                       - `consumed` means it has been used to log in
                       - `revoked` means it has been revoked before being used or expired
                       - `expired` means it has expired before being used
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/conversations":
    get:
      tags:
      - Messages
      summary: List conversations
      operationId: listConversations
      description: |
        This endpoint lets you list all the Conversations you have access to.

        You can filter the conversations based on the Organization or the Business
        that they are related to.

        If you want to keep an up-to-date list of ongoing conversations for your
        businesses, we recommend using the [Message Received](#operation/message_received) and
        [Message Deleted](#operation/message_deleted) Webhooks instead of periodically calling this endpoint.

        ⚠️ This endpoint is paginated using cursor pagination. This means that in
        order to get the next page of results, you need to provide the cursor
        returned in the previous call.
      parameters:
      - "$ref": "#/components/parameters/PerPage"
      - "$ref": "#/components/parameters/Cursor"
      - "$ref": "#/components/parameters/query_business__in"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  conversations:
                    type: array
                    description: The list of conversations, paginated.
                    items:
                      "$ref": "#/components/schemas/Conversation"
                  count:
                    "$ref": "#/components/schemas/Count"
                  next_cursor:
                    "$ref": "#/components/schemas/NextCursor"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/conversations/{conversation_id}":
    get:
      tags:
      - Messages
      summary: Conversation information
      operationId: getConversation
      description: 'This endpoint returns all information on a specific Conversation.

        '
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: integer
          description: The id of the conversation to fetch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - description: The detail of a conversation.
                - "$ref": "#/components/schemas/Conversation"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    post:
      tags:
      - Messages
      summary: Update conversation
      operationId: updateConversationDeprecated
      deprecated: true
      description: |
        Please use POST /conversations/{conversation_id}/read or PATCH /conversations/{conversation_id} instead.

        The only updatable field is "is_read". It will be set for the user
        that performs the request ("is_read" may have different values for different
        users).
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: integer
          description: The id of the conversation to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a Post
              type: object
              properties:
                is_read:
                  type: boolean
                  description: "Whether the last message received was read. \nThis
                    property is scoped to the user who performs the request.\nMultiple
                    users can have a different is_read status for the same \nconversation.\n"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - success
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    patch:
      tags:
      - Messages
      summary: Update conversation
      operationId: updateConversation
      description: 'This endpoint lets you change the status of the conversation to
        "open" or "closed" and assign it to a user.

        '
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: integer
          description: The id of the conversation to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a Conversation
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - open
                  - closed
                  description: |
                    You can close or re-open the conversation.
                    It will change the "is_solved" boolean of the conversation but it won't change the
                    "is_expired". If the conversation is expired we can't re-open it.
                assigned_user_id:
                  type: string
                  enum:
                  - USER_ID
                  - unassigned
                  description: |
                    Only for enterprise organizations.
                    The user will be assigned to the conversation.

                    You can only assign a conversation to a user that:
                    - is active
                    - is of type human (not bot)
                    - has access to the conversation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - success
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/conversations/{conversation_id}/read":
    post:
      tags:
      - Messages
      summary: Read conversation
      operationId: readConversation
      description: "This endpoint lets you mark a conversation as read.\nIt will be
        set for the user that performs the request \n(\"is_read\" may have different
        values for different\nusers).\n"
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: integer
          description: The id of the conversation to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to mark a Conversation as read
              type: object
              properties:
                is_read:
                  type: boolean
                  description: "Whether the last message received was read. \nThis
                    property is scoped to the user who performs the request.\nMultiple
                    users can have a different \"is_read\" status for the same \nconversation.\n"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - success
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/messages":
    get:
      tags:
      - Messages
      summary: List messages
      operationId: listMessages
      description: |
        This endpoint lets you retrieve the messages for a specific conversation.

        ⚠️ This endpoint is paginated using cursor pagination. This means that in
        order to get the next page of results, you need to provide the cursor
        returned in the previous call.
      parameters:
      - name: conversation_id
        in: query
        schema:
          type: integer
          description: The id of the conversation
        required: true
      - "$ref": "#/components/parameters/PerPage"
      - "$ref": "#/components/parameters/Cursor"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  messages:
                    type: array
                    description: The list of messages for a specific conversation,
                      paginated.
                    items:
                      "$ref": "#/components/schemas/Message"
                  count:
                    "$ref": "#/components/schemas/Count"
                  next_cursor:
                    "$ref": "#/components/schemas/NextCursor"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    post:
      tags:
      - Messages
      summary: Send message
      operationId: postMessage
      description: |
        This endpoint allows you to send a message as a business, in an existing
        conversation.

        The supported content types when sending messages are :
        - Text
        - Image
        - Video
        - Audio
        - Document

        ⚠️ Due to underlying channel limitations, some media content_types are not
        supported on all channels :
        <table>
          <thead>
            <tr>
              <th scope="col">Channel</th>
              <th scope="col">Image</th>
              <th scope="col">Video</th>
              <th scope="col">Audio</th>
              <th scope="col">Document</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">Facebook</th>
              <td>✅</td>
              <td>✅</td>
              <td>✅</td>
              <td>✅</td>
            </tr>
            <tr>
              <th scope="row">Instagram</th>
              <td>✅</td>
              <td>✅</td>
              <td>✅</td>
              <td>❌</td>
            </tr>
            <tr>
              <th scope="row">SMS</th>
              <td>❌</td>
              <td>❌</td>
              <td>❌</td>
              <td>❌</td>
            </tr>
            <tr>
              <th scope="row">Whatsapp</th>
              <td>✅</td>
              <td>✅</td>
              <td>✅</td>
              <td>✅</td>
            </tr>
          </tbody>
        </table>

        When dealing with media messages (`Image`, `Video`, `Audio`, `Document`), there are some
        additionnal file type and file size limitations.
        - Image size should not exceed <strong>5 MB</strong>.
        - Video size should not exceed <strong>16 MB</strong>.
        - Audio size should not exceed <strong>16 MB</strong>.
        - Document size should not exceed <strong>100 MB</strong>.

        For optimal support, you should target the following file types :
        - Image : `jpeg`, `png`.
        - Video : `mp4`.
        - Audio : `aac`, `mp4`.
        - Document : `xls`, `xlsx`, `docx`, `pdf`, `ppt`, `pptx`.
        </br>

        A successful HTTP response to this endpoint (code 200) does not necessarily mean that the
        message has been correctly delivered to the consumer, only that it has been created on
        Partoo.
        To ensure that the message has been delivered successfully, we recommend subscribing to the
        [Message Updated](#operation/message_updated) Webhook, and checking that the `status` field
        of the message has switched to `Success`.

        If the answer has failed to be sent, you can send it again by using the
        [/retry endpoint](#operation/retrySendMessage)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - "$ref": "#/components/schemas/PostTextMessage"
              - "$ref": "#/components/schemas/PostImageUrlMessage"
              - "$ref": "#/components/schemas/PostAudioMessage"
              - "$ref": "#/components/schemas/PostVideoMessage"
              - "$ref": "#/components/schemas/PostDocumentMessage"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PostImageMessage"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - success
                  message_id:
                    type: integer
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/messages/{message_id}/retry":
    post:
      operationId: retrySendMessage
      tags:
      - Messages
      summary: Retry send message
      description: 'This endpoint let you retry sending a message that has failed
        to be sent.

        '
      parameters:
      - name: message_id
        in: path
        schema:
          type: integer
          description: The id of the message to send
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - success
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/messaging/templates":
    get:
      operationId: listMessageTemplates
      tags:
      - Message Reply Templates
      summary: List message templates
      description: 'This endpoint retrieves the list of message templates for the
        current user''s organization.

        '
      responses:
        '200':
          description: A list of message templates
          content:
            application/json:
              schema:
                type: array
                description: The list of message reply templates.
                items:
                  "$ref": "#/components/schemas/MessageReplyTemplate"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    post:
      operationId: createMessageTemplates
      tags:
      - Message Reply Templates
      summary: Create message template
      description: |
        This endpoint lets you create a new message template.

        ⚠️ The content should be a valid __stringified JSON__ object. It has to include both the `"text"` key with the message content
        and the pair `"_version": "0.1"`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageTemplateCreateRequest"
      responses:
        '200':
          description: The message template created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageReplyTemplate"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/messaging/templates/{template_id}":
    put:
      operationId: updateTemplate
      tags:
      - Message Reply Templates
      summary: Update message template
      description: 'This endpoint allows updating an existing message template by
        its ID.

        '
      parameters:
      - "$ref": "#/components/parameters/path_template_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageTemplateUpdateRequest"
      responses:
        '200':
          description: The message template created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageReplyTemplate"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      operationId: deleteMessageTemplate
      tags:
      - Message Reply Templates
      summary: Delete message template
      description: 'This endpoint lets you delete a message template given its ID.

        '
      parameters:
      - "$ref": "#/components/parameters/path_template_id"
      responses:
        '200':
          description: Template deleted successfully
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/messaging/settings":
    get:
      operationId: settings
      tags:
      - Messaging Settings
      summary: List messaging settings
      description: |
        This endpoint lets you list all the Messaging Settings you have access to.

        You can filter the Messaging Settings based on the Organization or the
        Business that they are related to.
      parameters:
      - "$ref": "#/components/parameters/Page"
      - "$ref": "#/components/parameters/PerPage"
      - "$ref": "#/components/parameters/query_business__in"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  settings:
                    type: array
                    description: The list of Messaging Settings, paginated.
                    items:
                      "$ref": "#/components/schemas/MessagingSetting"
                  page:
                    "$ref": "#/components/schemas/Page"
                  count:
                    "$ref": "#/components/schemas/Count"
                  max_page:
                    "$ref": "#/components/schemas/MaxPage"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/messaging/settings/{setting_id}":
    post:
      tags:
      - Messaging Settings
      summary: Update messaging settings
      operationId: updateMessagingSettings
      description: 'This endpoint lets you update a specific Messaging Settings.

        '
      parameters:
      - name: setting_id
        in: path
        required: true
        schema:
          type: integer
          description: The id of the Messaging Settings to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a Post
              type: object
              properties:
                welcome_message:
                  "$ref": "#/components/schemas/MessagingSettingWelcomeMessage"
                offline_message:
                  "$ref": "#/components/schemas/MessagingSettingOfflineMessage"
                uses_business_hours:
                  "$ref": "#/components/schemas/MessagingSettingUsesBusinessHours"
                custom_chat_hours:
                  "$ref": "#/components/schemas/ChatHours"
                is_launched:
                  "$ref": "#/components/schemas/MessagingSettingIsLaunched"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessagingSetting"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/custom_fields":
    post:
      tags:
      - Custom Fields
      summary: Create custom fields
      description: 'This endpoint enables you to create custom fields for your organization
        as an ORG_ADMIN

        '
      operationId: postCreateCustomFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/CustomFieldBool"
              - "$ref": "#/components/schemas/CustomFieldText"
              - "$ref": "#/components/schemas/CustomFieldInteger"
              - "$ref": "#/components/schemas/CustomFieldFloat"
              - "$ref": "#/components/schemas/CustomFieldSingleSelect"
              - "$ref": "#/components/schemas/CustomFieldMultipleSelect"
              - "$ref": "#/components/schemas/CustomFieldMultipleSelectImage"
              - "$ref": "#/components/schemas/CustomFieldImagesUploader"
              discriminator:
                propertyName: type
                mapping:
                  BOOLEAN: "#/components/schemas/CustomFieldBool"
                  TEXT: "#/components/schemas/CustomFieldText"
                  INTEGER: "#/components/schemas/CustomFieldInteger"
                  FLOAT: "#/components/schemas/CustomFieldFloat"
                  SINGLE_SELECT: "#/components/schemas/CustomFieldSingleSelect"
                  MULTIPLE_SELECT: "#/components/schemas/CustomFieldMultipleSelect"
                  MULTIPLE_SELECT_IMAGE: "#/components/schemas/CustomFieldMultipleSelectImage"
                  IMAGES_UPLOADER: "#/components/schemas/CustomFieldImagesUploader"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/CustomFieldId"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/custom_fields/{custom_field_id}":
    put:
      tags:
      - Custom Fields
      summary: Update custom field
      description: "<p>This endpoint enables an ORG_ADMIN to update a specific custom
        field of his organization by specifying its id. <p>Name and constraints can
        be updated. The type of a custom field cannot be modified.\n"
      operationId: putUpdateCustomFields
      parameters:
      - "$ref": "#/components/parameters/custom_field_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/CustomFieldEditTypeBool"
              - "$ref": "#/components/schemas/CustomFieldEditTypeText"
              - "$ref": "#/components/schemas/CustomFieldEditTypeInteger"
              - "$ref": "#/components/schemas/CustomFieldEditTypeFloat"
              - "$ref": "#/components/schemas/CustomFieldTypeEditSingleSelect"
              - "$ref": "#/components/schemas/CustomFieldTypeEditMultipleSelect"
              - "$ref": "#/components/schemas/CustomFieldTypeEditMultipleSelectImage"
              - "$ref": "#/components/schemas/CustomFieldTypeEditImagesUploader"
              discriminator:
                propertyName: type
                mapping:
                  BOOLEAN: "#/components/schemas/CustomFieldEditTypeBool"
                  TEXT: "#/components/schemas/CustomFieldEditTypeText"
                  INTEGER: "#/components/schemas/CustomFieldEditTypeInteger"
                  FLOAT: "#/components/schemas/CustomFieldEditTypeFloat"
                  SINGLE_SELECT: "#/components/schemas/CustomFieldTypeEditSingleSelect"
                  MULTIPLE_SELECT: "#/components/schemas/CustomFieldTypeEditMultipleSelect"
                  MULTIPLE_SELECT_IMAGE: "#/components/schemas/CustomFieldTypeEditMultipleSelectImage"
                  IMAGES_UPLOADER: "#/components/schemas/CustomFieldTypeEditImagesUploader"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          description: New constraints are not respected for some businesses
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/CustomFieldTextError"
                - "$ref": "#/components/schemas/CustomFieldNumberError"
                - "$ref": "#/components/schemas/CustomFieldSelectError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      tags:
      - Custom Fields
      summary: Delete custom field
      description: 'This endpoint enables an ORG_ADMIN to delete a specific custom
        field of his organization by specifying its id.

        '
      operationId: deleteCustomFields
      parameters:
      - "$ref": "#/components/parameters/custom_field_id"
      - "$ref": "#/components/parameters/custom_field_force_update"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          description: Custom field value is defined for a business
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldDeleteError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/custom_fields/order":
    post:
      tags:
      - Custom Fields
      summary: Order custom fields
      description: 'This endpoint enables you to reorganize the order of the custom
        fields of your organization

        '
      operationId: postOrderCustomFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              required:
              - orders
              properties:
                orders:
                  "$ref": "#/components/schemas/CustomFieldOrders"
                section_orders:
                  "$ref": "#/components/schemas/CustomFieldSectionOrders"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/RequestStatus"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/custom_fields/section":
    get:
      tags:
      - Custom Fields Section
      summary: Get custom field sections
      description: 'Retrieve list of custom fields sections for a given org_id.

        '
      operationId: getCustomFieldsSection
      parameters:
      - "$ref": "#/components/parameters/query_org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Id of custom field section
                        name:
                          type: string
                          description: Name of custom field section
                        order:
                          type: integer
                          description: Order of custom field section
                example:
                  sections:
                  - id: 1
                    name: Section A
                    order: 3
                  - id: 2
                    name: Section B
                    order: 4
                  - id: 3
                    name: Section C
                    order: 5
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Custom Fields Section
      summary: Create custom field sections
      description: 'This endpoint enables you to create custom field sections for
        your organization as an ORG_ADMIN. If no order is provided, it will be set
        to -> max(all current sections orders) + 1.

        '
      operationId: postCustomFieldsSection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomFieldSection"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  section_id:
                    "$ref": "#/components/schemas/CustomFieldSectionId"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/custom_fields/section/{section_id}":
    put:
      tags:
      - Custom Fields Section
      summary: Update custom field sections
      description: "<p>This endpoint enables an ORG_ADMIN to update the name of a
        specific custom field section of his organization by specifying its id.\n"
      operationId: putCustomFieldsSection
      parameters:
      - "$ref": "#/components/parameters/section_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Update name of custom field section
              type: object
              required:
              - name
              properties:
                name:
                  "$ref": "#/components/schemas/CustomFieldSectionName"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      tags:
      - Custom Fields Section
      summary: Delete custom field section
      description: 'This endpoint enables an ORG_ADMIN to delete a specific custom
        field section of his organization by specifying its id.

        '
      operationId: deleteCustomFieldsSection
      parameters:
      - "$ref": "#/components/parameters/section_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/attributes/list":
    get:
      summary: List Google Attributes
      description: '<p>Get all Google Attributes available for a Category in a given
        language. </p> <p>⚠️ <b>What are Google Attributes ?</b> <p>Google Attributes
        are highly visible statements about your business that appear on your Google
        listing. <p>They indicate things like Payment Options, Amenities, Accessibility
        and Highlights. <p>Does a business provide parking? Does it have a fireplace?
        Can customers pay with a debit card? <p>To recover attributes values set for
        a business, <a href="#operation/getBusinessAttributes">see get attributes
        business endpoints</a>. <p>To handle attributes values for businesses, <a
        href="#operation/postBusinessAttributes">see set attributes business endpoints</a>.
        <p>This endpoint allows you to view the **Google** attributes available for
        a given Category.

        '
      operationId: getAttributes
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/category_name"
      - "$ref": "#/components/parameters/country"
      - "$ref": "#/components/parameters/lang"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AttributesGroupResponse"
        '400':
          description: Wrong or missing parameters
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/AttributesMissingParametersError"
                - "$ref": "#/components/schemas/AttributesWrongCategoryError"
                - "$ref": "#/components/schemas/AttributesWrongLangError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/more_hours/list":
    get:
      summary: List Google more hours
      description: '<p>⚠️ <b>What are Google More Hours ?</b> <p>More Hours is a feature
        in <i>Google</i> that allows the business owner to display hours for specific
        services available. <p>Examples of such services include opening hours for
        the kitchen, for breakfast, for happy hour, etc. <p>Notice that the available
        More Hour IDs vary between both business categories and countries. For example,
        a restaurant will have different More Hour IDs available than a bank, and
        a restaurant in France will have different IDs available than a restaurant
        in the USA. <p>To recover More Hours set for a business, <a href="#operation/getBusinessMoreHours">see
        Get More Hours for your Business endpoints</a>. <p>To handle More Hours for
        businesses, <a href="#operation/postBusinessMoreHours">see Update More Hours
        for your Business endpoints</a>. <p>This endpoint allows you to get all the
        different **More Hour IDs** available for a given business category, including
        their translated names for the given language.

        '
      operationId: moreHours
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/category_more_hours_list"
      - "$ref": "#/components/parameters/country_more_hours_list"
      - "$ref": "#/components/parameters/lang_more_hours"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MoreHoursListResponse"
        '400':
          description: Wrong or missing parameters
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/MoreHoursListMissingParametersError"
                - "$ref": "#/components/schemas/MoreHoursListInvalidCategoryError"
                - "$ref": "#/components/schemas/MoreHoursListInvalidCountryError"
                - "$ref": "#/components/schemas/AttributesWrongLangError"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/services/suggestions":
    get:
      summary: List Google Services
      description: '<p>Get all Google Services available for your business categories.
        </p> <p>⚠️ <b>What are Google Services ?</b> <p>Google Services are highly
        visible statements about your business that appear on your Google listing.
        <p>They indicate the different services available for your business, to which
        you can also add a price and a description. <p>For example, the category gcid:bakery
        has several suggested services available, such as catering or delivery. <p>Not
        satisfy with those ? You can add your very own custom services and link them
        to the category of your business of your choice ! <p>To recover services values
        set for a business, <a href="#operation/getBusinessServices">see get services
        business endpoints</a>. <p>To handle services values for businesses, <a href="#operation/postBusinessStructuredServices">see
        set structured services business endpoints</a>. <p>To handle custom services
        values for businesses, <a href="#operation/postBusinessFreeFormServices">see
        set free form services business endpoints</a>. <p>This endpoint allows you
        to view the Google Services available for your business. <p>The services available
        depends on the categories of the business not only the main one.

        '
      operationId: getServicesSuggestions
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/query_business__in"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicesSuggestionResponse"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/google-oauth-accounts/locations/{google_location_id}":
    get:
      summary: Details on a specific Google Location
      description: 'Returns a Google location object that corresponds to the given
        google_location_id. The google_location_id is a unique identifier on Partoo
        for each location. This endpoint requires authentication, and only authorized
        users with the appropriate permissions can access it.

        '
      operationId: getGoogleLocation
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/google_location_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLocation"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/google-oauth-accounts/locations/search":
    get:
      summary: Search for Google locations
      description: 'Performs a search for Google locations based on the provided query
        parameters. This endpoint requires authentication, and only authorized users
        with the appropriate permissions can access it.

        '
      operationId: searchGoogleLocations
      tags:
      - Google
      parameters:
      - name: query
        in: query
        description: "The search query string. It searches on the following fields
          of the Google location: \n  - `locality` (e.g., https://api.partoo.co/v2/google-oauth-accounts/locations/search?query=Paris)\n
          \ - `postal_code` (e.g., https://api.partoo.co/v2/google-oauth-accounts/locations/search?query=75018)\n
          \ - `location_name` (e.g., https://api.partoo.co/v2/google-oauth-accounts/locations/search?query=Annie%20-%20HQ)\n
          \ - `address_details` (e.g., https://api.partoo.co/v2/google-oauth-accounts/locations/search?query=130%20rue%20mont%20cenis)\n
          \ - `store_code` (e.g., https://api.partoo.co/v2/google-oauth-accounts/locations/search?query=annie-hq)\n"
        required: false
        schema:
          type: string
      - name: google_location_id
        in: query
        description: The ID of the Google location stored in Partoo.
        required: false
        schema:
          type: string
      - name: oauth_account_id
        in: query
        description: The ID of the OAuth account stored in Partoo.
        required: false
        schema:
          type: string
      - name: not_connected_only
        in: query
        description: Filter for locations not connected to any business.
        required: false
        schema:
          type: boolean
      - name: verification_status
        in: query
        description: Filter by verification status.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: The page number for pagination.
        required: false
        schema:
          type: integer
          default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLocations"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/verifications/google-locations/{google_location_id}/options":
    get:
      summary: Fetch Google Location Verification Options
      description: |
        This endpoint retrieves verification options for a specific Google location identified by `google_location_id`. It  requires authentication and authorization to access. The user must have at least the role of a `BUSINESS_MANAGER` to use this endpoint.

        Note that the response can return an empty options list, this can mean two things:
           - There are really no verification options available for this location.
           - Video verification is possible but not implemented through the API. In this case, you should ask the user to manually verify.
      operationId: fetchGoogleLocationVerificationOptions
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/google_location_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: The status of the response `success`, `warning` or
                      `error`.
                    type: string
                    example: success
                  options:
                    description: List of available verification options returned.
                    type: array
                    items:
                      type: object
                      properties:
                        method:
                          type: string
                          description: The method of verification, can be `PHONE_CALL`,
                            `SMS`, `EMAIL` or `ADDRESS`.
                          example: PHONE_CALL
                        phone_number:
                          type: string
                          description: "*OPTIONAL* Depending on the status: \n  -
                            `AVAILABLE`: The phone number to which the code will be
                            sent, either through an automated call or a text message.\n
                            \ - `PENDING`: The phone number where the code has been
                            sent in case of `PENDING` status.\nNote that this attribute
                            is only returned for `PHONE_CALL` and `SMS` methods.\n"
                          example: "+33187662490"
                        email:
                          type: string
                          description: "*OPTIONAL* The email address to which the
                            code will be or has been sent. Note that this attribute
                            is only returned for `EMAIL` method.\n"
                          example: email.api@partoo.fr
                        full_name:
                          type: string
                          description: "**OPTIONAL and only with `PENDING` status:**
                            The full name to which the postcard has been sent to.
                            Note that this attribute is only returned for `ADDRESS`
                            method.\n"
                          example: John Doe
                        full_address:
                          type: string
                          description: "*OPTIONAL* The full address to which the postcard
                            will be or has been sent to. Note that this attribute
                            is only returned for `ADDRESS` method.\n"
                          example: 190 Rue Championnet, 75018 Paris
                        expected_delivery_days:
                          type: integer
                          description: "*OPTIONAL* The expected of business days it
                            will take for the postcard to be delivered. Note that
                            this attribute is only returned for `ADDRESS` method.\n"
                          example: 2
                        status:
                          type: string
                          description: The status of the verification option, can
                            be `PENDING` or `AVAILABLE`.
                          example: AVAILABLE
                  message:
                    type: string
                    description: |
                      *OPTIONAL* Details of the message. Can be one of the following:
                        - `listing_verified`: The location is already verified (returned with a `success` status).
                        - `listing_in_review`: The location is already in review for verification (returned with a `warning` status).
                        - `listing_disabled`: The location is disabled (returned with a `error` status).
                        - `listing_suspended`: The location is suspended (returned with a `error` status).
                        - `listing_status_not_found`: The location is not found (returned with a `error` status).
                    example: 
                    enum:
                    - listing_verified
                    - listing_in_review
                    - listing_disabled
                    - listing_suspended
                    - listing_status_not_found
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/verifications/google-locations/{google_location_id}/start":
    post:
      summary: Start Google Location Verification Process
      description: |
        This endpoint initiates the verification process for a specific Google location identified by `google_location_id`. It requires authentication and authorization to access. The user must have at least the role of a `BUSINESS_MANAGER` to use this endpoint.

        The endpoint ensures that the chosen verification method has all the necessary information for the specific method chosen. If any required information is missing, it raises an error with the associated error message.
      operationId: startGoogleLocationVerification
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/google_location_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  enum:
                  - SMS
                  - PHONE_CALL
                  - EMAIL
                  - ADDRESS
                phone_number:
                  type: string
                  description: "**REQUIRED** for `SMS` and `PHONE_CALL` methods. The
                    phone number to which the code will be send.\n"
                  example: "+33187662490"
                email:
                  type: string
                  description: "**REQUIRED** for `EMAIL` method. The email address
                    to which the code will be send.\n"
                  example: email.api@partoo.fr
                full_name:
                  type: string
                  description: "**REQUIRED** for `ADDRESS` method. The full name to
                    which the postcard will be send.\n"
                  example: John Doe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The status of the response `success` or `error`.
                    example: success
                  message:
                    type: string
                    example: 
                    description: |
                      *OPTIONAL* Details of the error encountered. Can be one of the following:
                        - `start_no_verification_found`: No verification request has been started.
                        - `start_error`: An error occured during the start of the verification process.
                    enum:
                    - start_no_verification_found
                    - start_error
        '400':
          description: Your request is incorrect
          content:
            application/json:
              schema:
                description: 'Error that occcurs when your request is incorrect

                  '
                properties:
                  errors:
                    type: object
                    description: The detail of the error encountered.
                    properties:
                      json:
                        type: object
                        properties:
                          method:
                            type: string
                            description: |
                              Details of the error encountered. Can be one of the following:
                                - `sms_phone_call_method_without_phone_number`: The phone number is required for `SMS` and `PHONE_CALL` methods.
                                - `email_method_without_email`: The email address is required for `EMAIL` method.
                                - `address_method_without_full_name`: The full name is required for `ADDRESS` method.
                                - `not_supported`: The method is not supported.
                            example: sms_phone_call_method_without_phone_number
                            enum:
                            - sms_phone_call_method_without_phone_number
                            - email_method_without_email
                            - address_method_without_full_name
                            - not_supported
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/verifications/google-locations/{google_location_id}/complete":
    post:
      summary: Complete Google Location Verification Process
      description: |
        This endpoint completes the Google location verification process identified by `google_location_id`. It requires  authentication and authorization with at least the role of `BUSINESS_MANAGER`.

        If the verification process is not in the `PENDING` status, or if the PIN code is invalid, an error response will be returned. If the completion is successful, the verification status of the location will be updated.
      operationId: completeGoogleLocationVerification
      tags:
      - Google
      parameters:
      - "$ref": "#/components/parameters/google_location_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  enum:
                  - PHONE_CALL
                  - SMS
                  - EMAIL
                  - ADDRESS
                pin_code:
                  type: string
                  description: The PIN code provided by the user during the verification
                    process.
                  example: '1234'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The status of the response `success` or `error`.
                    example: success
                  message:
                    type: string
                    example: 
                    description: |
                      Details of the message. Can be one of the following:
                        - `complete_success`: The verification process has been completed successfully (returned with a `success` status).
                        - `complete_in_review`: The verification process has been completed successfully but the verification is still in review (returned with a `success` status).
                        - `complete_only_pending`: The verification process can be completed only on a `PENDING` verification (returned with a `error` status).
                        - `complete_invalid_pin`: The PIN code provided is invalid (returned with a `error` status).
                        - `complete_error`: An error occurred during the completion of the verification process (returned with a `error` status).
                    enum:
                    - complete_success
                    - complete_in_review
                    - complete_only_pending
                    - complete_invalid_pin
                    - complete_error
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/sections":
    post:
      tags:
      - Groups and Sections
      operationId: createGroupSection
      summary: Create Section
      description: 'Create a new section.<br> This endpoint endpoint let''s you create
        a new section. Only Group Managers and above can use this endpoint. Business
        Managers are restricted from accessing this endpoint. For more information
        about the group system, see <a href="#tag/Groups-and-Sections">the Groups
        and Sections description</a>.

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to create a section
              type: object
              required:
              - name
              properties:
                name:
                  "$ref": "#/components/schemas/SectionName"
                org_id:
                  "$ref": "#/components/schemas/SectionCreateOrgId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SectionCreateSuccessResponse"
        '400':
          description: Section name already exists
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/SectionCreateNameConflictResponse"
                - "$ref": "#/components/schemas/SectionCreateForbiddenCharactersResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    get:
      tags:
      - Groups and Sections
      operationId: getGroupSections
      summary: Get Sections
      description: 'Get all the sections for an organization.<br> For more information
        about the group system, see <a href="#tag/Groups-and-Sections">the Groups
        and Sections description</a>.

        '
      parameters:
      - "$ref": "#/components/parameters/query_page"
      - "$ref": "#/components/parameters/query_org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SectionsGetSuccessResponse"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/sections/{section_id}":
    delete:
      tags:
      - Groups and Sections
      operationId: deleteGroupSection
      summary: Delete Section
      description: 'Delete a section.<br> This endpoint endpoint let''s you delete
        an existing section. Only Group Managers and above can use this endpoint.
        Business Managers are restricted from accessing this endpoint. For more information
        about the group system, see <a href="#tag/Groups-and-Sections">the Groups
        and Sections description</a>.

        '
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SectionDeleteSuccessResponse"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Groups and Sections
      operationId: updateGroupSection
      summary: Update Section
      description: 'Update the name of a section.<br> This endpoint endpoint let''s
        you update an existing section. Only Group Managers and above can use this
        endpoint. Business Managers are restricted from accessing this endpoint. For
        more information about the group system, see <a href="#tag/Groups-and-Sections">the
        Groups and Sections description</a>.

        '
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a section
              type: object
              required:
              - name
              properties:
                name:
                  "$ref": "#/components/schemas/SectionName"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SectionUpdateSuccessResponse"
        '400':
          description: Section name already exists
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/SectionCreateNameConflictResponse"
                - "$ref": "#/components/schemas/SectionCreateForbiddenCharactersResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    get:
      tags:
      - Groups and Sections
      operationId: getGroupSectionById
      summary: Get Section by ID
      description: 'Get a single section.<br> For more information about the group
        system, see <a href="#tag/Groups-and-Sections">the Groups and Sections description</a>.

        '
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SectionItem"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/sections/{section_id}/groups":
    post:
      tags:
      - Groups and Sections
      operationId: createGroup
      summary: Create Group and set businesses
      description: |
        Create a new group.<br> This endpoint allows Group Managers to create new groups within the system. For more information about the group system, see <a href="#tag/Groups-and-Sections">the Groups and Sections description</a>.
        <p>
          ⚠️ You need to precise which businesses are part of the group when creating it using the <code>business__in</code> parameter.
          If don't precise any business, the group will be created with all the businesses. If you want to create an empty group, you can just put an empty array in the <code>business__in</code> parameter.
        </p>
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to create a group
              type: object
              required:
              - name
              - business__in
              properties:
                name:
                  "$ref": "#/components/schemas/GroupV2Name"
                business__in:
                  "$ref": "#/components/schemas/business_ids"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupCreateSuccessResponse"
        '400':
          description: Group name already exists
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/SectionCreateNameConflictResponse"
                - "$ref": "#/components/schemas/SectionCreateForbiddenCharactersResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/sections/{section_id}/groups/{group_id}":
    post:
      tags:
      - Groups and Sections
      operationId: updateGroup
      summary: Update Group and set businesses
      description: |
        Update a group.<br> This endpoint endpoint let's you modify existing group details within the system. Only Group Managers and above can use this endpoint. Business Managers are restricted from accessing this endpoint. For more information about the group system, see <a href="#tag/Groups-and-Sections">the Groups and Sections description</a>.
        <p>
          ⚠️ You need to precise which businesses are part of the group when updating it using the <code>business__in</code> parameter.
          If don't precise any business, the group will be updated with all the businesses. If you want to update a group to be empty, you can just put an empty array in the <code>business__in</code> parameter.
        </p>
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      - "$ref": "#/components/parameters/path_group_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a group
              type: object
              required:
              - name
              - business__in
              properties:
                name:
                  "$ref": "#/components/schemas/GroupV2Name"
                business__in:
                  "$ref": "#/components/schemas/business_ids"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupCreateSuccessResponse"
        '400':
          description: Group name already exists
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/SectionCreateNameConflictResponse"
                - "$ref": "#/components/schemas/SectionCreateForbiddenCharactersResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    get:
      tags:
      - Groups and Sections
      operationId: getGroup
      summary: Get Group
      description: 'Get a group and it''s associated business IDs.<br> For more information
        about the group system, see <a href="#tag/Groups-and-Sections">the Groups
        and Sections description</a>.

        '
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      - "$ref": "#/components/parameters/path_group_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetGroupItem"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    delete:
      tags:
      - Groups and Sections
      operationId: deleteGroup
      summary: Delete Group
      description: 'Delete a group.<br> This endpoint endpoint let''s you delete an
        existing group. Only Group Managers and above can use this endpoint. Business
        Managers are restricted from accessing this endpoint. For more information
        about the group system, see <a href="#tag/Groups-and-Sections">the Groups
        and Sections description</a>.

        '
      parameters:
      - "$ref": "#/components/parameters/path_section_id"
      - "$ref": "#/components/parameters/path_group_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupDeleteSuccessResponse"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/holidays/{country}":
    get:
      tags:
      - Holidays
      operationId: getHolidays
      summary: Get holidays
      description: 'This endpoint allows you to retrieve a list of upcoming bank holidays
        for a specified country within the next 365 days.  The holidays are ordered
        based on their occurrence dates.

        '
      parameters:
      - name: country
        in: path
        required: true
        schema:
          type: string
        example: FR
        description: Country code from ISO 3166 international standard - https://www.iban.com/country-codes
      - name: lang
        in: query
        schema:
          description: Preferred language for holiday names. If no language is provided,
            the user's default language will be used. If the user's default language
            is unavailable, the country's primary language will be used.
          type: string
          enum:
          - fr
          - en
          - es
          - it
          - pt-br
          - de
          - ar
          example: fr
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  holidays:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of bank holiday
                        date:
                          type: string
                          format: date
                          description: Date of bank holiday
                example:
                  holidays:
                  - name: Armistice
                    date: '2023-11-11'
                  - name: Noël
                    date: '2023-12-25'
                  - name: Jour de l'an
                    date: '2024-01-01'
                  - name: Lundi de Pâques
                    date: '2024-04-01'
                  - name: Fête du Travail
                    date: '2024-05-01'
                  - name: Fête de la Victoire
                    date: '2024-05-08'
                  - name: Ascension
                    date: '2024-05-09'
                  - name: Lundi de Pentecôte
                    date: '2024-05-20'
                  - name: Fête nationale
                    date: '2024-07-14'
                  - name: Assomption
                    date: '2024-08-15'
                  - name: Toussaint
                    date: '2024-11-01'
                  - name: Christmas
                    date: '2024-12-25'
                  - name: New Year's Day
                    date: '2025-01-01'
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/org/search":
    get:
      tags:
      - Organizations
      summary: Search for organizations
      operationId: searchOrganizations
      description: 'This endpoint lets you search for organizations using filters.
        The response is paginated (30 results per page).

        '
      parameters:
      - "$ref": "#/components/parameters/query_org_id"
      - in: query
        name: query
        schema:
          type: string
        required: false
        description: Parameter to fuzzy search organizations on name or id
      - name: alias
        in: query
        schema:
          type: string
        required: false
        description: Parameter to search an organization by its alias
      - "$ref": "#/components/parameters/query_page"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object return by the API
                properties:
                  page:
                    "$ref": "#/components/schemas/current_page"
                  max_page:
                    "$ref": "#/components/schemas/max_page"
                  count:
                    "$ref": "#/components/schemas/count"
                  orgs:
                    type: array
                    description: The organizations complying with filter (30 max per
                      page)
                    items:
                      "$ref": "#/components/schemas/Org"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/org":
    post:
      tags:
      - Organizations
      summary: Create organization
      operationId: createOrganization
      description: 'This endpoint lets you create an organization. You have `WRITE`
        access on your provider (ie. only possible if you have `PROVIDER` role).

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: JSON to create an organization
              required:
              - name
              properties:
                name:
                  "$ref": "#/components/schemas/OrgName"
                alias:
                  "$ref": "#/components/schemas/OrgAlias"
                max_businesses:
                  "$ref": "#/components/schemas/OrgMaxBusinesses"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
                  org_id:
                    "$ref": "#/components/schemas/OrgId"
                  alias:
                    "$ref": "#/components/schemas/OrgAlias"
                  max_businesses:
                    "$ref": "#/components/schemas/OrgMaxBusinesses"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/org/{org_id}":
    get:
      tags:
      - Organizations
      summary: Organization information
      operationId: getOrganization
      description: 'This endpoint lets you retrieve all the detail about a specific
        organization. You need to have `READ` access to this organization.

        '
      parameters:
      - "$ref": "#/components/parameters/path_org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Org"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Organizations
      summary: Update organization
      operationId: updateOrganization
      description: 'This endpoint lets you update the information of an organization.
        You need to have `WRITE` access on the organization.

        '
      parameters:
      - "$ref": "#/components/parameters/path_org_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The object to send to update an organization
              properties:
                name:
                  "$ref": "#/components/schemas/OrgName"
                alias:
                  "$ref": "#/components/schemas/OrgAlias"
                max_businesses:
                  "$ref": "#/components/schemas/OrgMaxBusinesses"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  org_id:
                    "$ref": "#/components/schemas/OrgId"
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      tags:
      - Organizations
      summary: Delete organization
      operationId: deleteOrganization
      description: 'This endpoint lets you delete an organization. You need to have
        `WRITE` access on your provider. When an organization gets deleted all the
        resources linked to it are deleted (users and businesses). If the organization
        still has businesses or users, it would raise an error if you do not indicate
        `force="True"` in the JSON body.

        '
      parameters:
      - "$ref": "#/components/parameters/path_org_id"
      - "$ref": "#/components/parameters/organization_force_delete"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Response object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
                  org_id:
                    "$ref": "#/components/schemas/OrgId"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/org/{org_id}/plans":
    get:
      tags:
      - Organizations
      summary: Get Organization's plans
      operationId: organizationPlans
      description: 'This endpoint lets you retrieve the organization''s plans.<br
        /> You need to be a Provider to access this endpoint.

        '
      parameters:
      - "$ref": "#/components/parameters/path_org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrgPlans"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    post:
      tags:
      - Organizations
      summary: Update organization's plans
      operationId: updateOrganizationPlans
      description: 'This endpoint lets you update the plans of an organization.<br
        /> You need to be a Provider to access this endpoint.<br /> ⚠️You need to
        send <b>all the plans</b>, those not sent will be removed. We advise you to
        call the GET endpoint first. ⚠️

        '
      parameters:
      - "$ref": "#/components/parameters/path_org_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrgPlansUpdate"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  org_id:
                    "$ref": "#/components/schemas/OrgId"
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/posts":
    get:
      summary: Search for post
      description: 'This endpoint lets you browse through all your posts.

        '
      operationId: searchPost
      tags:
      - Posts
      parameters:
      - "$ref": "#/components/parameters/query_business__in"
      - "$ref": "#/components/parameters/query_post_start_datetime"
      - "$ref": "#/components/parameters/query_post_end_datetime"
      - "$ref": "#/components/parameters/query_post_summary"
      - "$ref": "#/components/parameters/query_post_state_in"
      - "$ref": "#/components/parameters/query_post_topic_type"
      - "$ref": "#/components/parameters/query_post_topic_type_in"
      - "$ref": "#/components/parameters/query_page_up_to_100"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    posts:
                      type: array
                      description: List of Post
                      items:
                        "$ref": "#/components/schemas/Post"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      summary: Create a post
      description: "This endpoint lets you create a post or a draft post on Google
        / Facebook / Instagram.\n\nThe creation of a post will not happen in real
        time and might take a few minutes.\n\nA draft post can only be created by
        Org Admins and is not immediately published. \nAn expiration date must be
        specified when creating a draft post.\nIn order to be published, a draft needs
        to be updated by a BM/GM user before the expiration date.\n"
      operationId: createPost
      tags:
      - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to create a Post
              type: object
              required:
              - business_search
              - data
              - publishers
              properties:
                business_search:
                  "$ref": "#/components/schemas/PostBusinessSearch"
                publishers:
                  "$ref": "#/components/schemas/PostPublishers"
                data:
                  "$ref": "#/components/schemas/PostData"
                is_draft:
                  description: If true, the post will be created as a draft. You must
                    then also specify an `expiration_time` in the body's data.
                  type: boolean
                  default: false
                send_notifications:
                  description: If true, a notification email will be sent to all BM/GM
                    users that have access to this draft post
                  type: boolean
                  default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/requestResponsePost"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/posts/{post_id}":
    put:
      summary: Update a post
      description: "This endpoint lets you update a post.\n\nWhen used by a BM or
        GM user, this endpoint also serves to validate and publish a draft post.  \n\nThe
        update will not happen in real time and might take a few minutes\n\n⚠️ Due
        to Instagram API limitations, **this operation has no effect on Instagram
        posts**.\n"
      operationId: updatePost
      tags:
      - Posts
      parameters:
      - "$ref": "#/components/parameters/path_post_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostUpdateData"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Post"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      summary: Delete a post
      description: |
        This endpoint lets you delete a post.

        The deletion will not happen in real time and might take a few minutes.

        ⚠️ Due to Instagram API limitations, **this operation has no effect on Instagram posts.**
      operationId: deletePost
      tags:
      - Posts
      parameters:
      - "$ref": "#/components/parameters/path_post_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/place_action_links":
    get:
      tags:
      - Place Action Links
      summary: Get Place Action Links
      description: "Retrieve a list of available place action links. \n"
      operationId: getAvailablePlaceActionLinks
      parameters:
      - "$ref": "#/components/parameters/query_place_action_link_lang"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetPlaceActionLinksResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/publisher_states":
    get:
      summary: PublisherStates
      description: |
        Method to retrieve businesses diffusions states on publishers.

        Can be filtered by:
        - Business IDs
        - Publishers
        - States
      operationId: getPublisherStates
      tags:
      - Presence
      parameters:
      - "$ref": "#/components/parameters/query_business__in"
      - name: publishers
        in: query
        required: false
        description: List of requested publisher names
        schema:
          type: array
          items:
            type: string
          example: facebook,google_my_business
      - name: states
        in: query
        required: false
        description: List of the requested states
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/state"
          example: success,to_configure,pending
      - name: per_page
        in: query
        schema:
          type: integer
          default: 5
          minimum: 1
          maximum: 100
        description: Number of items to return per page. Currently limited to 100.
      - name: page
        in: query
        required: false
        description: Page requested
        schema:
          type: integer
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/getPublisherStatesResponse"
              examples:
                publishers=[facebook, apple_direct]&states=[success,to_configure,pending]&page=1&per_page=1:
                  value:
                    businesses:
                      56465qz56d4q65zd4:
                        business_formatted_address: 1 Rue du Général de Gaulle, 52330
                          Colombey-les-Deux-Églises
                        business_id: 56465qz56d4q65zd4
                        business_name: La Boisserie
                        publishers:
                          apple_direct:
                            error_type: 
                            state: success
                            url_on_publisher: 
                          facebook:
                            error_type: PUBLISHER_CONNEXION
                            state: to_configure
                            url_on_publisher: http://facebook/boisserie
                    count: 1
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/publisher_errors/{business_id}":
    post:
      summary: PublisherErrors
      description: "This method retrieve a list of known errors associated with a
        publisher for a business, including detailed descriptions. \n\nThe request
        body is mandatory. \n\nProviding an empty request body will return errors
        based on the business information stored in the database.\n\nProviding a populated
        request body will return errors related to the specified fields and their
        values only.\n"
      operationId: postPublisherErrors
      tags:
      - Presence
      parameters:
      - "$ref": "#/components/parameters/business_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                name:
                  "$ref": "#/components/schemas/BusinessName"
                org_id:
                  "$ref": "#/components/schemas/BusinessOrgId"
                country:
                  "$ref": "#/components/schemas/BusinessCountry"
                zipcode:
                  "$ref": "#/components/schemas/BusinessZipcode"
                city:
                  "$ref": "#/components/schemas/BusinessCity"
                region:
                  "$ref": "#/components/schemas/BusinessRegion"
                categories:
                  "$ref": "#/components/schemas/BusinessCategories"
                code:
                  "$ref": "#/components/schemas/BusinessCode"
                status:
                  "$ref": "#/components/schemas/BusinessStatus"
                address_full:
                  "$ref": "#/components/schemas/AddressFull"
                address2:
                  "$ref": "#/components/schemas/Address2"
                manual_lat:
                  "$ref": "#/components/schemas/BusinessLatitude"
                manual_long:
                  "$ref": "#/components/schemas/BusinessLongitude"
                lat:
                  "$ref": "#/components/schemas/BusinessLatitude"
                long:
                  "$ref": "#/components/schemas/BusinessLongitude"
                website_url:
                  "$ref": "#/components/schemas/BusinessWebsite"
                facebook_url:
                  "$ref": "#/components/schemas/BusinessFacebookPage"
                twitter_url:
                  "$ref": "#/components/schemas/BusinessTwitter"
                description_short:
                  "$ref": "#/components/schemas/BusinessShortDescription"
                description_long:
                  "$ref": "#/components/schemas/BusinessLongDescription"
                open_hours:
                  "$ref": "#/components/schemas/OpenHours"
                specific_hours:
                  "$ref": "#/components/schemas/SpecificHours"
                contacts:
                  "$ref": "#/components/schemas/BusinessContactsCreate"
                photos:
                  "$ref": "#/components/schemas/Photos"
                national_identification_number:
                  "$ref": "#/components/schemas/BusinessNationalIdentificationNumber"
            examples:
              empty request body:
                description: Providing an empty request body will return errors based
                  on the business information stored in the database.
                value: {}
              filled request body:
                description: Providing a populated request body will return errors
                  related to the specified fields and their values only.
                value:
                  name: Corner Shop
                  country: US
                  zipcode: '90210'
                  city: Beverly Hills
                  region: CA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/postPublisherErrorsResponse"
              examples:
                without errors:
                  value: {}
                with errors:
                  value:
                    hours:
                      open_hours:
                        le118000: 118000_supports_only_three_time_window_per_day
                        facebook: facebook_supports_only_two_time_window_per_day
                        apple_business_connect: open_hours_less_than_15_min_interval_apple_business_connect
                    description:
                      description_short:
                        facebook: facebook_new_pages_description_short_too_long
                    contact:
                      phone_number:
                        google_my_business: invalid_field
                        snapchat: invalid_field
                        le118000: invalid_field
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/reviews":
    get:
      summary: Search for reviews
      description: |
        This endpoint lets you search for the reviews of your businesses.

        To access the reviews of a business you need to have `READ` access on it.
        The response is paginated (30 results per page).
      operationId: searchReviews
      tags:
      - Reviews
      parameters:
      - "$ref": "#/components/parameters/query_business__in"
      - "$ref": "#/components/parameters/query_business__notin"
      - "$ref": "#/components/parameters/query_content__isnull"
      - "$ref": "#/components/parameters/query_partner__in"
      - "$ref": "#/components/parameters/query_gmb_rating__in"
      - "$ref": "#/components/parameters/query_tripadvisor_rating__in"
      - "$ref": "#/components/parameters/query_recommended__in"
      - "$ref": "#/components/parameters/query_review_update_date__gte"
      - "$ref": "#/components/parameters/query_review_update_date__lte"
      - "$ref": "#/components/parameters/query_review_state"
      - "$ref": "#/components/parameters/query_tag_label_in"
      - "$ref": "#/components/parameters/query_review_without_tag"
      - "$ref": "#/components/parameters/query_keywords"
      - "$ref": "#/components/parameters/query_page_up_to_100"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      - "$ref": "#/components/parameters/query_order_by"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    reviews:
                      description: Filtered reviews
                      type: array
                      items:
                        "$ref": "#/components/schemas/Review"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/reviews/{review_id}":
    put:
      summary: Update a review
      description: 'Update the state of a review to treated/not_treated

        '
      operationId: updateReview
      tags:
      - Reviews
      parameters:
      - in: path
        name: review_id
        required: true
        schema:
          "$ref": "#/components/schemas/ReviewId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post a reply
              type: object
              required:
              - review_id
              - state
              properties:
                state:
                  description: Reply state
                  type: string
                  enum:
                  - treated
                  - not_treated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Review"
                - properties:
                    state:
                      example: treated
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/comments":
    post:
      tags:
      - Reviews
      summary: Post a reply to a review
      description: This endpoint lets you reply to a given review.
      operationId: ReplyToReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post a reply
              type: object
              required:
              - review_id
              - content
              properties:
                review_id:
                  description: ID of the review you want to reply
                  type: number
                  example: 34
                parent_id:
                  description: |
                    The id of the parent comment you want to reply

                    Works only for Facebook comments, since it's possible to reply to a comment (depth max is 2).
                    Google and TripAdvisor don't accept this behaviour.
                  type: number
                  example: 1234
                content:
                  description: Content of your reply
                  type: string
                  format: text
                  example: Merci ❤️
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comment"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/comments/{comment_id}":
    put:
      tags:
      - Reviews
      summary: Modify a reply to a review
      description: This endpoint lets you modify a given reply to a review.
      operationId: ModifyReplyOfReview
      parameters:
      - in: path
        name: comment_id
        required: true
        schema:
          "$ref": "#/components/schemas/CommentId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to modify a reply
              type: object
              required:
              - content
              properties:
                content:
                  description: Content of your Reply
                  type: string
                  format: text
                  example: Merci ❤️
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comment"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      tags:
      - Reviews
      summary: Delete the given reply to a review
      operationId: deleteReply
      description: 'This endpoint lets you delete the reply to a review

        '
      parameters:
      - in: path
        name: comment_id
        required: true
        schema:
          "$ref": "#/components/schemas/CommentId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - success
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/reviews/templates/search":
    get:
      summary: Search for review reply templates
      description: 'This endpoint lets you browse through all your reply review templates.

        '
      operationId: searchTemplate
      tags:
      - Reviews
      parameters:
      - "$ref": "#/components/parameters/query_page"
      - "$ref": "#/components/parameters/query_positive_template"
      - "$ref": "#/components/parameters/query_neutral_template"
      - "$ref": "#/components/parameters/query_negative_template"
      - "$ref": "#/components/parameters/query_language__in"
      - "$ref": "#/components/parameters/query_title_query"
      - "$ref": "#/components/parameters/query_text_query"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    reply_templates:
                      type: array
                      description: List of reply review templates
                      items:
                        "$ref": "#/components/schemas/Template"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/reviews/templates/placeholders":
    get:
      summary: All available placeholders
      description: |
        This endpoint lets you access available placeholders for reply review templates.
        A template placeholder is a dynamically updated word within the Partoo app depending on the context.

        Ex: Once used to answer a review, if a template has a `client_first_name` placeholder, the placeholder will take the value of the reviewer's first name.
      operationId: getTemplatePlaceholders
      tags:
      - Reviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TemplatePlaceholder"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/reviews/template":
    post:
      summary: Create a review reply template
      description: 'This endpoint lets you create a review reply template.

        '
      operationId: createTemplate
      tags:
      - Reviews
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post/edit a reply
              type: object
              required:
              - language
              - negative
              - neutral
              - positive
              - text
              - title
              properties:
                language:
                  "$ref": "#/components/schemas/Lang"
                negative:
                  "$ref": "#/components/schemas/TemplateNegative"
                neutral:
                  "$ref": "#/components/schemas/TemplateNeutral"
                positive:
                  "$ref": "#/components/schemas/TemplatePositive"
                text:
                  "$ref": "#/components/schemas/TemplateText"
                title:
                  "$ref": "#/components/schemas/TemplateTitle"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Template"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/reviews/template/{template_id}":
    delete:
      summary: Delete a review reply template
      description: 'This endpoint lets you delete a review reply template given its
        id.

        '
      operationId: deleteTemplate
      tags:
      - Reviews
      parameters:
      - "$ref": "#/components/parameters/path_template_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/presence_analytics/metrics":
    get:
      summary: Profile metrics for your business
      description: |
        This endpoint lets you view the **Google Business Profile** analytics for all your businesses subscribed to
        **Presence Management**.
        The API allows you to select what data you're interested in, and how you want it aggregated (daily, monthly,
        by business, etc). You can also filter the results to limit it to a certain date range, and to certain business.

        Google Business Profile doesn't provide reliable data for the most recent 5 days.

        You can choose the analytics you want to get among:
        - impressions: desktop maps impressions, mobile maps impressions, desktop search impressions, and mobile search impressions
        - actions: website link clicks, phone calls, and driving directions

        You can use the following filters:
        - by businesses (businesses id in list or not in list)
        - by date (analytics before and/or after a date)
        - by business query. Will return matches for the business name, zipcode or city
        - by business city.

        The response can be aggregated by:
        - business id
        - by date: either by day, week, month or year
        - by both business id and date

        The response can be ordered in ascending or descending order by any of the selected dimensions or metrics.
        See examples for more details.
      operationId: getPresenceAnalyticsMetrics
      tags:
      - Presence analytics
      deprecated: false
      parameters:
      - "$ref": "#/components/parameters/query_metrics"
      - "$ref": "#/components/parameters/query_dimensions"
      - "$ref": "#/components/parameters/parameters_query_order_by"
      - "$ref": "#/components/parameters/parameters_query_business__in"
      - "$ref": "#/components/parameters/parameters_query_business__notin"
      - "$ref": "#/components/parameters/query_city"
      - "$ref": "#/components/parameters/query_query"
      - "$ref": "#/components/parameters/query_filter_date__gte"
      - "$ref": "#/components/parameters/query_filter_date__lte"
      - "$ref": "#/components/parameters/parameters_query_page"
      - "$ref": "#/components/parameters/query_per_page"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PresenceAnalyticsMetricsResponse"
              examples:
                ? metrics=business_impressions_desktop_maps,business_impressions_desktop_search,business_impressions_mobile_maps,business_impressions_mobile_search,business_direction_requests,call_clicks,website_clicks
                : value:
                    page: 1
                    count: 1
                    max_page: 1
                    metrics:
                    - business_impressions_desktop_maps: 123
                      business_impressions_desktop_search: 123
                      business_impressions_mobile_maps: 123
                      business_impressions_mobile_search: 123
                      business_direction_requests: 123
                      call_clicks: 123
                      website_clicks: 123
                dimensions=business & metrics=call_clicks:
                  value:
                    page: 1
                    count: 3
                    max_page: 1
                    metrics:
                    - call_clicks: 103
                      business_id: 59b2645db12ff60643ef832c
                    - call_clicks: 165
                      business_id: 60b2645fb12ff60643ef8344
                    - call_clicks: 28
                      business_id: 70b2645eb12ff60643ef833c
                dimensions=month & metrics=website_clicks & order_by=website_clicks:
                  value:
                    page: 1
                    count: 2
                    max_page: 1
                    metrics:
                    - website_clicks: 57
                      date: '2019-08-01'
                      bucket: month
                    - website_clicks: 79
                      date: '2019-09-01'
                      bucket: month
                dimensions=day,business & metrics=call_clicks & order_by=-day:
                  value:
                    page: 1
                    count: 6
                    max_page: 1
                    metrics:
                    - call_clicks: 48
                      business_id: 59b2645db12ff60643ef832c
                      date: '2019-09-30'
                      bucket: day
                    - call_clicks: 6
                      business_id: 59b2645fb12ff60643ef8344
                      date: '2019-09-30'
                      bucket: day
                    - call_clicks: 11
                      business_id: 59b2645db12ff60643ef832c
                      date: '2019-09-29'
                      bucket: day
                    - call_clicks: 0
                      business_id: 59b2645fb12ff60643ef8344
                      date: '2019-09-29'
                      bucket: day
                    - call_clicks: 2
                      business_id: 59b2645db12ff60643ef832c
                      date: '2019-09-28'
                      bucket: day
                    - call_clicks: 66
                      business_id: 59b2645fb12ff60643ef8344
                      date: '2019-09-28'
                      bucket: day
                dimensions=week & metrics=website_clicks & filter_date__gte=2019-09-15 & filter_date__lte=2019-09-16:
                  value:
                    page: 1
                    count: 2
                    max_page: 1
                    metrics:
                    - website_clicks: 32
                      date: '2019-09-09'
                      bucket: week
                    - website_clicks: 164
                      date: '2019-09-16'
                      bucket: week
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/presence_analytics/keywords":
    get:
      summary: Profile keywords for your business
      description: |
        This endpoint lets you view the monthly **Google Business Profile** search keywords for all your businesses subscribed to Presence Management.

        To access the analytics of a business, you need to:
        - have `READ` access on it
        - have subscribed to **Presence Management** for this business.
        - You can access the search keywords from **Google Business Profile**.

        The analytics on search keywords are made available by Google Business Profile on a monthly basis.

        You will receive the following metrics:

        - count: The sum of the number of unique users that used the keyword in a month
        - threshold: A threshold value indicating that the actual value is less than the threshold. Google Business Profile typically displays for search keywords that were used less than 15 times in a month.

        You can use the following filters:

        - by businesses (businesses id in list, and restricted to one business when using the keyword dimension.)
        - by date (analytics before and/or after a date)

        The response can be aggregated by:
        - business id
        - by date: month or year
        - both business id and date

        The response can be ordered by:

        - business id
        - by date: month, or year

        The response can be ordered in ascending or descending order by any of the selected dimensions or metrics.
      operationId: getPresenceAnalyticsKeywords
      tags:
      - Presence analytics
      deprecated: false
      parameters:
      - "$ref": "#/components/parameters/parameters_query_metrics"
      - "$ref": "#/components/parameters/parameters_query_dimensions"
      - "$ref": "#/components/parameters/parameters_query_order_by-2"
      - "$ref": "#/components/parameters/parameters_query_business__in"
      - "$ref": "#/components/parameters/parameters_query_filter_date__gte"
      - "$ref": "#/components/parameters/parameters_query_filter_date__lte"
      - "$ref": "#/components/parameters/parameters_query_page"
      - "$ref": "#/components/parameters/query_per_page"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PresenceAnalyticsKeywordsResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/review_analytics/metrics":
    get:
      tags:
      - Review analytics
      summary: Get Review metrics
      operationId: getReviewAnalyticsMetrics
      description: |
        This endpoint lets you view the statistics related to reviews made to your businesses subscribed to
         **Review Management**.

         A request is composed of:
         - One or more `metrics` which is the data you want to return
         - An optional `dimensions` which defines how the data is grouped by
           - If it is omitted, the request will return the metrics over all the data, based on your filters
         - An optional `order_by` to define how the data is sorted
         - Filters, the data can be filtered by:
           - Businesses
           - Groups
           - Tags
           - Review update date

         Here is the list of all **metrics** available:
         - `average_rating`: Average rating
         - `rating_distribution`: Breakdown of the ratings (Number of 1-star reviews, 2-star reviews, 3-star reviews, etc...)
         - `reviews_count`: Number of reviews received
         - `reply_time`: Breakdown of the reviews based on how fast (less or more than 48 hours) they have been replied to (or not replied)
         - `reply_means`: Breakdown of the review replies based on the reply method used (manual reply, reply template, auto reply or AI suggestion)
         - `average_rating_distribution`: Breakdown of your businesses based on their average rating
         - `rank`: Allows you to rank the users, businesses or groups based on their performance on a metric (an order_by is required)

         Here is the list of all **dimensions** available, and for each of them, the list of metrics and sort order available:
         - No dimension
           - This allows you to get global stats across all your businesses
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`, `reply_time`, `reply_means`, `average_rating_distribution`
         - Date dimensions: `day`, `week`, `month`, `year`
           - This allows you to get the evolution of your metrics over time
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`, `reply_time`, `reply_means`
         - Business and business group dimensions: `business`, `group`
           - This allows you to see the metrics business by business or group by group (Requires group filter)
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`, `reply_time`, `reply_means`, `rank`
         - `user`
           - This allows you to see the metrics user by user
           - Available metrics: `reply_time`, `reply_means`, `rank`
         - `tag`
           - This allows you to see the metrics tag by tag
           - Available metrics: `average_rating`, `rating_distribution`, `reviews_count`

         Here is the list of all **order_by** available (Add a minus `-` sign before to order by decreasing order):
         - `average_rating`: Sort by average rating
         - `reviews_count`: Sort by review_count
         - `reply_time__total`: Sort by number of reviews received
         - `reply_means__total`: Sort by number of reviews that have been replied
         - `ratio__rating_distribution__5`: Sort by the ratio of 5 star reviews
         - `ratio__rating_distribution__negative`: Sort by the ratio of negative reviews
         - `ratio__reply_time__fast`: Sort by the ratio of reviews replied in less than 2 days
         - `ratio__reply_time__slow`: Sort by the ratio of reviews replied in more than 2 days
         - `ratio__reply_time__not_replied`: Sort by the ratio of reviews not replied
         - `ratio__reply_means__manual`: Sort by the ratio reviews replied manually
         - `ratio__reply_means__ai_suggestion`: Sort by the ratio reviews replied using AI suggestion
         - `ratio__reply_means__reply_template`: Sort by the ratio reviews replied using reply template
         - `ratio__reply_means__auto_reply`: Sort by the ratio reviews replied using auto reply

         To use an **order_by** parameter, its corresponding metric must be included in the request.
         (i.e.
         to order by `average_rating`, you must include the `average_rating` metric in the `metrics` parameter,
         to order by `ratio__rating_distribution__5`, you must include the `rating_distribution` metric in the `metrics` parameter,
         and so on...)
      parameters:
      - "$ref": "#/components/parameters/parameters_query_metrics-2"
      - "$ref": "#/components/parameters/parameters_query_dimensions-2"
      - "$ref": "#/components/parameters/parameters_query_order_by-3"
      - "$ref": "#/components/parameters/parameters_query_business__in"
      - "$ref": "#/components/parameters/parameters_query_business__notin"
      - "$ref": "#/components/parameters/query_groups"
      - "$ref": "#/components/parameters/query_tags"
      - "$ref": "#/components/parameters/query_update_date__gte"
      - "$ref": "#/components/parameters/query_update_date__lte"
      - "$ref": "#/components/parameters/parameters_query_page-2"
      - "$ref": "#/components/parameters/parameters_query_per_page"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/ReviewMetricsResponse"
              examples:
                "?metrics=average_rating&dimensions=business":
                  value:
                    page: 1
                    count: 2
                    max_page: 1
                    data:
                    - dimension: 59b2645db12ff60643ef832c
                      dimension_name: Business 1
                      dimension_info:
                        address_full: 190 rue Championnet
                        city: Paris
                        zipcode: '75018'
                        code: PTOCODE1
                      metrics:
                        average_rating: 2.31
                    - dimension: 60b2645fb12ff60643ef8344
                      dimension_name: Business 2
                      dimension_info:
                        address_full: 190 rue Championnet
                        city: Paris
                        zipcode: '75018'
                        code: PTOCODE2
                      metrics:
                        average_rating: 4.31
                "?metrics=average_rating_distribution":
                  value:
                    page: 1
                    count: 1
                    max_page: 1
                    data:
                    - dimension: 
                      metrics:
                        average_rating_distribution:
                          4.3-5: 274
                          3.8-4.3: 124
                          3-3.8: 62
                          0-3: 5
                          'NULL': 4
                "?metrics=average_rating,reviews_count&dimensions=day&filter_date__lte=2024-02-13&filter_date__gte=2024-02-11":
                  value:
                    page: 1
                    count: 3
                    max_page: 1
                    data:
                    - dimension: '2024-02-11'
                      metrics:
                        average_rating: 3.31
                        reviews_count: 123
                    - dimension: '2024-02-12'
                      metrics:
                        average_rating: 3.34
                        reviews_count: 123
                    - dimension: '2024-02-13'
                      metrics:
                        average_rating: 3.77
                        reviews_count: 123
                "?metrics=reply_time,reply_means&dimensions=user":
                  value:
                    page: 1
                    count: 1
                    max_page: 1
                    data:
                    - dimension: 64477ae0264810a01c0a4edf
                      dimension_name: User 1
                      metrics:
                        reply_time:
                          fast: 11
                          slow: 32
                          not_replied: 0
                          total: 43
                        reply_means:
                          ai_suggestion: 20
                          manual: 3
                          auto_reply: 0
                          reply_template: 20
                          total: 43
                "?metrics=rank,rating_distribution&dimensions=group&order_by=-ratio__rating_distribution__5&groups=1244,1245,1246":
                  value:
                    page: 1
                    count: 3
                    max_page: 1
                    data:
                    - dimension: 1244
                      dimension_name: Group 1244
                      metrics:
                        rank: 1
                        rating_distribution:
                          '1': 0
                          '2': 0
                          '3': 0
                          '4': 0
                          '5': 65
                    - dimension: 1245
                      dimension_name: Group 1245
                      metrics:
                        rank: 1
                        rating_distribution:
                          '1': 0
                          '2': 0
                          '3': 11
                          '4': 32
                          '5': 65
                    - dimension: 60b2645fb12ff60643ef8344
                      dimension_name: Group 1246
                      metrics:
                        rank: 3
                        rating_distribution:
                          '1': 19
                          '2': 0
                          '3': 0
                          '4': 0
                          '5': 0
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/reviews/stats":
    get:
      tags:
      - Review analytics
      summary: Global reviews statistics
      operationId: getReviewAnalytics
      deprecated: true
      description: |
        This endpoint let you view the global reviews statistics for all your businesses subscribed to
        **Review Management**.

        You can use the following filters:
          - by date (statistics before and/or after a date)
          - by businesses (businesses id in list or not in list)
          - by keywords

        The response is aggregated according to the previously selected filters.

        In order to get analytics evolution overtime returned by specific time range, please refer to
        **Qualitative Evolution** and **Quantitative Evolution** endpoints.
      parameters:
      - "$ref": "#/components/parameters/query_review_business__in"
      - "$ref": "#/components/parameters/query_keywords"
      - "$ref": "#/components/parameters/query_review_update_date__gte"
      - "$ref": "#/components/parameters/query_review_update_date__lte"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReviewsStatisticsResponse"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/reviews/qualitative-evolution":
    get:
      tags:
      - Review analytics
      summary: Qualitative evolution
      operationId: getQualitativeEvolution
      deprecated: true
      description: |
        This endpoint lets you view the qualitative evolution of the **reviews rating** for all of your businesses
        subscribed to **Review Management**. The API returns the reviews average rating by bucket (time range).

        You can use the following filters:
          - by date (analytics before and/or after a date)
          - by businesses (businesses id in list or not in list)
          - by keywords
      parameters:
      - "$ref": "#/components/parameters/query_review_bucket"
      - "$ref": "#/components/parameters/query_review_cumulative"
      - "$ref": "#/components/parameters/query_review_business__in"
      - "$ref": "#/components/parameters/query_keywords"
      - "$ref": "#/components/parameters/query_review_update_date__gte"
      - "$ref": "#/components/parameters/query_review_update_date__lte"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                - date: '2019-11-29'
                  average: 4.54
                  added: 50
                  cum_sum: 70
                - date: '2019-12-05'
                  average: 4.34
                  added: 34
                  cum_sum: 104
                - date: '2019-12-12'
                  average: 4.41
                  added: 4
                  cum_sum: 108
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: datetype
                      description: Start date of the bucket
                    average:
                      type: number
                      format: float
                      description: Average rating.
                    added:
                      type: integer
                      description: Number of reviews added during the current bucket.
                    cum_sum:
                      type: number
                      format: float
                      description: Cumulative sum of the number of reviews.
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/reviews/quantitative-evolution":
    get:
      tags:
      - Review analytics
      summary: Quantitative evolution
      operationId: getQuantitativeEvolution
      deprecated: true
      description: |
        This endpoint lets you view the quantitative evolution of the **number of reviews** for all of your businesses
        subscribed to **Review Management**. The API returns the cumulative sum of the number of reviews by bucket
        (time range) selected overtime.

        You can use the following filters:
          - by date (analytics before and/or after a date)
          - by businesses (businesses id in list or not in list)
          - by keywords
      parameters:
      - "$ref": "#/components/parameters/query_review_bucket"
      - "$ref": "#/components/parameters/query_review_business__in"
      - "$ref": "#/components/parameters/query_keywords"
      - "$ref": "#/components/parameters/query_review_update_date__gte"
      - "$ref": "#/components/parameters/query_review_update_date__lte"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                - date: '2019-11-29'
                  added: 50
                  previous_sum: 20
                  cum_sum: 70
                - date: '2019-12-05'
                  added: 34
                  previous_sum: 70
                  cum_sum: 104
                - date: '2019-12-12'
                  added: 4
                  previous_sum: 104
                  cum_sum: 108
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: datetype
                      description: Start date of the bucket
                    added:
                      type: integer
                      description: Number of reviews added during the current bucket.
                    previous_sum:
                      type: number
                      description: Cumulative sum of the number of reviews for the
                        previous bucket.
                      format: float
                    cum_sum:
                      type: number
                      format: float
                      description: Cumulative sum of the number of reviews.
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/review_booster/send_invitation":
    post:
      tags:
      - Review Booster
      summary: Send a review invitation
      operationId: sendReviewInvitation
      description: 'This endpoint lets you send a SMS to a costumer to help him leave
        a message on Google. You need to have `WRITE` access on the business. You
        can add "invite_content" in your payload to customize the SMS content that
        will be received by the recipient. Else, the template associated with the
        user will be used (see <a href="#tag/Review-Booster/paths/~1review_booster~1template/get">/v2/review_booster/template</a>
        for more info). If no template exist, a new one will be generated. <p>Your
        business needs to be connected to a Google location and to be subscribed to
        Review Booster product. So this cannot be tested in Sandbox Env. To prevent
        spamming, a new SMS can be sent to a specific phone number only after 10 days
        since the last SMS sent.

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - business_id
              - target_phone
              properties:
                business_id:
                  "$ref": "#/components/schemas/BusinessId"
                target_phone:
                  type: string
                  description: 'Customer phone number, with the country calling code.
                    Eg: +33601020304'
                target_name:
                  type: string
                  description: Customer fullname
                  maxLength: 255
                template_id:
                  type: integer
                  description: Id of the SMS template you want to use
                  deprecated: true
                invite_content:
                  type: string
                  description: To customize SMS content instead of using the SMS template
                    associated with the user. Cannot be used in combination with template_id.
                    @link must be included in your payload (corresponds to the dynamic
                    link that will allow the SMS recipient to leave a review on the
                    business). Max 286 characters (unicode characters are not accepted
                    - will be removed)
                force:
                  type: string
                  description: To force invitation sending when a SMS has already
                    been sent to the customer
                  enum:
                  - 'True'
                  - 'False'
                  default: 'False'
            examples:
              Using template:
                value:
                  business_id: 5409c35a97bbc544d8e26737
                  target_phone: "+33647385968"
                  target_name: John Doe
                  template_id: 31
              Using invite content:
                value:
                  business_id: 5409c35a97bbc544d8e26737
                  target_phone: "+33647385968"
                  target_name: John Doe
                  invite_content: Hello, thank you for you visit ! Leave a review
                    and tell us more about your experience ! @link Thank you!
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation_id:
                    "$ref": "#/components/schemas/InvitationId"
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/review_booster/search-invitation":
    get:
      tags:
      - Review Booster
      operationId: checkDuplicatedReviewInvitation
      summary: Search for an invitation matching a set of criteria
      description: 'This endpoint allows to fetch previously sent invitations. Your
        access token must be for an user subscribed to the Review Booster product
        to access this route. The user must have access to the business. This can
        be useful to avoid sending multiple invitations to the same user in a defined
        period.

        '
      parameters:
      - in: query
        name: business_id
        required: true
        schema:
          "$ref": "#/components/schemas/BusinessId"
      - in: query
        name: target_phone
        required: true
        schema:
          "$ref": "#/components/schemas/TargetPhone"
      - in: query
        name: after
        schema:
          type: number
          example: 1559148288
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    review_invitations:
                      type: array
                      description: List of invitations sent
                      items:
                        type: object
                        properties:
                          user_name:
                            type: string
                            example: Perceval
                          user_id:
                            type: string
                            example: 54b6733b9826bf1dd29af128
                          id:
                            type: string
                            example: 3d90efec-0d7f-4960-98c0-951d58dc14cb
                          sent_time:
                            type: string
                            example: '2019-06-06 11:57:27.274725+00:00'
        '400':
          "$ref": "#/components/responses/400"
        '404':
          "$ref": "#/components/responses/404"
  "/review_booster/invitation_status":
    get:
      tags:
      - Review Booster
      summary: The status of a review invitation
      operationId: getReviewInvitationStatus
      description: 'This endpoint allows to get the status about an invitation sent
        through the Review Booster. Your access token must be for a user subscribed
        to the Review Booster. The invitation id must be for a business for which
        the user has access to.

        '
      parameters:
      - in: query
        name: invitation_id
        schema:
          "$ref": "#/components/schemas/InvitationId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation_id:
                    "$ref": "#/components/schemas/InvitationId"
                  status:
                    type: string
                    description: the current state of the SMS
                    enum:
                    - CREATED
                    - SENT
                    - FAILED_SEND
                    - DELIVERED
                    - FAILED_DELIVERY
        '400':
          "$ref": "#/components/responses/400"
        '404':
          "$ref": "#/components/responses/404"
  "/review_booster/template":
    get:
      tags:
      - Review Booster
      summary: Template for a user
      operationId: getInvitationTemplate
      description: 'This endpoint lets you get your corresponding template. If no
        template exist for the user, a template is created and send back. <p>You need
        to be subscribed to Review Booster product.

        '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  template_id:
                    description: the id associated to the template
                    type: string
                    example: 3462
                  template:
                    description: the template content, with placeholder(s) not filled
                    type: string
                    example: Hello ${client_name}, please leave a review ${url}
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    put:
      tags:
      - Review Booster
      summary: Update the template of a user
      operationId: setInvitationTemplate
      description: 'This endpoint lets you update the template associated to the user.
        <p> 3 placeholders are available for the template: ${client_name}, ${business_name}
        and ${url} <p>There is 2 mains constraints: `${url}` must be present in the
        template send and the text should not contains more than 250 characters (without
        placeholders). The template must exist before the request is send. <p>You
        need to be subscribed to Review Booster product.

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - template
              properties:
                template:
                  description: the template content, with placeholder(s) not filled
                  type: string
                  example: Hello ${client_name}, please leave a review ${url}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/review_booster/expeditor":
    post:
      tags:
      - Review Booster
      summary: Set the expeditor name of a business
      operationId: setExpeditorName
      description: |
        This endpoint lets you set the expeditor name of a business.  <p>An expeditor name is the name of the sender used to send the message. It will be seen instead of the phone number on the destination phone. <p>An expeditor name lenght's must be contain between 3 and 11 characters. No special characters are allowed.
        <p>Your business must be subscribed to Review Booster product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - business_id
              - expeditor_name
              properties:
                business_id:
                  "$ref": "#/components/schemas/BusinessId"
                expeditor_name:
                  description: the new expeditor name
                  type: string
                  example: Partoo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  expeditor_name:
                    description: the updated expeditor name, with no special characters
                      and between 3 and 11 characters
                    type: string
                    example: Partoo
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    get:
      tags:
      - Review Booster
      summary: The expeditor name of a business
      operationId: getExpeditorName
      description: |
        This endpoint lets you get the expeditor name of a business.  <p>An expeditor name is the name of the sender used to send the message. It will be seen instead of the phone number on the destination phone.

        <p>Your business must be subscribed to Review Booster product.
      parameters:
      - in: query
        name: business_id
        required: true
        schema:
          "$ref": "#/components/schemas/BusinessId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  expeditor_name:
                    description: the expeditor name used to send message
                    type: string
                    example: Partoo
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/user/search":
    get:
      tags:
      - Users
      summary: Search for users
      description: This endpoint lets you search for users using filters
      operationId: searchUser
      parameters:
      - in: query
        name: email
        schema:
          type: string
          format: email
        description: Filter by email
        required: false
      - in: query
        name: org_id
        schema:
          type: integer
        description: Filter by org id
      - in: query
        name: query
        schema:
          type: string
        description: To perform a fuzzy search on user
      - in: query
        name: status
        schema:
          "$ref": "#/components/schemas/UserStatus"
        description: Filter users by status
      - in: query
        name: display_business_ids
        schema:
          type: string
          enum:
          - 'True'
          - 'False'
          default: 'True'
        description: The endpoint won’t return the `business_ids` when the value is
          `False`
      - "$ref": "#/components/parameters/query_page_up_to_100"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      - in: query
        name: order_by
        schema:
          type: string
          enum:
          - email
          - first_name
          - last_name
          - role
          - org_id
          - group_id
          - status
          - "-email"
          - "-first_name"
          - "-last_name"
          - "-role"
          - "-org_id"
          - "-group_id"
          - "-status"
          default: id
        required: false
        description: |
          Order result by given attribute.
          Reverse order can as well be obtained by using a `-` (minus sign) before the attribute name, e.g. `order_by=-name`
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    users:
                      type: array
                      description: List of users
                      items:
                        "$ref": "#/components/schemas/User"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/user/me":
    get:
      tags:
      - Users
      summary: My user
      description: This endpoint lets you retrieve all the information about your
        user
      operationId: getMyUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserWithFeatures"
        '401':
          "$ref": "#/components/responses/401"
  "/user":
    post:
      tags:
      - Users
      summary: Create user
      description: |
        This endpoint lets you create a user. If no password given, a password will automatically be generated.

        The password will be ignored if `send_invitation` is set to `True`.

        You need to have `WRITE` access on the organization of the user you want to create.

        If you want to have an `invited` user but send the invitation email later, you have to send the `send_invitation` parameter as `False` and a `status` parameter to `invited`.<br /> You will then have to call the <a href="#operation/reinviteUser">invitation endpoint</a> to send the invitation email to the user.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to create a user
              type: object
              required:
              - email
              - first_name
              - last_name
              properties:
                email:
                  description: User email (must be unique will return otherwise)
                  type: string
                  format: email
                first_name:
                  "$ref": "#/components/schemas/UserFirstName"
                last_name:
                  "$ref": "#/components/schemas/UserLastName"
                org_id:
                  description: 'Id of the organization to which the user should belong.
                    If no `org_id` given, the user will have the same organization
                    as you.

                    '
                  type: integer
                accesses:
                  "$ref": "#/components/schemas/accesses"
                business_ids:
                  description: 'The list of business to which the user has access
                    to. Will be taken into account only if user has `BUSINESS_MANAGER`
                    role.

                    '
                  type: array
                  items:
                    type: string
                phone:
                  "$ref": "#/components/schemas/UserPhone"
                role:
                  "$ref": "#/components/schemas/RoleWithoutProvider"
                sidebar_products:
                  deprecated: true
                  type: array
                  items:
                    "$ref": "#/components/schemas/Product"
                sidebar_pages:
                  allOf:
                  - "$ref": "#/components/schemas/SidebarPages"
                  description: |
                    List of features the user can access from the sidebar.
                    If not provided in the payload or set to `null`, then the user will be given all the available features of their organization.
                send_invitation:
                  description: |
                    Send an invitation email to the User.

                    If you want to have an `invited` user but send the invitation email later, you have to send the `send_invitation` parameter as `False` and a `status` parameter to `invited`.<br /> You will then have to call the <a href="#operation/reinviteUser">invitation endpoint</a> to send the invitation email to the user.
                  type: boolean
                  default: false
                password:
                  "$ref": "#/components/schemas/Password"
                lang:
                  "$ref": "#/components/schemas/Lang"
                sso_only:
                  "$ref": "#/components/schemas/SsoOnly"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/UserId"
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/user/{user_id}":
    get:
      tags:
      - Users
      summary: User information
      description: 'This endpoint lets you retrieve all the information on a user.
        You need to have `READ` access to this users.

        '
      operationId: getUser
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserWithFeatures"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      tags:
      - Users
      summary: Update user
      description: 'This endpoint lets you update a user. You need to have `WRITE`
        access to this user. It has a patch behaviour which means that only indicated
        value will be changed.

        '
      operationId: updateUser
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a user.
              type: object
              properties:
                email:
                  "$ref": "#/components/schemas/UserEmail"
                first_name:
                  "$ref": "#/components/schemas/UserFirstName"
                last_name:
                  "$ref": "#/components/schemas/UserLastName"
                org_id:
                  description: Org to which the user should belong
                  type: integer
                accesses:
                  "$ref": "#/components/schemas/accesses"
                business_ids:
                  description: 'The list of business to which the user has access
                    to. Will be taken into account only if user has `BUSINESS_MANAGER`
                    role.

                    '
                  type: array
                  items:
                    type: string
                phone:
                  "$ref": "#/components/schemas/UserPhone"
                role:
                  "$ref": "#/components/schemas/RoleWithoutProvider"
                sidebar_products:
                  deprecated: true
                  type: array
                  items:
                    "$ref": "#/components/schemas/Product"
                sidebar_pages:
                  "$ref": "#/components/schemas/SidebarPages"
                password:
                  "$ref": "#/components/schemas/Password"
                lang:
                  "$ref": "#/components/schemas/Lang"
                sso_only:
                  "$ref": "#/components/schemas/SsoOnly"
                keywords:
                  "$ref": "#/components/schemas/Keywords"
                receive_reviews_email_notifications:
                  description: The parameter decides if the user subscribes to negative
                    reviews email notifications
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/UserId"
                  status:
                    type: string
                    enum:
                    - success
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      summary: Delete user
      description: 'This endpoint lets you delete a user. You need to have `WRITE`
        access to this user.

        '
      operationId: deleteUser
      tags:
      - Users
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/UserId"
                  status:
                    type: string
                    enum:
                    - success
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/user/{user_id}/preferences":
    get:
      tags:
      - Users
      summary: User preferences
      description: |
        This endpoint lets you retrieve all the information about a user's preferences on notifications. You need to have `READ` access to this user.

        Here are the default values for newly created users
        ```json
          {
            "reports": {
              "review_management_daily": true,
              "review_management_weekly": true,
              "review_management_monthly": true,
              "daily_review_preferences": {
                "partners": [
                  "google_my_business",
                  "facebook"
                ],
                "review_type": 2
              }
            },
            "receive_negative_reviews_email_notifications": false
          }
        ```
      operationId: getUserPreferences
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  reports:
                    "$ref": "#/components/schemas/UserReports"
                  receive_negative_reviews_email_notifications:
                    "$ref": "#/components/schemas/ReceiveNegativeReviewsEmailNotifications"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    post:
      summary: Set user preferences
      description: 'This endpoint lets you update all the information about a user''s
        preferences on notifications. You need to have `WRITE` access to this user.

        '
      operationId: updateUserPreferences
      tags:
      - Users
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                reports:
                  "$ref": "#/components/schemas/UserReports"
                receive_negative_reviews_email_notifications:
                  "$ref": "#/components/schemas/ReceiveNegativeReviewsEmailNotifications"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/UserId"
                  status:
                    type: string
                    enum:
                    - success
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/user/search/count":
    get:
      tags:
      - Users
      summary: Count users
      description: 'This endpoint lets you count the users you have `READ` access
        to. You can apply filters on this request.

        '
      operationId: searchUserCount
      parameters:
      - "$ref": "#/components/parameters/query_filter_by_email"
      - "$ref": "#/components/parameters/query_filter_by_org_id"
      - "$ref": "#/components/parameters/query_filter_by_user_status"
      - in: query
        name: query
        schema:
          type: string
        description: To perform a fuzzy search on user
      - in: query
        name: display_business_ids
        schema:
          type: string
          enum:
          - 'True'
          - 'False'
          default: 'True'
        description: The endpoint won’t return the `business_ids` when the value is
          `False`
      - "$ref": "#/components/parameters/query_page"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    "$ref": "#/components/schemas/count"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
  "/user/{user_id}/invite":
    post:
      tags:
      - Users
      summary: Invite user
      description: 'This endpoint lets you trigger a new invitation email to an `invited`
        user. You need to have `WRITE` access to this user. The email can only be
        sent once every 5 minutes.

        '
      operationId: reinviteUser
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/RequestStatus"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/user/{user_id}/businesses":
    get:
      tags:
      - Users
      summary: User businesses
      description: 'This endpoint lets you retrieve the list of businesses which the
        selected user has `READ` access to.

        '
      operationId: getUserBusinesses
      parameters:
      - "$ref": "#/components/parameters/path_user_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    businesses:
                      description: User businesses
                      type: array
                      items:
                        "$ref": "#/components/schemas/Business"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/feedback/feedback_form":
    get:
      summary: Search for feedback forms
      description: |
        This endpoint lets you search for the feedback forms of your organization.

        The response is paginated (30 results per page).
      operationId: searchFeedbackForm
      tags:
      - Feedback Management
      x-badges:
      - name: Beta
        position: after
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    items:
                      description: Filtered feedback forms
                      type: array
                      items:
                        "$ref": "#/components/schemas/feedback_form"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/feedback/feedback_form/{feedback_form_id}":
    put:
      summary: Update a feedback form
      description: 'This endpoint lets you modify the properties of your feedback
        forms.

        '
      operationId: updateFeedbackForm
      tags:
      - Feedback Management
      x-badges:
      - name: Beta
        position: after
      parameters:
      - in: path
        name: feedback_form_id
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post a reply
              type: object
              required:
              - content
              properties:
                display_name:
                  allOf:
                  - "$ref": "#/components/schemas/display_name"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/feedback_form"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/feedback/feedback_result":
    get:
      summary: Search for feedback results
      description: |
        This endpoint lets you search for the feedback results of your businesses.

        The response is paginated (30 results per page).
      operationId: searchFeedbackResults
      tags:
      - Feedback Management
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/query_business__in"
      - "$ref": "#/components/parameters/query_business__notin"
      - "$ref": "#/components/parameters/state__in"
      - "$ref": "#/components/parameters/created__lte"
      - "$ref": "#/components/parameters/created__gte"
      - "$ref": "#/components/parameters/nps__lte"
      - "$ref": "#/components/parameters/nps__gte"
      - "$ref": "#/components/parameters/nps__in"
      - "$ref": "#/components/parameters/search"
      - "$ref": "#/components/parameters/optin"
      - "$ref": "#/components/parameters/feedback_form_ids"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    items:
                      description: Filtered feedback results
                      type: array
                      items:
                        "$ref": "#/components/schemas/feedback_result"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/feedback/feedback_result/{feedback_result_id}/reply":
    post:
      summary: Reply to a feedback result
      description: |
        This endpoint lets you reply to a feedback result.

        In order to be able to reply to a feedback result:
        - The `optin` property of the corresponding feedback result must be true
        - The `email_reply_source` of the corresponding feedback form must be set
        - The `email_reply_subject` of the corresponding feedback form must be set
      operationId: replyFeedbackResult
      tags:
      - Feedback Management
      x-badges:
      - name: Beta
        position: after
      parameters:
      - in: path
        name: feedback_result_id
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post a reply
              type: object
              required:
              - content
              properties:
                content:
                  description: Content of your reply
                  type: string
                  format: text
                  example: Merci ❤️
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/feedback_result_reply"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/webhooks":
    get:
      tags:
      - Webhooks
      operationId: getWebhookList
      summary: Get a list of webhook configurations
      description: 'This endpoint returns the list of webhook configurations.

        '
      parameters:
      - "$ref": "#/components/parameters/org_id"
      - "$ref": "#/components/parameters/query_page_up_to_100"
      - "$ref": "#/components/parameters/query_per_page_1_100"
      x-badges:
      - name: Beta
        position: after
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ListResult"
                - type: object
                  properties:
                    items:
                      type: array
                      description: List of webhook configurations
                      items:
                        "$ref": "#/components/schemas/WebhookItem"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    post:
      tags:
      - Webhooks
      operationId: Webhook
      summary: Create webhook configurations
      description: 'This endpoint create webhook configurations.

        '
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/org_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateWebhooksPayload"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    items:
                      type: array
                      description: List of created webhook configurations
                      items:
                        "$ref": "#/components/schemas/WebhookItem"
        '400':
          "$ref": "#/components/responses/400"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/webhooks/{webhook_id}":
    get:
      tags:
      - Webhooks
      operationId: getWebhook
      summary: Get a webhook configuration
      description: 'This endpoint returns the details of a webhook configuration.

        '
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/webhook_id"
      - "$ref": "#/components/parameters/org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebhookItem"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    patch:
      tags:
      - Webhooks
      operationId: patchWebhook
      summary: Update a webhook configuration
      description: 'This endpoint updates a webhook configuration.

        '
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/webhook_id"
      - "$ref": "#/components/parameters/org_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateWebhookPayload"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebhookItem"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    delete:
      tags:
      - Webhooks
      operationId: deleteWebhook
      summary: Delete a webhook configuration
      description: 'This endpoint deletes a webhook configuration.

        '
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/webhook_id"
      - "$ref": "#/components/parameters/org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebhookDeleteSuccess"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/webhooks/tryout":
    post:
      tags:
      - Webhooks
      operationId: postWebhookTryout
      summary: Send test webhook payloads
      description: 'This endpoint let you try webhook configurations by sending test
        payloads. This currently supports only one webhook configuration per request,
        entries after the first one will be ignored. Payloads are created by the latest
        data of the specified event type, or if not available a default payload will
        be sent. The request is similar to a regular webhook, but also contains an
        additional `X-Partoo-Webhook-Tryout` header.

        '
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/org_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateWebhooksPayload"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    items:
                      type: array
                      description: Result of the tests.
                      items:
                        "$ref": "#/components/schemas/WebhookTryoutResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/webhooks/events":
    get:
      tags:
      - Webhooks
      operationId: getWebhooksEvents
      summary: List available webhook events
      description: 'This endpoint returns the list of the webhook events available
        to the organization, depending on the subscribed products.

        '
      x-badges:
      - name: Beta
        position: after
      parameters:
      - "$ref": "#/components/parameters/org_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebhookEventTypes"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
components:
  schemas:
    Status:
      type: string
      example: active
      description: Filter api_keys by status. A key is inactive when expired or disabled.
      enum:
      - active
      - inactive
      - disabled
      - expired
    current_page:
      type: integer
      description: Current page number
      example: 1
    max_page:
      type: integer
      description: Last page number
      example: 10
    count:
      type: integer
      description: Number of resources complying with filters
      example: 287
    ListResult:
      type: object
      properties:
        page:
          "$ref": "#/components/schemas/current_page"
        max_page:
          "$ref": "#/components/schemas/max_page"
        count:
          "$ref": "#/components/schemas/count"
    id:
      type: integer
      example: 3245
    label:
      type: string
      example: API key name
      description: Name given to recognize the Api key
    UserId:
      description: User id
      type: string
      example: 5309c3a237bbc544d8e26737
    UserName:
      description: User first name and last name concatenated. Can be null if it's
        your org integration api key.
      type: string
      example: Perceval de Galles
    Role:
      description: User role in the application
      type: string
      enum:
      - PROVIDER
      - ORG_ADMIN
      - GROUP_MANAGER
      - BUSINESS_MANAGER
      - PUBLISHER
      example: BUSINESS_MANAGER
    expiration_date:
      type: string
      pattern: yyyy-mm-dd
      example: '2022-06-05'
      description: Must be at least the day after today. If you want it to expire
        today you must revoke it. You can set it to null.
    ip_whitelist:
      description: |
        List of IP or CIDR network notations to which API Key calls are restricted.

        Empty list means no restriction.
      type: array
      items:
        type: string
      example:
      - 172.16.0.0/12
      - 127.0.0.1
    ApiKey:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/id"
        label:
          "$ref": "#/components/schemas/label"
        user_id:
          "$ref": "#/components/schemas/UserId"
        user_name:
          "$ref": "#/components/schemas/UserName"
        user_role:
          "$ref": "#/components/schemas/Role"
        disabled:
          type: boolean
          example: false
          description: Is true if someone revoked the key.
        expiration_date:
          "$ref": "#/components/schemas/expiration_date"
        last_used_at:
          type: string
          pattern: date
          example: '2019-08-22 11:46:38.914467+00'
        created_by:
          "$ref": "#/components/schemas/UserId"
        created_by_name:
          description: First name and last name concatenated of the user that created
            the key
          type: string
          example: John Smith
        created_at:
          type: string
          pattern: date
          example: '2018-03-12 11:49:03.399475+00'
        revoked_by:
          "$ref": "#/components/schemas/UserId"
        revoked_by_name:
          description: First name and last name concatenated of the user that revoked
            the key
          type: string
          example: John Smith
        revoked_at:
          type: string
          pattern: date
          example: '2020-10-20 11:46:38.914467+00'
        ip_whitelist:
          "$ref": "#/components/schemas/ip_whitelist"
    BusinessId:
      description: Business id
      type: string
      example: 5409c35a97bbc544d8e26737
    BusinessStatusFilter:
      description: |
        <p>Defines the current status of the business. `Open` indicates the business is up and running. `Closed` means that the business has definitely closed. `Opening Soon` indicates the business is open with an opening date set in the future. `Temporarily closed` means that the business is temporarily closed.
        <p>⚠️ To get all businesses with the status <code>open</code>, regardless of whether the <code>opening_date</code> has passed yet or not, submit both the <code>open</code> and <code>opening_soon</code> options in the filter: <code>status=open,opening_soon</code>
      type: string
      enum:
      - open
      - closed
      - opening_soon
      - temporarily_closed
      default: open
      example: open
    FeatureEnum:
      enum:
      - diffusion
      - feedback_management
      - messages
      - posts
      - review_invite
      - review_management
    BusinessCode:
      description: The unique store code of the business. If not provided, it will
        be automatically generated
      type: string
      example: CS-75019
    BusinessStatus:
      description: "<p>Defines the current status of the business. <code>open</code>
        indicates the business is up and running. <code>closed</code> means that the
        business has definitely closed. <code>temporarily_closed</code> means that
        the business is temporarily closed, it is advised when your business is closed
        for more than one week, otherwise use the <code>specific_hours</code></p>\n"
      type: string
      enum:
      - open
      - closed
      - temporarily_closed
      default: open
      example: open
    BusinessOpeningDate:
      description: The opening_date represents the date when a business was opened.
        The format of the date must be in ISO 8601 format (YYYY-MM-DD). ⚠️ The date
        must be in the past or no more than one year in the future from the current
        date (Google API requirement).
      type: string
      format: YYYY-MM-DD
      example: '2025-01-01'
    BusinessOrgId:
      description: The organization unique identifier at Partoo. During onboarding,
        Partoo creates an organization where all your businesses will be aggregated
      type: integer
      example: 42
    GroupId:
      description: The id of the group the business belongs to. An organization can
        have multiple groups that contain one or more businesses. A business can belong
        to only one group.
      type: integer
      example: 23
      deprecated: true
    groups:
      description: |
        List of Group ID of the business.

        Groups the business belongs to.

        See <a href="#tag/Groups-and-Sections">the Groups and Sections description</a>
      type: array
      items:
        type: integer
      example:
      - 1
      - 2
      - 3
    BusinessName:
      description: The name of the business (POI) as it will appear on the publishing
        platforms
      type: string
      minLength: 1
      example: Corner shop
    AddressFull:
      description: |
        Full address of the business.

        For example : `130 Rue du Mont-Cenis`.
      type:
      - string
      - 'null'
      example: 12 bis rue du coquelicot
    Address2:
      description: Complement of address. Any additional information that could help
        better find the business location
      type:
      - string
      - 'null'
    BusinessCity:
      description: The city where the business is located
      type:
      - string
      - 'null'
      example: Paris
    BusinessZipcode:
      description: Zipcode (or postal code) for the business address. Can be empty
        if the business' country does not require one.
      type:
      - string
      - 'null'
      example: '75019'
    BusinessRegion:
      description: The region where the business is located. Can be empty, it is only
        useful for some countries like Italy or Spain among others.
      type:
      - string
      - 'null'
      example: Ile-de-France
    BusinessCountry:
      description: Business country - In the ISO 3166 alpha2 code format (i.e. use
        “FR” for France instead of "fr")
      type: string
      example: FR
    BusinessDefaultLang:
      description: Business default language - it either corresponds to the country's
        default language or set as English by default
      type: string
      example: fr
    BusinessCategories:
      minItems: 1
      description: 'A list of category ids mapped to the business. At least one category
        needs to be provided. For more information see [Categories section](https://developers.partoo.co/rest_api/v2/#tag/Categories)

        '
      type: array
      items:
        type: string
      example:
      - gcid:restaurant
      - gcid:fast_food_restaurant
      - gcid:hamburger_restaurant
    TimeWindow:
      description: Time window
      type: string
      pattern: "^([0-1][0-9]|2[0-3]):([0-5][0-9])-([0-1][0-9]|2[0-3]):([0-5][0-9])$"
      example: 10:00-14:00
    TimeSlotReference:
      description: Default time period, can be used to set open hours of a day from
        Partoo's interface.
      type: array
      items:
        "$ref": "#/components/schemas/TimeWindow"
    Day:
      description: Open in the morning and in the evening `[10:00-14:00, 18:00-00:00]`.
        Closed the whole day `[]`
      type: array
      items:
        "$ref": "#/components/schemas/TimeWindow"
      example:
      - 10:00-14:00
    OpenHours:
      description: |
        <p>The opening hours of the business (in its timezone).
        <p>Opening hours are specified per weekday. This is done by supplying an object mapping weekdays ("monday", "tuesday", etc.) to a list of of strings. These strings in turn represent time slots during which the business is open.
        <p>For example, the following value would set the opening hours to between 08:00-15:00 in the afternoon and 18:00-23:00 in the evening on Mondays:
        <p><code>{"monday": ["08:00-15:00", "18:00-23:00"]}</code>
        <p>To indicate that a business is open 24 hours for a specific weekday, use the value <code>["00:00-23:59"]</code>.
        <p>❗ This field is not mandatory, but if not provided then the business will not be pushed on some platforms (example: Google). If provided, then a schedule needs to be sent for each day in particular
      type: object
      required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
      properties:
        monday:
          "$ref": "#/components/schemas/Day"
        tuesday:
          "$ref": "#/components/schemas/Day"
        wednesday:
          "$ref": "#/components/schemas/Day"
        thursday:
          "$ref": "#/components/schemas/Day"
        friday:
          "$ref": "#/components/schemas/Day"
        saturday:
          "$ref": "#/components/schemas/Day"
        sunday:
          "$ref": "#/components/schemas/Day"
    SpecificHours:
      description: |
        <p>Exceptional opening or closing times for the business (in its timezone).</p>
        <p>All exceptional days of the year, including temporarily closed, can be specified beforehand or on the go. For example:</p>
        <ul>
         <li>Beforehand: bank holidays (like Christmas or Labor Day)</li>
         <li>Unpredicted: COVID-19 exceptional situation</li>
        </ul>
        <p>Specific hours are defined by two values:</p>
        <ul>
          <li><code>open</code>, containing a list of days with exceptional <i>opening</i> hours</li>
          <li><code>close</code>, containing a list of days where the business is exceptionally closed all day.
        </ul>
        <p>These values in turn, contain:</p>
        <ul>
         <li><code>starts_at</code> indicating the first date for which the exceptional hours are valid</li>
         <li><code>ends_at</code> indicating the last date (inclusive) for which the exceptional hours are valid</li>
         <li><code>open_hours</code> (only used for days with exceptional <i>opening</i> hours) indicating the actual time slots for the given period, following the same pattern as the time slots in <code>open_hours</code></li>
        </ul>
      type: object
      required:
      - open
      - close
      properties:
        open:
          type: array
          items:
            type: object
            properties:
              starts_at:
                type: string
                pattern: date
                example: '2020-01-20'
              ends_at:
                type: string
                pattern: date
                example: '2020-01-20'
              open_hours:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeWindow"
        close:
          type: array
          items:
            type: object
            properties:
              starts_at:
                type: string
                pattern: date
                example: '2020-01-20'
              ends_at:
                type: string
                pattern: date
                example: '2020-01-22'
    BusinessShortDescription:
      description: |
        <p>A short description of the business. It needs to be in the language of the country where the business is located. For example, if the business is located in Madrid, then the description needs to be in Spanish.
        <p>⚠️It is limited to 80 characters
      type: string
      example: lorem ipsum
    BusinessLongDescription:
      description: |
        <p>A more detailed description of the business. It needs to be in the language of the country where the business is located. For example, if the business is located in London, then the description needs to be in English.
        <p>⚠️It is limited to 750 characters
      type: string
      example: lorem ipsum dolor sit amet
    BusinessWebsite:
      description: The business own website url or the main url of the company.
      type: string
      format: uri
      example: https://www.corner-shop.co/
    BusinessFacebookPage:
      description: Business Facebook page url
      type: string
      format: uri
      example: https://www.facebook.com/the-corner-shop
    BusinessTwitter:
      description: Business twitter page url
      type: string
      format: uri
      example: https://www.twitter.com/the-corner-shop
    BusinessNationalIdentificationNumber:
      description: |
        <p>The National Identification Number of the business
        <p> It describes a unique number for which the business is registered in a specific country. For example, in France, it's SIRET code or for Ireland it's the CRO
      type: string
    Contact:
      description: Business contact
      type: object
      properties:
        name:
          description: Contact full name
          type: string
          example: Hubert Bonisseur de la Bath
        email:
          description: Contact email
          type: string
          format: email
          example: hubert@oss117.fr
        phone_numbers:
          description: Contact phone numbers - Preferably in the format E.164 ('+33302060628'
            instead of '0302060628')
          type: array
          items:
            type: string
          example:
          - "+33302060628"
        fax:
          description: Contact fax
          type: string
          example: "+33302060629"
    BusinessContacts:
      description: Specify how the clients can reach the persons in charge of the
        business in case they have questions.</br>
      type: array
      items:
        "$ref": "#/components/schemas/Contact"
    Photos:
      description: |
        <p>Business photos
        <p>Each business can have one or more photos associated
      type: object
      properties:
        LOGO:
          description: The logo image of the brand. On Google, for example, for businesses
            that have their basic information (phone number, hours, etc.), the Business
            Profile will highlight the logo.
          type: string
          format: uri
        primary:
          description: The business's main photo URL. On Google, for example, it represents
            the cover photo on the top of the profile.
          type: string
          format: uri
        secondary:
          description: Additional photos that can highlight the features of the business.
          type: array
          items:
            type: string
            format: uri
    Latitude:
      description: Latitude pushed on publishers. Decimals are separated by a dot
        and not by a comma.
      type:
      - number
      - 'null'
      format: double
      example: -3.585993
    Longitude:
      description: Longitude pushed on publishers. Decimals are separated by a dot
        and not by a comma.
      type:
      - number
      - 'null'
      format: double
      example: 47.870341
    SubscriptionActive:
      type: object
      required:
      - active
      properties:
        active:
          type: boolean
          description: Product has been activated
    Subscriptions:
      deprecated: true
      description: Business product subscriptions. Deprecated, use `features` instead.
      type: object
      required:
      - presence_management
      - review_booster
      - review_management
      - messages
      properties:
        presence_management:
          "$ref": "#/components/schemas/SubscriptionActive"
          description: Is business subscribed to Presence Management
        review_management:
          "$ref": "#/components/schemas/SubscriptionActive"
          description: Is business subscribed to Review Management
        review_booster:
          "$ref": "#/components/schemas/SubscriptionActive"
          description: Is business subscribed to Review Booster
        messages:
          "$ref": "#/components/schemas/SubscriptionActive"
          description: Is business subscribed to Business Message
      example:
        presence_management:
          active: true
        review_management:
          active: true
        review_booster:
          active: false
        messages:
          active: false
    Feature:
      allOf:
      - "$ref": "#/components/schemas/FeatureEnum"
      type: string
      description: Business feature name
    Features:
      description: 'List of business'' features.

        '
      type: array
      items:
        "$ref": "#/components/schemas/Feature"
      example:
      - business_edition
      - diffusion
      - review_management
      - review_invite
      - messages
    CustomFields.Field.Base:
      description: A Custom Field
      type: object
      properties:
        name:
          description: Name of the custom field
          type: string
        type:
          description: Possible values are "BOOLEAN", "INTEGER", "TEXT", "FLOAT",
            "SINGLE_SELECT", "MULTIPLE_SELECT", "MULTIPLE_SELECT_IMAGE", "IMAGES_UPLOADER".
          type: string
        id:
          description: Id of the custom field
          type: integer
        order:
          type: integer
    CustomFields.Field.Text:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type:
            - string
            - 'null'
    CustomFields.Field.Integer:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type:
            - integer
            - 'null'
    CustomFields.Field.Number:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type:
            - number
            - 'null'
    CustomFields.Field.Boolean:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type:
            - boolean
            - 'null'
    CustomFields.Field.SingleSelect:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type:
            - string
            - 'null'
    CustomFields.Field.MultiSelect:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type: array
            items:
              type: string
    CustomFields.Field.MultiSelectImage:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type: array
            items:
              type: string
    CustomFieldValuesImagesUploader:
      description: Images uploader custom field value
      type: object
      properties:
        text_field:
          type: string
        max_length:
          type: number
      example:
      - text_field: name 1
        max_length: 20
      - text_field: name 2
        max_length: 30
    CustomFields.Field.ImagesUploader:
      allOf:
      - "$ref": "#/components/schemas/CustomFields.Field.Base"
      - properties:
          value:
            description: 'Value for this Custom Field. Can be NULL if not set.

              '
            type: array
            items:
              "$ref": "#/components/schemas/CustomFieldValuesImagesUploader"
    CustomFields.Array:
      description: |
        <p>Custom Fields set for this Business
        <p>They represent configurable fields that can be defined in addition to the normal business fields proposed by Partoo.
        They are unique to the organization and can be entirely adapted to the company's needs.
      type: array
      items:
        oneOf:
        - "$ref": "#/components/schemas/CustomFields.Field.Integer"
        - "$ref": "#/components/schemas/CustomFields.Field.Number"
        - "$ref": "#/components/schemas/CustomFields.Field.Text"
        - "$ref": "#/components/schemas/CustomFields.Field.Boolean"
        - "$ref": "#/components/schemas/CustomFields.Field.MultiSelect"
        - "$ref": "#/components/schemas/CustomFields.Field.MultiSelectImage"
        - "$ref": "#/components/schemas/CustomFields.Field.SingleSelect"
        - "$ref": "#/components/schemas/CustomFields.Field.ImagesUploader"
        discriminator:
          propertyName: type
          mapping:
            TEXT: "#/components/schemas/CustomFields.Field.Text"
            INTEGER: "#/components/schemas/CustomFields.Field.Integer"
            FLOAT: "#/components/schemas/CustomFields.Field.Number"
            BOOLEAN: "#/components/schemas/CustomFields.Field.Boolean"
            SINGLE_SELECT: "#/components/schemas/CustomFields.Field.SingleSelect"
            MULTIPLE_SELECT: "#/components/schemas/CustomFields.Field.MultiSelect"
            MULTIPLE_SELECT_IMAGE: "#/components/schemas/CustomFields.Field.MultiSelectImage"
            IMAGES_UPLOADER: "#/components/schemas/CustomFields.Field.ImagesUploader"
      example:
      - id: 1
        type: BOOLEAN
        name: Parking
        value: true
        order: 1
      - id: 2
        type: TEXT
        name: ManagerName
        value: toto
        order: 2
      - id: 3
        type: TEXT
        name: Supervisor
        value: 
        order: 2
      - id: 4
        type: INTEGER
        name: Surface
        value: 2
        order: 3
      - id: 5
        type: FLOAT
        name: DistanceFromSubway
        value: 2.55
        order: 4
      - id: 6
        type: SINGLE_SELECT
        name: Level
        value: two
        order: 4
      - id: 7
        type: MULTIPLE_SELECT
        name: Services
        value:
        - one
        - two
        order: 5
      - id: 8
        type: MULTIPLE_SELECT_IMAGE
        name: BannerImage
        value:
        - image 1
        - image 2
        order: 6
      - id: 9
        type: IMAGES_UPLOADER
        name: TeamMembers
        value:
        - url: image1
          texts:
            name1: value 1
            name2: value 2
        order: 7
    BusinessCompletionRate:
      description: |
        <p>The completion rate percentage of the business
        <p>The completion rate is calculated based on how many fields are filled for the business. If some necessary fields are not filled, it will lower the completion rate.
        <p> ⚠️ After the update of the business, it may take up to 24h for this field to be updated
      type: integer
      example: 77
    Promo:
      deprecated: true
      description: Business promotions
      type: object
      required:
      - title
      - description
      - begin
      - end
      properties:
        title:
          type: string
          description: Promo title
        description:
          type: string
          description: Promo description
        term_of_use:
          type: string
          description: Promo term of use
        additional_informations:
          type: string
          description: Promo additional informations
        begin:
          type: number
          description: Promo start timestamp
        end:
          type: number
          description: Promo end timestamp
        images:
          type: array
          description: Promo images to be displayed
          items:
            type: string
            format: uri
        client_offer_url:
          description: Promo URL
          type: string
          format: uri
        promo_url:
          description: URL of the website
          type: string
          format: uri
    BusinessPromos:
      deprecated: true
      type: array
      items:
        "$ref": "#/components/schemas/Promo"
    BusinessWithCustomFields:
      description: Partoo App Business
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/BusinessId"
        created:
          description: Timestamp (in seconds) of the business creation
          type: number
          format: float
          example: 1409925979.5
        modified:
          description: Timestamp (in seconds) of the business last modification. Doesn’t
            take into account changes to the Custom Fields or related objects.
          type: number
          format: float
          example: 1561335111.681374
        code:
          "$ref": "#/components/schemas/BusinessCode"
        status:
          "$ref": "#/components/schemas/BusinessStatus"
        opening_date:
          "$ref": "#/components/schemas/BusinessOpeningDate"
        org_id:
          "$ref": "#/components/schemas/BusinessOrgId"
        group_id:
          "$ref": "#/components/schemas/GroupId"
        groups:
          "$ref": "#/components/schemas/groups"
        name:
          "$ref": "#/components/schemas/BusinessName"
        address:
          description: Business address. This fields returns the same value as the
            field `address_full` for historical reasons. You should prefer the use
            `address_full`.
          type:
          - string
          - 'null'
        address_full:
          "$ref": "#/components/schemas/AddressFull"
        address2:
          "$ref": "#/components/schemas/Address2"
        city:
          "$ref": "#/components/schemas/BusinessCity"
        zipcode:
          "$ref": "#/components/schemas/BusinessZipcode"
        region:
          "$ref": "#/components/schemas/BusinessRegion"
        country:
          "$ref": "#/components/schemas/BusinessCountry"
        default_lang:
          "$ref": "#/components/schemas/BusinessDefaultLang"
        categories:
          "$ref": "#/components/schemas/BusinessCategories"
        time_slot_reference:
          "$ref": "#/components/schemas/TimeSlotReference"
        open_hours:
          "$ref": "#/components/schemas/OpenHours"
        specific_hours:
          "$ref": "#/components/schemas/SpecificHours"
        description_short:
          "$ref": "#/components/schemas/BusinessShortDescription"
        description_long:
          "$ref": "#/components/schemas/BusinessLongDescription"
        website_url:
          "$ref": "#/components/schemas/BusinessWebsite"
        facebook_url:
          "$ref": "#/components/schemas/BusinessFacebookPage"
        twitter_url:
          "$ref": "#/components/schemas/BusinessTwitter"
        google_location_id:
          description: Id of Google Location to which the business is linked
          type: string
        facebook_page_id:
          description: Id of Facebook Location to which the business is linked
          type: string
        national_identification_number:
          "$ref": "#/components/schemas/BusinessNationalIdentificationNumber"
        logo_url:
          description: Business LOGO URL
          type: string
          format: uri
        contacts:
          "$ref": "#/components/schemas/BusinessContacts"
        photos:
          "$ref": "#/components/schemas/Photos"
        lat:
          "$ref": "#/components/schemas/Latitude"
        long:
          "$ref": "#/components/schemas/Longitude"
        subscriptions:
          "$ref": "#/components/schemas/Subscriptions"
        features:
          "$ref": "#/components/schemas/Features"
        custom_fields:
          "$ref": "#/components/schemas/CustomFields.Array"
        completion_rate:
          "$ref": "#/components/schemas/BusinessCompletionRate"
        promos:
          "$ref": "#/components/schemas/BusinessPromos"
    BusinessReach:
      description: Defines whether the business is a physical entity with an address
        (LOCAL) or a Brand (GLOBAL).
      type: string
      enum:
      - LOCAL
      - GLOBAL
      default: LOCAL
      example: LOCAL
    RequiredBusinessCity:
      description: |
        The city where the business is located.

        `Required if 'reach' is not specified or set to 'LOCAL'`.
      type: string
      example: Paris
    BusinessLatitude:
      description: Latitude. Decimals are separated by a dot and not by a comma.
      type: number
      format: double
      example: -3.585993
    BusinessLongitude:
      description: Longitude. Decimals are separated by a dot and not by a comma.
      type: number
      format: double
      example: 47.870341
    BusinessContactsCreate:
      description: Specify how the clients can reach the persons in charge of the
        business in case they have questions.</br>
      type: array
      items:
        "$ref": "#/components/schemas/Contact"
    CustomFields.Update:
      description: |
        <p>Custom Fields set for this Business
        <p>They represent configurable fields that can be defined in addition to the normal business fields proposed by Partoo.
        They are unique to the organization and should suit your company needs.
      type: object
      additionalProperties:
        description: 'Replace \<custom_fields_name\> with the name of the custom field
          to update. The value must comply with the custom field type. <p> Set to
          NULL to empty the field.

          '
      example:
        Parking: true
        ManagerName: toto
        Surface: 35
        DistanceFromSubway: 1.5
        Level: one
        Services:
        - DisabledAccess
        - FreeParking
        BannerImage:
        - image 1
        - image 2
        TeamMembers:
        - url: image1
          texts:
            name1: value 1
            name2: value 2
    RequestStatus:
      description: Request status
      type: string
      enum:
      - success
    SubscriptionDetails:
      type: object
      description: The details on the product subscription
      properties:
        status:
          type: string
          enum:
          - inactive
          - active
        canceling_date:
          type: number
          description: timestamp
    Product:
      type: string
      enum:
      - presence_management
      - review_booster
      - review_management
      - messages
      example: presence_management
    ProductSubscribeResponseObject:
      type: object
      properties:
        subscription_date:
          type: integer
          description: Date on which the subscription was activated
          example: 1540628702
        status:
          type: string
          enum:
          - active
    ProductUnsubscribeResponseObject:
      type: object
      properties:
        canceling_date:
          type: integer
          description: Date on which the subscription was canceled
          example: 1540628702
        status:
          type: string
          enum:
          - inactive
    Attributes.Field.Base:
      description: A Google Attribute
      type: object
      properties:
        gmb_id:
          description: Google id of the attribute
          type: string
        type:
          description: Possible values are "BOOL", "ENUM", "REPEATABLE_ENUM", "URL",
            "REPEATABLE_URL".
          type: string
    Attributes.Field.BOOL:
      allOf:
      - "$ref": "#/components/schemas/Attributes.Field.Base"
      - properties:
          value:
            description: 'Value for this Attribute. Can be null if not set

              '
            type:
            - boolean
            - 'null'
    Attributes.Field.ENUM:
      allOf:
      - "$ref": "#/components/schemas/Attributes.Field.Base"
      - properties:
          value:
            description: 'Value for this Attribute. Can be null if not set

              '
            type:
            - string
            - 'null'
    Attributes.Field.REPEATABLE_ENUM:
      allOf:
      - "$ref": "#/components/schemas/Attributes.Field.Base"
      - properties:
          value:
            type:
            - object
            - 'null'
            description: 'Value for this Attribute. Can be null if not set

              '
            properties:
              set_values:
                type: array
                description: 'Options which are true for the Attribute. Can be empty.

                  '
                items:
                  type: string
              unset_values:
                type: array
                description: 'Options which are false for the Attributes. Can be empty

                  '
                items:
                  type: string
    Attributes.Field.URL:
      allOf:
      - "$ref": "#/components/schemas/Attributes.Field.Base"
      - properties:
          value:
            description: 'Value for this Attribute. Can be null if not set

              '
            type:
            - string
            - 'null'
    Attributes.Field.REPEATABLE_URL:
      allOf:
      - "$ref": "#/components/schemas/Attributes.Field.Base"
      - properties:
          value:
            description: 'Value for this Attribute. Can be null if not set

              '
            type:
            - array
            - 'null'
            items:
              type: string
            deprecated: true
    Attributes.Array:
      description: List of Business Attributes
      type: array
      items:
        oneOf:
        - "$ref": "#/components/schemas/Attributes.Field.BOOL"
        - "$ref": "#/components/schemas/Attributes.Field.ENUM"
        - "$ref": "#/components/schemas/Attributes.Field.REPEATABLE_ENUM"
        - "$ref": "#/components/schemas/Attributes.Field.URL"
        - "$ref": "#/components/schemas/Attributes.Field.REPEATABLE_URL"
        discriminator:
          propertyName: type
          mapping:
            BOOL: "#/components/schemas/Attributes.Field.BOOL"
            ENUM: "#/components/schemas/Attributes.Field.ENUM"
            REPEATABLE_ENUM: "#/components/schemas/Attributes.Field.REPEATABLE_ENUM"
            URL: "#/components/schemas/Attributes.Field.URL"
            REPEATABLE_URL: "#/components/schemas/Attributes.Field.REPEATABLE_URL"
      example:
      - type: BOOL
        gmb_id: has_curbside_pickup
        value: false
      - type: BOOL
        gmb_id: has_delivery
        value: true
      - type: ENUM
        gmb_id: wi_fi
        value: free_wi_fi
      - type: REPEATABLE_ENUM
        gmb_id: pay_credit_card_types_accepted
        value:
          set_values:
          - american_express
          - discover
          unset_values: []
      - type: URL
        gmb_id: url_menu
        value: https://www.test.fr
      - type: REPEATABLE_URL
        gmb_id: url_order_ahead
        value: 
      - type: REPEATABLE_URL
        gmb_id: url_reservations
        value:
        - https://www.test1.fr
        - https://www.test2.fr
    BusinessAttributesResponse:
      type: object
      properties:
        attributes:
          "$ref": "#/components/schemas/Attributes.Array"
    PostAttributes.Array:
      description: List of Business Attributes
      type: array
      items:
        oneOf:
        - "$ref": "#/components/schemas/Attributes.Field.BOOL"
        - "$ref": "#/components/schemas/Attributes.Field.ENUM"
        - "$ref": "#/components/schemas/Attributes.Field.REPEATABLE_ENUM"
        - "$ref": "#/components/schemas/Attributes.Field.URL"
        - "$ref": "#/components/schemas/Attributes.Field.REPEATABLE_URL"
        discriminator:
          propertyName: type
          mapping:
            BOOL: "#/components/schemas/Attributes.Field.BOOL"
            ENUM: "#/components/schemas/Attributes.Field.ENUM"
            REPEATABLE_ENUM: "#/components/schemas/Attributes.Field.REPEATABLE_ENUM"
            URL: "#/components/schemas/Attributes.Field.URL"
            REPEATABLE_URL: "#/components/schemas/Attributes.Field.REPEATABLE_URL"
      example:
      - type: BOOL
        gmb_id: has_curbside_pickup
        value: false
      - type: ENUM
        gmb_id: wi_fi
        value: free_wi_fi
      - type: REPEATABLE_ENUM
        gmb_id: pay_credit_card_types_accepted
        value:
          set_values:
          - american_express
          - discover
          unset_values: []
      - type: REPEATABLE_URL
        gmb_id: url_reservations
        value:
        - https://www.test1.fr
        - https://www.test2.fr
    BusinessPostAttributesBody:
      type: object
      properties:
        attributes:
          "$ref": "#/components/schemas/PostAttributes.Array"
    BusinessPostWrongAttributesValuesError:
      description: At least one of the attributes values in the request body is incorrect
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
      example:
        errors:
          json:
            wi_fi: must be a string
            has_curbside_pickup: must be a bool
            url_reservations: must be a list
            url_menu: must be a valid url
            pay_credit_card_types_accepted: must contain set_values and unset_values
    BusinessPostUnknownAttributesError:
      description: At least one of the attributes in the request body does not exist
        in our Database
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
      example:
        errors:
          json:
            unknown_attribute: does not exist in DB
    MoreHoursGet:
      description: |
        <p>The More Hours of the business and category (in its timezone).
        <p>More hours are specified per weekday. Every value in this array is an object mapping weekdays (<code>monday</code>, <code>tuesday</code>, etc.) to a list of of strings. These strings in turn represent time slots during which the business is open.
        <p>For example, the following value sets the hours to 08:00-15:00 in the afternoon and 18:00-23:00 in the evening on Mondays:
        <p><code>{"monday": ["08:00-15:00", "18:00-23:00"]}</code>
        <p>If a business is open 24 hours for a specific weekday, the value <code>["00:00-23:59"]</code> is used.
        <p>If a business does not have any defined More Hours, <code>value</code> will be <code>null</code>.
      type: object
      properties:
        monday:
          "$ref": "#/components/schemas/Day"
        tuesday:
          "$ref": "#/components/schemas/Day"
        wednesday:
          "$ref": "#/components/schemas/Day"
        thursday:
          "$ref": "#/components/schemas/Day"
        friday:
          "$ref": "#/components/schemas/Day"
        saturday:
          "$ref": "#/components/schemas/Day"
        sunday:
          "$ref": "#/components/schemas/Day"
    MoreHoursBusinessGetResponse:
      properties:
        more_hours:
          type: array
          items:
            type: object
            properties:
              gmb_id:
                description: More Hour ID.
                type: string
                example: BREAKFAST
              value:
                "$ref": "#/components/schemas/MoreHoursGet"
          example:
          - gmb_id: KITCHEN
            value:
              monday:
              - '08:00-15:00'
              - 18:00-23:00
              tuesday:
              - '08:00-15:00'
              - 18:00-23:00
              wednesday:
              - '08:00-15:00'
              - 18:00-23:00
              thursday:
              - '08:00-15:00'
              - 18:00-23:00
              friday:
              - '08:00-15:00'
              - 18:00-23:00
              saturday:
              - '08:00-15:00'
              - 18:00-23:00
              sunday:
              - '08:00-15:00'
              - 18:00-23:00
          - gmb_id: LUNCH
            value:
              monday:
              - 11:00-15:00
              tuesday:
              - 11:00-15:00
              wednesday:
              - 11:00-15:00
              thursday:
              - 11:00-15:00
              friday:
              - 11:00-15:00
              saturday: []
              sunday: []
    MoreHoursListInvalidCategoryError:
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: string
              example: Category with id foo does not exist
    MoreHoursListInvalidCountryError:
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                country:
                  type: object
                  properties:
                    explanation:
                      description: country paramter is invalid
                      type: string
                      example: abc is an incorrect value
                    choices:
                      description: available country codes
                      type: array
                      items:
                        type: string
                      example:
                      - AF
                      - AL
                      - DZ
                      - AS
                      - AD
                      - AO
                      - AI
                      - AQ
                      - AG
                      - AR
                      - AM
                      - AW
                      - AU
                      - AT
                      - AZ
                      - BS
                      - BH
                      - BD
                      - BB
                      - BY
                      - BE
                      - BZ
                      - BJ
                      - BM
                      - BT
                      - BO
                      - BQ
                      - BA
                      - BW
                      - BV
                      - BR
                      - IO
                      - BN
                      - BG
                      - BF
                      - BI
                      - CV
                      - KH
                      - CM
                      - CA
                      - KY
                      - CF
                      - TD
                      - CL
                      - CN
                      - CX
                      - CC
                      - CO
                      - KM
                      - CD
                      - CG
                      - CK
                      - CR
                      - HR
                      - CU
                      - CW
                      - CY
                      - CZ
                      - CI
                      - DK
                      - DJ
                      - DM
                      - DO
                      - EC
                      - EG
                      - SV
                      - GQ
                      - ER
                      - EE
                      - SZ
                      - ET
                      - FK
                      - FO
                      - FJ
                      - FI
                      - FR
                      - GF
                      - PF
                      - TF
                      - GA
                      - GM
                      - GE
                      - DE
                      - GH
                      - GI
                      - GR
                      - GL
                      - GD
                      - GP
                      - GU
                      - GT
                      - GG
                      - GN
                      - GW
                      - GY
                      - HT
                      - HM
                      - VA
                      - HN
                      - HK
                      - HU
                      - IS
                      - IN
                      - ID
                      - IR
                      - IQ
                      - IE
                      - IM
                      - IL
                      - IT
                      - JM
                      - JP
                      - JE
                      - JO
                      - KZ
                      - KE
                      - KI
                      - KP
                      - KR
                      - KW
                      - KG
                      - LA
                      - LV
                      - LB
                      - LS
                      - LR
                      - LY
                      - LI
                      - LT
                      - LU
                      - MO
                      - MG
                      - MW
                      - MY
                      - MV
                      - ML
                      - MT
                      - MH
                      - MQ
                      - MR
                      - MU
                      - YT
                      - MX
                      - FM
                      - MD
                      - MC
                      - MN
                      - ME
                      - MS
                      - MA
                      - MZ
                      - MM
                      - NA
                      - NR
                      - NP
                      - NL
                      - NC
                      - NZ
                      - NI
                      - NE
                      - NG
                      - NU
                      - NF
                      - MP
                      - 'NO'
                      - OM
                      - PK
                      - PW
                      - PS
                      - PA
                      - PG
                      - PY
                      - PE
                      - PH
                      - PN
                      - PL
                      - PT
                      - PR
                      - QA
                      - MK
                      - RO
                      - RU
                      - RW
                      - RE
                      - BL
                      - SH
                      - KN
                      - LC
                      - MF
                      - PM
                      - VC
                      - WS
                      - SM
                      - ST
                      - SA
                      - SN
                      - RS
                      - SC
                      - SL
                      - SG
                      - SX
                      - SK
                      - SI
                      - SB
                      - SO
                      - ZA
                      - GS
                      - SS
                      - ES
                      - LK
                      - SD
                      - SR
                      - SJ
                      - SE
                      - CH
                      - SY
                      - TW
                      - TJ
                      - TZ
                      - TH
                      - TL
                      - TG
                      - TK
                      - TO
                      - TT
                      - TN
                      - TR
                      - TM
                      - TC
                      - TV
                      - UG
                      - UA
                      - AE
                      - GB
                      - UM
                      - US
                      - UY
                      - UZ
                      - VU
                      - VE
                      - VN
                      - VG
                      - VI
                      - WF
                      - EH
                      - YE
                      - ZM
                      - ZW
                      - AX
                      - XK
    MoreHoursPost:
      description: |
        <p>The More Hours of the business and category (in its timezone).
        <p>More hours are specified per weekday. This is done by supplying a More Hour ID (<code>BREAKFAST</code>, <code>DINNER</code>, etc.), and an object mapping weekdays (<code>monday</code>, <code>tuesday</code>, etc.) to a list of of strings. These strings in turn represent time slots during which the business is open.
        <p>For example, the following value would set the kitchen hours to between 08:00-15:00 in the afternoon and 18:00-23:00 in the evening on Mondays:
        <p><code>{"gmb_id": "KITCHEN", "value": {"monday": ["08:00-15:00", "18:00-23:00"]}}</code>
        <p>To indicate that a business is open 24 hours for a specific weekday, use the value <code>["00:00-23:59"]</code>.
        <p>To delete a More Hours value, supply a <code>null</code> value.
      type: object
      properties:
        monday:
          "$ref": "#/components/schemas/Day"
        tuesday:
          "$ref": "#/components/schemas/Day"
        wednesday:
          "$ref": "#/components/schemas/Day"
        thursday:
          "$ref": "#/components/schemas/Day"
        friday:
          "$ref": "#/components/schemas/Day"
        saturday:
          "$ref": "#/components/schemas/Day"
        sunday:
          "$ref": "#/components/schemas/Day"
    MoreHoursBusinessPostBody:
      properties:
        more_hours:
          description: Array containing the more hours values to update. Grouped by
            More Hour ID. Only More Hour IDs included in the body will be updated.
          type: array
          items:
            type: object
            properties:
              gmb_id:
                description: More Hour ID for which to update hours.
                type: string
              value:
                "$ref": "#/components/schemas/MoreHoursPost"
          example:
          - gmb_id: KITCHEN
            value:
              monday: []
              tuesday: []
              wednesday: []
              thursday: []
              friday: []
              saturday:
              - '08:00-15:00'
              - 18:00-23:00
              sunday:
              - '08:00-15:00'
              - 18:00-23:00
          - gmb_id: BRUNCH
            value: 
    MoreHoursBusinessPostResponse:
      properties:
        status:
          description: Status of the request. Should say "success" unless something
            unexpected went wrong.
          type: string
          example: success
        id:
          description: ID of the business that was just updated.
          type: string
          example: 545f7bf982efa41a496379d2
    MoreHoursBusinessPostInvalidCategory:
      properties:
        errors:
          description: Object containing all errors encountered.
          type: object
          properties:
            json:
              description: Object containing any errors related to the request JSON
                body.
              type: object
              properties:
                more_hours:
                  description: Array containing any errors related to the `more_hours`
                    property in the request JSON body.
                  type: array
                  items:
                    type: string
                  example:
                  - "'foo' is not a valid gmb_id"
    MoreHoursBusinessPostOverlappingHours:
      properties:
        errors:
          description: Object containing all errors encountered.
          type: object
          properties:
            json:
              description: Object containing any errors related to the request JSON
                body.
              type: object
              properties:
                more_hours:
                  description: Object containing any errors related to the `more_hours`
                    property in the request JSON body.
                  type: object
                  properties:
                    '0':
                      description: Each index contains the errors found at that index
                        in the array of More Hours given in the request JSON body.
                      type: object
                      properties:
                        value:
                          description: Object that indicates value errors for each
                            given weekday.
                          type: object
                          properties:
                            saturday:
                              description: Each weekday key indicates an error in
                                the More Hours value given for that specific weekday.
                              type: object
                              properties:
                                '0':
                                  description: Each index contains a string describing
                                    the errors found at that index in the array of
                                    More Hours time slots.
                                  type: string
                                  example: start time cannot be superior to end time
    ServiceId:
      description: Id of the service (For creation you can get this id by calling
        <a href="#operation/getServicesSuggestions">get services suggestions endpoint</a>)
      type: integer
      example: 1
    ServiceType:
      description: Type of the service
      type: string
      enum:
      - STRUCTURED_SERVICE_ITEM
      - FREE_FORM_SERVICE_ITEM
    ServiceName:
      description: 'Name of the service.

        '
      type: string
      example: Salle d'escalade
    ServicePrice:
      description: Price of the service.
      type: number
      example: 12.5
    ServiceDescription:
      description: Description of the service.
      type: string
      maxLength: 300
    ServiceCategoryGmbName:
      type: string
      description: 'Google name of the category.

        '
      example: gcid:climbing_gym
    Services:
      description: A Google Service.
      type: object
      properties:
        service_id:
          "$ref": "#/components/schemas/ServiceId"
        type:
          "$ref": "#/components/schemas/ServiceType"
        name:
          "$ref": "#/components/schemas/ServiceName"
        price:
          "$ref": "#/components/schemas/ServicePrice"
        description:
          "$ref": "#/components/schemas/ServiceDescription"
        category_gmb_name:
          "$ref": "#/components/schemas/ServiceCategoryGmbName"
    BusinessServicesResponse:
      type: object
      description: List of Business Services.
      properties:
        services:
          type: array
          items:
            "$ref": "#/components/schemas/Services"
          example:
          - service_id: 1
            type: STRUCTURED_SERVICE_ITEM
            name: Climbing Gym
            price: 50
            description: Our climbing gym available for all
            category_gmb_name: gcid:climbing_gym
          - service_id: 2
            type: FREE_FORM_SERVICE_ITEM
            name: Random Name
            price: 25.35
            description: This is our custom service
            category_gmb_name: gcid:climbing_gym
    StructuredServicesCreateUpdate:
      description: A Google Service.
      required:
      - service_id
      type: object
      properties:
        service_id:
          "$ref": "#/components/schemas/ServiceId"
        price:
          "$ref": "#/components/schemas/ServicePrice"
        description:
          "$ref": "#/components/schemas/ServiceDescription"
    FreeFormServicesCreate:
      description: A Google Service.
      required:
      - category_gmb_name
      - name
      type: object
      properties:
        category_gmb_name:
          type: string
          description: 'Google name of the category. The category must belong to your
            business.

            '
          example: gcid:climbing_gym
        name:
          description: Name of the service.
          type: string
          example: Random Name
        price:
          description: Price of the service.
          type: number
          example: 25.35
        description:
          description: Description of the service.
          type: string
          example: This is our custom service
          maxLength: 300
    FreeFormServicesUpdate:
      description: A Google Service.
      required:
      - service_id
      type: object
      properties:
        service_id:
          description: 'Id of the service.

            '
          type: integer
          example: 2
        category_gmb_name:
          type: string
          description: 'Google name of the category. The category must belong to your
            business.

            '
          example: gcid:climbing_gym
        name:
          description: Name of the service.
          type: string
          example: Random Name
        price:
          description: Price of the service.
          type: number
          example: 25.35
        description:
          description: Description of the service.
          type: string
          example: This is our custom service
          maxLength: 300
    FoodMenuSectionName:
      description: Name of the food menu section.
      type: string
    FoodMenuSectionOrder:
      description: Display order of the food menu item in the food menu section.
      type: integer
      example: 3
    FoodMenuItemName:
      description: Name of the food menu item.
      type: string
      example: Item name
      maxLength: 140
    FoodMenuItemOrder:
      description: Display order of the food menu item in the food menu section.
      type: integer
      example: 3
    FoodMenuItemDescription:
      description: Description of the food menu item.
      type: string
      maxLength: 1000
    FoodMenuItemPrice:
      description: Price of the food menu item.
      type: number
      example: 12.5
    FoodMenuMediaSourceUrl:
      description: User source url of the food menu item, mandatory to set/update
        media with food menu item
      type: string
    FoodMenuMediaPublicUrl:
      description: Public url the food menu item provided by partoo, can be empty
        in set/update.
      type: string
    FoodMenuItemMedia:
      description: Media of the food menu item.
      properties:
        sourceUrl:
          "$ref": "#/components/schemas/FoodMenuMediaSourceUrl"
        publicUrl:
          "$ref": "#/components/schemas/FoodMenuMediaPublicUrl"
        id:
          type: string
    FoodMenuItem:
      description: A food menu item object.
      properties:
        name:
          "$ref": "#/components/schemas/FoodMenuItemName"
        order:
          "$ref": "#/components/schemas/FoodMenuItemOrder"
        description:
          "$ref": "#/components/schemas/FoodMenuItemDescription"
        price:
          "$ref": "#/components/schemas/FoodMenuItemPrice"
        media:
          "$ref": "#/components/schemas/FoodMenuItemMedia"
    FoodMenuSection:
      description: A food menu item section.
      properties:
        name:
          "$ref": "#/components/schemas/FoodMenuSectionName"
        order:
          "$ref": "#/components/schemas/FoodMenuSectionOrder"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/FoodMenuItem"
      example:
        name: Starters
        order: 1
        items:
        - name: Starter 1
          order: 1
          description: First starter of the food menu
          price: 1
        - name: Starter 2
          order: 2
          description: Second starter of the food menu
          price: 5
    BusinessFoodMenus:
      description: A Google food menu for business.
      properties:
        menus:
          type: array
          items:
            "$ref": "#/components/schemas/FoodMenuSection"
      example:
        menus:
        - name: Starters
          order: 1
          items:
          - name: Starter 1
            order: 1
            description: First starter of the food menu
            price: 1
            media:
              source_url: https://www.source_url.com/main_dishes
              public_url: https://www.partoo_url.com/main_dishes
          - name: Starter 2
            order: 2
            description: Second starter of the food menu
            price: 5
        - name: Main dishes
          order: 2
          items:
          - name: Today's special
            order: 1
            description: Today's special description
            price: 25
            media:
              source_url: https://www.source_url.com/main_dishes
              public_url: https://www.partoo_url.com/main_dishes
    PlaceActionLinks.Array:
      description: List of Business Place Action Links
      type: array
      items:
        type: object
        properties:
          gmb_id:
            type: string
            description: The Google My Business ID for the place action type.
            enum:
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
          urls:
            type: array
            description: List of place action links associated with a given gmb_id.
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: Id for link
                value:
                  type: string
                  description: Must be a valid url value and be unique within the
                    list of URLs for this gmb_id.
                is_preferred:
                  type: boolean
                  description: Indicates if this URL is the preferred link. There
                    can only be one preferred URL per gmb_id.
                is_editable:
                  type: boolean
                  description: Indicates if this URL is editable.
      example:
      - gmb_id: SHOP_ONLINE
        urls:
        - id: 1
          value: https://www.example.com/shop_online
          is_preferred: true
          is_editable: true
        - id: 2
          value: https://www.example.com/shop_online2
          is_preferred: false
          is_editable: true
      - gmb_id: FOOD_TAKEOUT
        urls:
        - id: 3
          value: https://www.example.com/food_takeout1
          is_preferred: false
          is_editable: false
        - id: 4
          value: https://www.example.com/food_takeout2
          is_preferred: false
          is_editable: true
        - id: 5
          value: https://www.example.com/food_takeout3
          is_preferred: false
          is_editable: true
      - gmb_id: ONLINE_APPOINTMENT
        urls:
        - id: 6
          value: https://www.example.com/online_appointment
          is_preferred: true
          is_editable: true
        - id: 7
          value: https://www.example.com/online_appointment2
          is_preferred: false
          is_editable: true
      - gmb_id: DINING_RESERVATION
        urls:
        - id: 8
          value: https://www.example.com/dining_reservation1
          is_preferred: true
          is_editable: false
        - id: 9
          value: https://www.example.com/dining_reservation2
          is_preferred: false
          is_editable: true
      - gmb_id: APPOINTMENT
        urls:
        - id: 10
          value: https://www.example.com/appointment1
          is_preferred: true
          is_editable: true
        - id: 11
          value: https://www.example.com/appointment2
          is_preferred: false
          is_editable: true
      - gmb_id: FOOD_ORDERING
        urls:
        - id: 12
          value: https://www.example.com/food_ordering1
          is_preferred: true
          is_editable: true
        - id: 13
          value: https://www.example.com/food_ordering2
          is_preferred: false
          is_editable: true
      - gmb_id: FOOD_DELIVERY
        urls: []
    PlaceActionLinksResponse:
      type: object
      properties:
        place_action_links:
          "$ref": "#/components/schemas/PlaceActionLinks.Array"
    PostPlaceActionLinks.Array:
      description: List of Business Place Action Links
      type: array
      items:
        type: object
        required:
        - gmb_id
        - urls
        properties:
          gmb_id:
            type: string
            description: The Google My Business ID for the place action type.
            enum:
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
          urls:
            type: array
            description: List of place action links associated with a given gmb_id.
            items:
              type: object
              required:
              - value
              - is_preferred
              properties:
                id:
                  type: integer
                  description: 'Optional: Include for existing links to update'
                value:
                  type: string
                  description: Must be a valid url value and be unique within the
                    list of URLs for this gmb_id.
                is_preferred:
                  type: boolean
                  description: Indicates if this URL is the preferred link. There
                    can only be one preferred URL per gmb_id.
      example:
      - gmb_id: SHOP_ONLINE
        urls:
        - value: https://www.example.com/shop_online
          is_preferred: true
        - id: 2
          value: https://www.example.com/shop_online2
          is_preferred: false
      - gmb_id: FOOD_TAKEOUT
        urls:
        - id: 3
          value: https://www.example.com/food_takeout1
          is_preferred: false
        - id: 4
          value: https://www.example.com/food_takeout2
          is_preferred: false
        - value: https://www.example.com/food_takeout3
          is_preferred: false
      - gmb_id: ONLINE_APPOINTMENT
        urls:
        - value: https://www.example.com/online_appointment
          is_preferred: true
        - id: 7
          value: https://www.example.com/online_appointment2
          is_preferred: false
      - gmb_id: DINING_RESERVATION
        urls:
        - id: 8
          value: https://www.example.com/dining_reservation1
          is_preferred: true
        - id: 9
          value: https://www.example.com/dining_reservation2
          is_preferred: false
      - gmb_id: APPOINTMENT
        urls:
        - value: https://www.example.com/appointment1
          is_preferred: true
        - id: 11
          value: https://www.example.com/appointment2
          is_preferred: false
      - gmb_id: FOOD_ORDERING
        urls:
        - value: https://www.example.com/food_ordering1
          is_preferred: true
        - id: 13
          value: https://www.example.com/food_ordering2
          is_preferred: false
      - gmb_id: FOOD_DELIVERY
        urls:
        - id: 14
          value: https://www.example.com/food_delivery1
          is_preferred: true
        - value: https://www.example.com/food_delivery2
          is_preferred: false
    PlaceActionLinksPostBody:
      type: object
      properties:
        place_action_links:
          "$ref": "#/components/schemas/PostPlaceActionLinks.Array"
    PlaceActionLinksNonExistingGmbIdsError:
      description: At least one of the attributes values in the request body is incorrect
      type: object
      properties:
        errors:
          type: object
          properties:
            non_existing_gmb_ids:
              type: array
              items:
                type: string
              description: List of `gmb_id` values that do not exist.
      example:
        errors:
          json:
            message: 'following gmb_ids do not exist in place_action_links: [''SHOPIFY_ONLINE'',
              ''JUST_TAKEOUT'']'
    PlaceActionLinksNonUniqueGmbIdsError:
      description: The `gmb_id` values in the request are not unique.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating that `gmb_id` values must
                    be unique.
      example:
        errors:
          json:
            message: gmb_ids must be unique
    PlaceActionLinksNonUniqueUrlsError:
      description: URL values are not unique within each `gmb_id`.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating that URL values per `gmb_id`
                    must be unique.
      example:
        errors:
          json:
            message: url values per gmb_id must be unique
    PlaceActionLinksMultiplePreferredUrlsError:
      description: More than one URL is marked as preferred for a `gmb_id`.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating that only one URL can be marked
                    as preferred per `gmb_id`.
      example:
        errors:
          json:
            message: only one is_preferred url at most per place_action_link
    PlaceActionLinksMissingIdsError:
      description: The `id` values in the request do not exist in the backend.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating that some `id` values do not
                    exist for the business place action links.
      example:
        errors:
          json:
            message: 'place_action_link ids do not exist for business: {1, 2}'
    PlaceActionLinksNonUniqueIdsError:
      description: The `id` values in the request are not unique.
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating that `id` values must be unique.
      example:
        errors:
          json:
            message: place_action_link ids must be unique
    BusinessFields.Section:
      description: Business Fields sections permissions
      type: object
      properties:
        name:
          description: 'Name of a the section. The structure of the fields inside
            it depends of the section and is described below.

            '
          type: string
    BusinessFields.Field:
      description: Business Field
      type: object
      properties:
        name:
          description: Name of the field
          type: string
        enabled:
          description: Permission (enabled | disabled) of the field for the current
            user
          type: boolean
        enabled_for_subroles:
          description: 'Permission (enabled | disabled) of the field for the users
            with a more restrictive role compared to the current user. <p> E.g. if
            the user is ORG_ADMIN: enabled_for_subroles describes the permissions
            of the field for all the GROUP_MANAGER and BUSINESS_MANAGER of the given
            organization. <p> E.g. if the user is PROVIDER: enabled_for_subroles describes
            the permissions of the field for all the ORG_ADMIN, GROUP_MANAGER and
            BUSINESS_MANAGER of the given provider.

            '
          type: boolean
    BusinessFields.SectionNormal:
      allOf:
      - "$ref": "#/components/schemas/BusinessFields.Section"
      - description: Business Fields Section
        type: object
        properties:
          fields:
            type: array
            items:
              "$ref": "#/components/schemas/BusinessFields.Field"
    CustomFields.Metadata:
      allOf:
      - "$ref": "#/components/schemas/BusinessFields.Field"
      - description: Business Fields permissions
        type: object
        properties:
          type:
            description: 'Type of the custom field. <p> Possible values are "TEXT",
              "INTEGER", "FLOAT", "BOOLEAN", "SINGLE_SELECT", "MULTIPLE_SELECT", "MULTIPLE_SELECT_IMAGE",
              "IMAGES_UPLOADER".

              '
            type: string
            enum:
            - TEXT
            - INTEGER
            - FLOAT
            - BOOLEAN
            - SINGLE_SELECT
            - MULTIPLE_SELECT
            - MULTIPLE_SELECT_IMAGE
            - IMAGES_UPLOADER
          id:
            description: ID of the custom field.
            type: integer
          order:
            type: integer
    BusinessFields.SectionCustomFields:
      allOf:
      - "$ref": "#/components/schemas/BusinessFields.Section"
      - description: Business Fields Section of Custom Fields
        type: object
        properties:
          fields:
            type: array
            items:
              "$ref": "#/components/schemas/CustomFields.Metadata"
    BusinessFields.SectionArray:
      description: Business Fields sections array
      type: array
      items:
        oneOf:
        - "$ref": "#/components/schemas/BusinessFields.SectionNormal"
        - "$ref": "#/components/schemas/BusinessFields.SectionCustomFields"
      example:
      - name: address
        fields:
        - name: country
          enabled: true
          enabled_for_subroles: true
        - name: city
          enabled: true
          enabled_for_subroles: false
      - name: description
        fields:
        - name: categories
          enabled: true
          enabled_for_subroles: true
        - name: website_url
          enabled: true
          enabled_for_subroles: true
      - name: hours
        fields:
        - name: open_hours
          enabled: true
          enabled_for_subroles: true
      - name: photos
        fields:
        - name: cover
          enabled: false
          enabled_for_subroles: false
      - name: contact
        fields:
        - name: phone_number
          enabled: true
          enabled_for_subroles: false
      - name: custom_fields
        fields:
        - name: has_parking
          enabled: true
          enabled_for_subroles: true
          type: BOOLEAN
          id: 1
          order: 10
          section_id: 4
        - name: special_description
          enabled: true
          enabled_for_subroles: true
          type: TEXT
          id: 2
          order: 11
          max_len: 250
          section_id: 6
        - name: facilities
          enabled: true
          enabled_for_subroles: true
          type: MULTIPLE_SELECT
          id: 3
          order: 2
          possible_values:
          - handicapped access
          - toilets
          - break room
        - name: banner image
          enabled: true
          enabled_for_subroles: true
          id: 4
          type: MULTIPLE_SELECT_IMAGE
          order: 10
          possible_values:
          - image 1
          - image 2
          - image 3
          possible_images_labels:
          - label image 1
          - label image 2
          - label image 3
          possible_images_urls:
          - url_of_image_1
          - url_of_image_2
          - url_of_image_3
        - name: team members
          enabled: true
          enabled_for_subroles: true
          id: 5
          type: IMAGES_UPLOADER
          order: 11
          text_fields:
          - text_field: text 1
            max_length: 10
          - text_field: text 2
            max_length: 20
          - text_field: text 3
            max_length: 30
    Lang:
      description: Available language in the application
      type: string
      enum:
      - fr
      - en
      - es
      - it
      - pt-br
      - de
      - ar
      - nl
      - pl
      - cs
      - ca
      - sk
      - pt
      - lv
      - ro
      - bg
      - hu
      example: fr
    CategorySqlId:
      type: integer
      description: Category id
      example: 42
    CategorySqlGmbId:
      type: string
      description: 'Unique category id. This is the id you should pass in business.categories
        array when creating/updating a business<br/>

        '
      example: gcid:climbing_gym
    CategoryName:
      type: string
      description: Category name in given language or user's language
      example: Cabinet d'expertise comptable
    DeprecatedCategorySqlName:
      type: object
      properties:
        name:
          type: string
          description: Translated category name
          example: salle d'escalade
        lang:
          type: string
          description: Available language in the application
          example: FR
        country:
          type: string
          description: Country code, will be removed after 2022-10-15
          example: FR
          deprecated: true
    DeprecatedCategorySqlNames:
      type: array
      description: |
        Category name translated for available languages

        *If `with_names` is true*
      items:
        "$ref": "#/components/schemas/DeprecatedCategorySqlName"
    CategorySqlState:
      type: string
      description: State of category ( OK or DEPRECATED )
      example: OK
    CategorySqlBlockPushLong:
      type: boolean
      description: Boolean indicating if the business long description can be pushed
        to Google when the business belongs to this category
      example: false
    CategoryCountries:
      type: array
      items:
        type: string
      description: |
        Array of strings representing the list of country codes in which the category is available

        *If `with_countries` is true*
      example:
      - FR
      - GB
      - IT
      - ES
    CategorySqlLiveId:
      type:
      - string
      - 'null'
      description: Live category id to which the category is mapped (deprecated categories
        are mapped to the closest category)
      example: gcid:sport_club
    DeprecatedCategorySql:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/CategorySqlId"
        gmb_id:
          "$ref": "#/components/schemas/CategorySqlGmbId"
        name:
          "$ref": "#/components/schemas/CategoryName"
        names:
          "$ref": "#/components/schemas/DeprecatedCategorySqlNames"
        state:
          "$ref": "#/components/schemas/CategorySqlState"
        block_push_long_description_on_gmb:
          "$ref": "#/components/schemas/CategorySqlBlockPushLong"
        countries:
          "$ref": "#/components/schemas/CategoryCountries"
        live_id:
          "$ref": "#/components/schemas/CategorySqlLiveId"
    CategoryId:
      oneOf:
      - type: integer
        description: Category id
      - type: string
        description: Google's category id
      description: Category id or Google's category id
      example: 5706 or gcid:bank
    CategorySqlName:
      type: object
      properties:
        name:
          type: string
          description: Translated category name
          example: salle d'escalade
        lang:
          type: string
          description: Available language in the application
          example: FR
    CategorySqlNames:
      type: array
      description: |
        Category names translated for available languages

        *If `with_names` is true*
      items:
        "$ref": "#/components/schemas/CategorySqlName"
    CategorySql:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/CategorySqlId"
        gmb_id:
          "$ref": "#/components/schemas/CategorySqlGmbId"
        name:
          "$ref": "#/components/schemas/CategoryName"
        names:
          "$ref": "#/components/schemas/CategorySqlNames"
        state:
          "$ref": "#/components/schemas/CategorySqlState"
        block_push_long_description_on_gmb:
          "$ref": "#/components/schemas/CategorySqlBlockPushLong"
        countries:
          "$ref": "#/components/schemas/CategoryCountries"
        live_id:
          "$ref": "#/components/schemas/CategorySqlLiveId"
    SuggestedAdditionalCategoriesObject:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/CategorySqlId"
        gmb_id:
          "$ref": "#/components/schemas/CategorySqlGmbId"
        name:
          "$ref": "#/components/schemas/CategoryName"
        state:
          "$ref": "#/components/schemas/CategorySqlState"
        block_push_long_description_on_gmb:
          "$ref": "#/components/schemas/CategorySqlBlockPushLong"
        live_id:
          "$ref": "#/components/schemas/CategorySqlLiveId"
    MessageContentType:
      type: string
      enum:
      - Text
      - Image
      - Video
      - Audio
      - Document
      - IgStoryReply
      - IgStoryMention
      - Unsupported
      description: |
        The type of the message:
        - "Text" describes a simple text message.
        - "Image" describes a message that only contains an image.
        - "IgStoryReply" (for "Instagram" conversations) describes a notification
        of reply to an Instagram story.
        - "IgStoryMention" (for "Instagram" conversations) describes a notification
        of a mention in an Instagram story.
        - "Unsupported" describes a message whose content is not supported.

        ⚠️ New values may be added to this enum without prior notice and
        without following the classic depreciation cycle.
        It is up to you to gracefully handle the case where new values
        are added. We recommend showing a "Unhandled content" placeholder to the
        user in place of the message ⚠️
    SenderType:
      type: string
      enum:
      - User
      - Consumer
      - Metadata
      description: |
        Describes the person that sent the Message:
        - "User" indicates that the message was sent as the Business.
        Such messages can be sent by a Partoo user, via API, or directly on the
        messaging platform.
        - "Consumer" indicates that the message was sent by a consumer, a client
        that wants to get in touch with the business.
        - "Metadata" is reserved for special messages that appear in the
        Partoo inbox. They only give contextual information about the conversation,
        and are not shown to the consumer.

        ⚠️ New values may be added to this enum without prior notice and
        without following the classic depreciation cycle.
        It is up to you to gracefully handle the case where new values
        are added. We recommend ignoring messages with unhandled sender_type ⚠️
    MessageStatus:
      type: string
      enum:
      - Sending
      - Success
      - Failed
      description: |
        The delivery status of the message.
        Messages send via Partoo are created with the status "Sending", and
        propagated to the messaging channel.
        If the message is sent successfully, the status is changed to "Success".
        If the messaging channel fails to send the message, the status changed to
        "Failed". A failed message can be retried using the [/retry endpoint](#operation/retrySendMessage).
    TextMessageContent:
      title: Text
      type: string
      description: The text of the message.
    ImageMessageContent:
      title: Image
      type: string
      format: url
      description: The url of the image.
    VideoMessageContent:
      type: object
      title: Video
      properties:
        url:
          type: string
          format: url
          description: The url of the video.
        file_name:
          type:
          - string
          - 'null'
          description: Name of the video file.
    AudioMessageContent:
      type: object
      title: Audio
      properties:
        url:
          type: string
          format: url
          description: The url of the audio.
        file_name:
          type:
          - string
          - 'null'
          description: Name of the audio file.
    DocumentMessageContent:
      type: object
      title: Document
      properties:
        url:
          type: string
          format: url
          description: The url of the document.
        file_name:
          type:
          - string
          - 'null'
          description: Name of the document file.
    IgStoryReplyMessageContent:
      type: object
      title: IgStoryReply
      properties:
        url:
          type: string
          format: url
          description: The url of the story that received the reply.
        content:
          type: string
          description: Text of the reply, or url of the image.
        content_type:
          type: string
          enum:
          - Image
          - Text
          description: The type of content of ther reply.
        id:
          type: string
          description: The Instagram ID of the story.
    IgStoryMentionMessageContent:
      type: string
      title: IgStoryMention
      format: url
      description: The url of the story mentionned.
    UnsupportedMessageContent:
      type: object
      title: Unsupported
      properties:
        type:
          type: string
          enum:
          - video
          - audio
          - unknown
    Message:
      type: object
      title: Message
      properties:
        id:
          type: integer
          description: The id of the message.
        conversation_id:
          type: integer
          description: The id of the parent conversation.
        date:
          type: string
          description: |
            The date at which the message was sent or received, in the ISO 8601
            format (ex: "2023-01-31 16:22:17.327878+00:00").
          example: '2023-01-31 16:22:17.327878+00:00'
        content_type:
          "$ref": "#/components/schemas/MessageContentType"
        sender_type:
          "$ref": "#/components/schemas/SenderType"
        sender_label:
          type:
          - string
          - 'null'
          description: Name of the person sending the message
          example: Jane Doe
        status:
          "$ref": "#/components/schemas/MessageStatus"
        is_deleted:
          type: boolean
          description: |
            If the message has been deleted by the consumer on the messaging
            channel (for now, only "Instagram" messages can be deleted).
          example: false
        content:
          oneOf:
          - "$ref": "#/components/schemas/TextMessageContent"
          - "$ref": "#/components/schemas/ImageMessageContent"
          - "$ref": "#/components/schemas/VideoMessageContent"
          - "$ref": "#/components/schemas/AudioMessageContent"
          - "$ref": "#/components/schemas/DocumentMessageContent"
          - "$ref": "#/components/schemas/IgStoryReplyMessageContent"
          - "$ref": "#/components/schemas/IgStoryMentionMessageContent"
          - "$ref": "#/components/schemas/UnsupportedMessageContent"
        user_id:
          type:
          - string
          - 'null'
          description: |
            For "User" messages sent via the Partoo application, the id of the
            user that sent the message.
    ConversationStatus:
      type: string
      enum:
      - Open
      - Closed
    ConversationBusiness:
      type: object
      title: BusinessInfo
      properties:
        id:
          type: string
        name:
          type:
          - string
          - 'null'
        city:
          type:
          - string
          - 'null'
        zipcode:
          type:
          - string
          - 'null'
        country:
          type:
          - string
          - 'null'
        formatted_address:
          type:
          - string
          - 'null'
    MessagingPartner:
      description: |
        The channel that the message is being sent to/from.

        ⚠️ New values may be added to this enum without prior notice and
        without following the classic depreciation cycle.
        It is up to you to gracefully handle the case where new values
        are added. ⚠️
      type: string
      enum:
      - Google
      - Facebook
      - Instagram
      - SMS
      - Whatsapp
      example: Facebook
    ConversationIssue:
      type: string
      enum:
      - facebook_no_page_linked
      - facebook_partner_co_undone
      - facebook_invalid_status
      - facebook_missing_webhook_subs
      - instagram_no_account_linked
      - sms_no_phone_number
    Conversation:
      type: object
      title: Conversation
      properties:
        id:
          type: integer
        consumer_img:
          type:
          - string
          - 'null'
          format: url
          description: The url of the consumer's profile picture
          example: https://www.example.com/profile-picture.jpg
        consumer_name:
          type:
          - string
          - 'null'
          description: |
            The name of the consumer, can be empty. The format may differ depending
            on the platform of contact (ex: "John Doe", "John Doe (@johndoe)",
            "@johndoe", "", ...).
          example: John Doe
        consumer_phone_number:
          type:
          - string
          - 'null'
          description: |
            The phone number of the consumer, formatted in E.164 international
            format (ex: "+33612345678").
          example: "+33612345678"
        last_message:
          oneOf:
          - type: 'null'
          - "$ref": "#/components/schemas/Message"
            description: The last message exchanged in the conversation.
        is_read:
          type: boolean
          description: |
            If the last message received was read. This property is scoped to the
            user who performs the request. Multiple partoo users can have a
            different is_read value for the same conversation.
        status:
          allOf:
          - description: |
              If Open, it is possible to send a message in the conversation, else not.
              A conversation can be Closed if it is expired.
          - "$ref": "#/components/schemas/ConversationStatus"
        created_at:
          type: string
          description: |
            The date of creation of the conversation, in the ISO 8601 format
            (ex: "2023-01-31 16:22:17.327878+00:00").
          example: '2023-01-31 16:22:17.327878+00:00'
        has_one_user_message:
          type: boolean
          description: 'If the conversation has at least one message sent by a Partoo
            user.

            '
        business:
          allOf:
          - description: |
              Some basic information about the business that the conversation is
              associated with.
          - "$ref": "#/components/schemas/ConversationBusiness"
        messaging_partner:
          "$ref": "#/components/schemas/MessagingPartner"
        issues:
          type: array
          items:
            "$ref": "#/components/schemas/ConversationIssue"
          description: |
            The list of issues that affect the conversation. The issues represent
            setup problem that the business may have with a messaging channel. It is
            not possible to send messages on a conversation that has issues.

            ⚠️ New values may be added to this enum without prior notice and
            without following the classic depreciation cycle.
            It is up to you to gracefully handle the case where new values
            are added. ⚠️
          example:
          - facebook_no_page_linked
        first_message_date:
          type: string
          description: |
            The date at which the first message of the conversation was received,
            in the ISO 8601 format (ex: "2023-01-31 16:22:17.327878+00:00").
        is_expired:
          type: boolean
          description: |
            If the conversation has expired. A conversation expires if the consumer
            has not contacted the business for a certain amount of time.
            You cannot send messages to an expired conversation.
          example: false
        is_solved:
          type: boolean
          description: |
            If the conversation has been solved. Conversations can be solved from our
            app or by updating conversation status to "closed".
          example: false
        assigned_user_id:
          type: string
          description: 'The "user_id" of the user assigned to the conversation.

            '
          example: 62d80fae74e8b11d700302b8
    Count:
      type: integer
      description: 'Total number of results available for the filters and dimensions
        requested.

        '
      example: 1
    NextCursor:
      type:
      - string
      - 'null'
      description: |
        The cursor to use in order to retrieve the next page of data.
        When all data have been fetched, the value is null.
    PostMessage:
      required:
      - conversation_id
      - content_type
      - date
      properties:
        conversation_id:
          type: integer
          description: The id of the conversation
    PostTextMessage:
      required:
      - content
      title: Text
      allOf:
      - "$ref": "#/components/schemas/PostMessage"
      - properties:
          content_type:
            type: string
            enum:
            - Text
          content:
            type: string
            description: The text to send
    PostImageUrlMessage:
      required:
      - url
      title: Image Url
      allOf:
      - "$ref": "#/components/schemas/PostMessage"
      - properties:
          content_type:
            type: string
            enum:
            - Image
          url:
            type: string
            description: The url of the image to send
    PostAudioMessage:
      required:
      - url
      title: Audio
      allOf:
      - "$ref": "#/components/schemas/PostMessage"
      - properties:
          content_type:
            type: string
            enum:
            - Audio
          content:
            type: object
            properties:
              url:
                type: string
                description: The url of the audio to send
    PostVideoMessage:
      required:
      - url
      title: Video
      allOf:
      - "$ref": "#/components/schemas/PostMessage"
      - properties:
          content_type:
            type: string
            enum:
            - Video
          content:
            type: object
            properties:
              url:
                type: string
                description: The url of the video to send
    PostDocumentMessage:
      required:
      - url
      title: Document
      allOf:
      - "$ref": "#/components/schemas/PostMessage"
      - properties:
          content_type:
            type: string
            enum:
            - Document
          content:
            type: object
            properties:
              url:
                type: string
                description: The url of the document to send
    PostImageMessage:
      required:
      - image
      allOf:
      - "$ref": "#/components/schemas/PostMessage"
      - properties:
          content_type:
            type: string
            enum:
            - Image
          image:
            type: string
            description: The image to send
    MessageReplyTemplate:
      type: object
      title: MessageReplyTemplate
      properties:
        id:
          type: string
          example: 642bca3d2830e15c6806cc33
        title:
          type: string
          description: The title of the message template.
          example: Quote request
        content:
          type: string
          enum:
          - client_full_name
          - client_first_name
          - business_name
          - my_first_name
          - rb_link
          - address
          - website_url
          - phone_number
          description: |
            The content of the message template should be a __stringified JSON__ object. This includes both the message content (`"text"`) and the pair `"_version": "0.1"`.

            The `"text"` can contain placeholders (values from the enum above within double curly braces `{{}}`) that will be replaced with the actual values when the message is sent.
          example: '{"text": "Hello {{client_full_name}}, thank you for your request.
            For a quote, please contact us at 0123456789." "_version": "0.1"}'
        icon:
          type:
          - string
          - 'null'
          description: The icon associated with the message template.
          example: "\U0001F4DD"
        org_id:
          type: integer
          description: The organization ID that the message template belongs to.
          example: 123
        created_at:
          type: string
          format: date-time
          description: The date and time when the message template was created, in
            ISO 8601 format.
          example: '2023-01-31T16:22:17.327878+00:00'
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date and time when the message template was last updated,
            in ISO 8601 format.
          example: '2023-02-15T10:00:00.000000+00:00'
        usage_count:
          type: integer
          description: The number of times the message template has been used.
          example: 50
    MessageTemplateCreateRequest:
      required:
      - title
      - content
      properties:
        title:
          type: string
          description: The title of the template
          example: Quote request
        icon:
          type: string
          description: The icon linked to the template
          example: "\U0001F4DD"
        content:
          type: string
          description: 'The template content as a __stringified JSON__ object with
            `"_version": "0.1"` inside

            '
          example: '{"text": "Hello, thank you for your request. For a quote, please
            contact us at 0123456789." "_version": "0.1"}'
    MessageTemplateUpdateRequest:
      properties:
        title:
          type: string
          description: The new title of the template
          example: Quote request
        icon:
          type: string
          description: The new icon linked to the template
          example: "\U0001F4DD"
        content:
          type: string
          description: 'The new template content as a __stringified JSON__ object
            with `"_version": "0.1"` inside

            '
          example: '{"text": "Hello, thank you for your request. For a quote, please
            contact us at 0123456789." "_version": "0.1"}'
    MessagingSettingWelcomeMessage:
      type:
      - string
      - 'null'
      description: |
        When a consumer first contacts the business, an automated reply is
        sent. The content of the reply depends on whether the consumer
        contacted the business during it's chat hours. If it is, the
        welcome_message is sent as a reply.

        The welcome_message is mandatory, and can be customized. A default
        will be set if none is specified.
    MessagingSettingOfflineMessage:
      type:
      - string
      - 'null'
      description: |
        When a consumer first contacts the business, an automated reply is
        sent. The content of the reply depends on whether the consumer
        contacted the business during it's chat hours. If it is not, the
        offline_message is sent as a reply.

        The offline_message is mandatory, and can be customized. A default
        will be set if none is specified.
    MessagingSettingUsesBusinessHours:
      type:
      - boolean
      - 'null'
      description: |
        If set to true, the business' "open_hours" will be used as chat
        hours. Otherwise, you need to specify "custom_chat_hours".
    ChatHours:
      type:
      - object
      - 'null'
      description: |
        The chat hours of the business (in its timezone).

        Chat hours are specified per weekday. This is done by supplying an object
        mapping weekdays ("monday", "tuesday", etc.) to a list of strings. These
        strings in turn represent time slots during which the business is open.

        For example, the following value would set the chat hours to between
        08:00-15:00 in the afternoon and 18:00-23:00 in the evening on Mondays:

        <code>{"monday": ["08:00-15:00", "18:00-23:00"]}</code>

        To indicate that a business can be contacted for 24 hours, for a specific
        weekday, use the value <code>["00:00-23:59"]</code>.

        This field is not mandatory unless "uses_business_hours" is set to false.
      required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
      properties:
        monday:
          "$ref": "#/components/schemas/Day"
        tuesday:
          "$ref": "#/components/schemas/Day"
        wednesday:
          "$ref": "#/components/schemas/Day"
        thursday:
          "$ref": "#/components/schemas/Day"
        friday:
          "$ref": "#/components/schemas/Day"
        saturday:
          "$ref": "#/components/schemas/Day"
        sunday:
          "$ref": "#/components/schemas/Day"
    MessagingSettingIsLaunched:
      type:
      - boolean
      - 'null'
      description: |
        Some messaging channels (Google and Facebook) can be temporarily
        deactivated. This allows the business to close for a period of time
        without having to answer consumer messages.

        This is important because consumers will get frustrated if they are able
        to contact a business and do not get an answer. It is also important to
        note that for some messaging channels, not responding to messages may
        lead to decreased visibility of the business, or suspension of the
        messaging service.

        The is_launched property indicates whether the business is reachable
        for those messaging channels.

        The value can be updated, and the changes will be propagated to the
        messaging channels, effectively toggling the On or Off the ability for
        consumers to reach the business. (The change to "is_launched" is made
        asychronously, and the update will be effective when the messaging
        channels have finished propagating the information)
    MessagingSetting:
      type: object
      properties:
        id:
          type: integer
        business_id:
          type: string
          description: 'The ID of the business that the MessagingSetting is related
            to.

            '
        business_name:
          type:
          - string
          - 'null'
          description: 'The Name of the business that the MessagingSetting is related
            to.

            '
        business_address:
          type:
          - string
          - 'null'
          description: |
            The Formatted address of the business that the MessagingSetting is
            related to.
          example: 1 Rue de la Paix, 75000 Paris
        welcome_message:
          "$ref": "#/components/schemas/MessagingSettingWelcomeMessage"
        offline_message:
          "$ref": "#/components/schemas/MessagingSettingOfflineMessage"
        uses_business_hours:
          "$ref": "#/components/schemas/MessagingSettingUsesBusinessHours"
        custom_chat_hours:
          "$ref": "#/components/schemas/ChatHours"
        is_launched:
          "$ref": "#/components/schemas/MessagingSettingIsLaunched"
    Page:
      description: The current page number.
      type: integer
      example: 1
    MaxPage:
      description: Total number of pages available for this request.
      type: integer
      example: 1
    CustomFieldName:
      description: The name of the custom field
      type: string
      minLength: 1
      maxLength: 50
      example: Click and collect
    CustomFieldTypeBool:
      description: BOOLEAN
      minLength: 1
      type: string
      example: BOOLEAN
    CustomFieldOrder:
      description: Describes where the custom field is displayed on the Business Edit
        view of the Partoo App. If the custom field is within a section, <b>order</b>
        specifies its position within the custom field section.
      type: integer
      default: 10
      example: 30
    CustomFieldSectionId:
      description: Id of the custom field section
      type: integer
      example: 6
    CustomFieldBool:
      description: Boolean Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeBool"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeText:
      description: TEXT
      minLength: 1
      type: string
      example: TEXT
    CustomFieldMaxLen:
      description: maximum lenght for TEXT field
      type: integer
      example: 10
    CustomFieldText:
      description: Text Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeText"
        max_len:
          "$ref": "#/components/schemas/CustomFieldMaxLen"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeInteger:
      description: INTEGER
      minLength: 1
      type: string
      example: INTEGER
    CustomFieldMin:
      description: minimum value for INTEGER field
      type: integer
      example: 0
    CustomFieldMax:
      description: maximum value for INTEGER field
      type: integer
      example: 100
    CustomFieldInteger:
      description: Integer Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeInteger"
        min:
          "$ref": "#/components/schemas/CustomFieldMin"
        max:
          "$ref": "#/components/schemas/CustomFieldMax"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeFloat:
      description: FLOAT
      minLength: 1
      type: string
      example: FLOAT
    CustomFieldFloatMin:
      description: minimum value for FLOAT field
      type: number
      example: 0
    CustomFieldFloatMax:
      description: maximum value for FLOAT field
      type: number
      example: 10.5
    CustomFieldFloat:
      description: Float Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeFloat"
        min:
          "$ref": "#/components/schemas/CustomFieldFloatMin"
        max:
          "$ref": "#/components/schemas/CustomFieldFloatMax"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeSingleSelect:
      description: SINGLE_SELECT
      minLength: 1
      type: string
      example: SINGLE_SELECT
    CustomFieldPossibleValues:
      minItems: 1
      description: list of available values
      type: array
      items:
        type: string
      example:
      - free parking
      - disabled access
    CustomFieldSingleSelect:
      description: Single Select Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeSingleSelect"
        possible_values:
          "$ref": "#/components/schemas/CustomFieldPossibleValues"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeMultipleSelect:
      description: MULTIPLE_SELECT
      minLength: 1
      type: string
      example: MULTIPLE_SELECT
    CustomFieldMultipleSelect:
      description: Multple Select Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeMultipleSelect"
        possible_values:
          "$ref": "#/components/schemas/CustomFieldPossibleValues"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeMultipleSelectImage:
      description: MULTIPLE_SELECT_IMAGE
      minLength: 1
      type: string
      example: MULTIPLE_SELECT_IMAGE
    CustomFieldPossibleValuesMSI:
      minItems: 1
      description: "<p>List of available values. <p>Each element correspond to one
        of possible_images_urls and possible_images_labels. <p>Hence the 3 lists shall
        have the same size.\n"
      type: array
      items:
        type: string
      example:
      - first image
      - second image
    CustomFieldPossibleImagesUrls:
      minItems: 1
      description: List of available urls
      type: array
      items:
        type: string
      example:
      - https://image1
      - https://image2
    CustomFieldPossibleImagesLabels:
      minItems: 1
      description: "<p>List of available labels. <p>Can be set to null but shall always
        have the same number of elements than possible_values and possible_images_urls.\n"
      type: array
      items:
        type: string
      example:
      - Image 1
      - Image 2
    CustomFieldMultipleSelectImage:
      description: Multiple Select Image Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeMultipleSelectImage"
        possible_values:
          "$ref": "#/components/schemas/CustomFieldPossibleValuesMSI"
        possible_images_urls:
          "$ref": "#/components/schemas/CustomFieldPossibleImagesUrls"
        possible_images_labels:
          "$ref": "#/components/schemas/CustomFieldPossibleImagesLabels"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeImagesUploader:
      description: IMAGES_UPLOADER
      minLength: 1
      type: string
      example: IMAGES_UPLOADER
    CustomFieldImagesUploader:
      description: Images uploader Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeImagesUploader"
        text_fields:
          "$ref": "#/components/schemas/CustomFieldValuesImagesUploader"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldId:
      description: Id of the custom field
      type: integer
      example: 42
    CustomFieldForceUpdate:
      description: |
        <p>The deletion of a custom field or the update of its metadata can have impacts on custom fields which are already set for businesses. <ul>
          <li>If <code>force</code> is set to false, updates/deletions will be performed only if they are non destructive.
          If some businesses would be impacted by the update/deletion, an exception will be returned
          <li>If <code>force</code> is set to true, destructive modification will be performed and businesses values will be deleted accordingly.
      type: boolean
      default: false
    CustomFieldEditTypeBool:
      description: Boolean Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeBool"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldEditTypeText:
      description: Text Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeText"
        max_len:
          "$ref": "#/components/schemas/CustomFieldMaxLen"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldEditTypeInteger:
      description: Integer Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeInteger"
        min:
          "$ref": "#/components/schemas/CustomFieldMin"
        max:
          "$ref": "#/components/schemas/CustomFieldMax"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldEditTypeFloat:
      description: Float Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeFloat"
        min:
          "$ref": "#/components/schemas/CustomFieldMin"
        max:
          "$ref": "#/components/schemas/CustomFieldMax"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldCreatedValues:
      description: list of available values to add
      type: array
      items:
        type: string
      example:
      - Image 3
    CustomFieldDeletedValues:
      description: list of available values to remove
      type: array
      items:
        type: string
      example:
      - Image 1
    CustomFieldRenamedValues:
      description: list of available values to rename
      type: array
      items:
        type: object
        properties:
          old_value:
            type: string
          new_value:
            type: string
      example:
      - old_value: Image 1
        new_value: Draw 1
      - old_value: Image 2
        new_value: Photo 2
    CustomFieldTypeEditSingleSelect:
      description: Single Select Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeSingleSelect"
        created_values:
          "$ref": "#/components/schemas/CustomFieldCreatedValues"
        deleted_values:
          "$ref": "#/components/schemas/CustomFieldDeletedValues"
        renamed_values:
          "$ref": "#/components/schemas/CustomFieldRenamedValues"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldTypeEditMultipleSelect:
      description: Multple Select Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeMultipleSelect"
        created_values:
          "$ref": "#/components/schemas/CustomFieldCreatedValues"
        deleted_values:
          "$ref": "#/components/schemas/CustomFieldDeletedValues"
        renamed_values:
          "$ref": "#/components/schemas/CustomFieldRenamedValues"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldCreatedValuesMSI:
      description: list of available values to add
      type: array
      items:
        type: string
      example:
      - label: Image 3
        url: https://image3
        value: Image 3
    CustomFieldRenamedValuesMSI:
      description: list of available values to add
      type: array
      items:
        type: object
        properties:
          label:
            type: string
          url:
            type: string
          value:
            type: string
          old_value:
            type: string
      example:
      - label: new label
        url: https://new_url
        value: new value
        old_value: Image 1
    CustomFieldTypeEditMultipleSelectImage:
      description: Multiple Select Image Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeMultipleSelectImage"
        created_values:
          "$ref": "#/components/schemas/CustomFieldCreatedValuesMSI"
        deleted_values:
          "$ref": "#/components/schemas/CustomFieldDeletedValues"
        renamed_values:
          "$ref": "#/components/schemas/CustomFieldRenamedValuesMSI"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldCreatedValuesImagesUploader:
      description: List of text fields to add
      type: array
      items:
        "$ref": "#/components/schemas/CustomFieldValuesImagesUploader"
      example:
      - text_field: text 1
        max_length: 30
      - text_field: text 2
        max_length: 20
    CustomFieldDeletedValuesImagesUploader:
      description: List of text fields to delete
      type: array
      items:
        type: string
      example:
      - my text field
    CustomFieldEditedValuesImagesUploader:
      description: List of edited text fields
      type: array
      items:
        type: object
        properties:
          new_value:
            "$ref": "#/components/schemas/CustomFieldValuesImagesUploader"
          old_value:
            "$ref": "#/components/schemas/CustomFieldValuesImagesUploader"
      example:
      - new_value:
          text_field: new name
          max_length: 40
        old_value:
          text_field: old name
          max_length: 20
    CustomFieldTypeEditImagesUploader:
      description: Images uploader Custom Field
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldName"
        type:
          "$ref": "#/components/schemas/CustomFieldTypeImagesUploader"
        created_values:
          "$ref": "#/components/schemas/CustomFieldCreatedValuesImagesUploader"
        deleted_values:
          "$ref": "#/components/schemas/CustomFieldDeletedValuesImagesUploader"
        edited_values:
          "$ref": "#/components/schemas/CustomFieldEditedValuesImagesUploader"
        force:
          "$ref": "#/components/schemas/CustomFieldForceUpdate"
        section_id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
    CustomFieldBusinessesCount:
      description: Number of businesses in error
      type: integer
      example: 2
    CustomFieldSimpleDescription:
      description: Error description
      type: string
      example: At least one business does not respect the new constraints, please
        send forced_update=true to force update.
    CustomFieldTextConstraint:
      description: constraints in error
      type: array
      items:
        type: string
      example:
      - max_len
    CustomFieldTextError:
      description: New max_len is not respected by some business
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  "$ref": "#/components/schemas/CustomFieldBusinessesCount"
                description:
                  "$ref": "#/components/schemas/CustomFieldSimpleDescription"
                constraints:
                  "$ref": "#/components/schemas/CustomFieldTextConstraint"
    CustomFieldNumberConstraint:
      description: constraints in error
      type: array
      items:
        type: string
      example:
      - min
      - max
    CustomFieldNumberError:
      description: New max or min is not respected by some business
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  "$ref": "#/components/schemas/CustomFieldBusinessesCount"
                description:
                  "$ref": "#/components/schemas/CustomFieldSimpleDescription"
                constraints:
                  "$ref": "#/components/schemas/CustomFieldNumberConstraint"
    CustomFieldSelectDescription:
      description: Error description
      type: string
      example: At least one business had one of these values, please send forced_update=true
        to force update.
    CustomFieldSelectConstraint:
      description: options in error
      type: array
      items:
        type: string
      example:
      - free parking
    CustomFieldSelectError:
      description: Option deleted is used by a business
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  "$ref": "#/components/schemas/CustomFieldBusinessesCount"
                description:
                  "$ref": "#/components/schemas/CustomFieldSelectDescription"
                options:
                  "$ref": "#/components/schemas/CustomFieldSelectConstraint"
    CustomFieldDeleteDescription:
      description: custom fields in error
      type: array
      items:
        type: string
      example: At least one business has this custom field, please send forced_update=true
        to force update.
    CustomFieldDeleteError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                businesses_count:
                  "$ref": "#/components/schemas/CustomFieldBusinessesCount"
                description:
                  "$ref": "#/components/schemas/CustomFieldDeleteDescription"
    CustomFieldOrdersObject:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/CustomFieldId"
        order:
          "$ref": "#/components/schemas/CustomFieldOrder"
    CustomFieldOrders:
      description: 'On the Business Edit view of the Partoo App, custom fields will
        be displayed depending on their order. </br> The lowest number will be the
        first.

        '
      type: array
      items:
        "$ref": "#/components/schemas/CustomFieldOrdersObject"
    CustomFieldSectionOrder:
      description: Describes where the custom field section is displayed on the Business
        Edit view of the Partoo App.
      type: integer
      example: 18
    CustomFieldSectionOrdersObject:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/CustomFieldSectionId"
        order:
          "$ref": "#/components/schemas/CustomFieldSectionOrder"
    CustomFieldSectionOrders:
      description: 'On the Business Edit view of the Partoo App, custom fields section
        will be displayed depending on their order. </br> The lowest number will be
        the first.

        '
      type: array
      items:
        "$ref": "#/components/schemas/CustomFieldSectionOrdersObject"
    CustomFieldSectionName:
      description: The name of the custom field section. Needs to be unique from all
        other section names.
      type: string
      example: Section A
    CustomFieldSection:
      description: Section containing custom fields
      type: object
      required:
      - name
      properties:
        name:
          "$ref": "#/components/schemas/CustomFieldSectionName"
        order:
          "$ref": "#/components/schemas/CustomFieldSectionOrder"
    AttributeType:
      description: Type of the Attribute
      type: string
      enum:
      - URL
      - REPEATABLE_URL
      - BOOL
      - ENUM
      - REPEATABLE_ENUM
    AttributeGmbId:
      description: Google Id of the attribute
      type: string
      example: gcid:restaurant
    AttributeName:
      description: Name of the attribute in the chosen language
      type: string
      example: Delivery
    AttributeOrder:
      type: integer
      example: 1
    Attribute:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/AttributeType"
        gmb_id:
          "$ref": "#/components/schemas/AttributeGmbId"
        name:
          "$ref": "#/components/schemas/AttributeName"
        order:
          "$ref": "#/components/schemas/AttributeOrder"
    AttributesGroupName:
      type: string
      description: Name of the attribute group
      example: Services disponibles
    AttributesGroupOrder:
      type: integer
      example: 5
    AttributesGroup:
      type: object
      properties:
        attributes:
          type: array
          description: List of Google Attributes
          items:
            "$ref": "#/components/schemas/Attribute"
        name:
          "$ref": "#/components/schemas/AttributesGroupName"
        order:
          "$ref": "#/components/schemas/AttributesGroupOrder"
    AttributesGroupList:
      type: array
      description: List of Google Groups
      items:
        "$ref": "#/components/schemas/AttributesGroup"
    AttributesGroupResponse:
      type: object
      properties:
        groups:
          "$ref": "#/components/schemas/AttributesGroupList"
    AttributesMissingParametersError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                lang:
                  description: lang parameter is required
                  type: string
                  example: is required
                category_name:
                  description: category_name parameter is required
                  type: string
                  example: is required
    AttributesWrongCategoryError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: string
              description: Category name not found in DB
              example: Category name not found in DB
    AttributesWrongLangError:
      type: object
      properties:
        errors:
          type: object
          properties:
            json:
              type: object
              properties:
                lang:
                  type: object
                  properties:
                    explanation:
                      description: incorrect value inputed in lang parameter
                      type: string
                      example: xx is an incorrect value
                    choices:
                      type: array
                      items:
                        type: string
                      description: languages choices available
                      example:
                      - DE
                      - EN
                      - ES
                      - FR
                      - IT
                      - PT
                      - PT_BR
    MoreHoursListResponse:
      properties:
        more_hours:
          description: List of More Hour IDs for a given category and country.
          type: array
          items:
            type: object
            properties:
              gmb_id:
                description: The More Hour ID.
                type: string
                example: BREAKFAST
              name:
                description: The name of the More Hour translated to the specified
                  language.
                type: string
                example: Breakfast
          example:
          - gmb_id: BREAKFAST
            name: Breakfast
          - gmb_id: BRUNCH
            name: Brunch
          - gmb_id: DELIVERY
            name: Delivery
          - gmb_id: DINNER
            name: Dinner
          - gmb_id: DRIVE_THROUGH
            name: Drive through
          - gmb_id: HAPPY_HOUR
            name: Happy hours
          - gmb_id: KITCHEN
            name: Kitchen
          - gmb_id: LUNCH
            name: Lunch
          - gmb_id: ONLINE_SERVICE_HOURS
            name: Online service hours
          - gmb_id: PICKUP
            name: Pickup
          - gmb_id: TAKEOUT
            name: Takeout
          - gmb_id: SENIOR_HOURS
            name: Senior hours
          - gmb_id: ACCESS
            name: Access
    MoreHoursListMissingParametersError:
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                category:
                  description: category parameter is required
                  type: string
                  example: is required
                country:
                  description: country parameter is required
                  type: string
                  example: is required
    ServicesSuggestion:
      type: object
      properties:
        service_id:
          "$ref": "#/components/schemas/ServiceId"
        type:
          "$ref": "#/components/schemas/ServiceType"
        name:
          "$ref": "#/components/schemas/ServiceName"
        category_id:
          "$ref": "#/components/schemas/CategorySqlId"
        category_gmb_name:
          "$ref": "#/components/schemas/ServiceCategoryGmbName"
    ServicesSuggestionResponse:
      type: object
      properties:
        services_suggestions:
          type: array
          items:
            "$ref": "#/components/schemas/ServicesSuggestion"
    GoogleLocation:
      description: Google location
      type: object
      properties:
        id:
          description: The unique identifier of the Google location on Partoo.
          type: string
          example: 6047dac0604f33da03018004
        location_name:
          description: The name of the location.
          type: string
          example: Annie - HQ
        store_code:
          description: The store code of the google location.
          type: string
          example: annie-hq
        region_code:
          description: The region code where the location is situated.
          type: string
          example: FR
        postal_code:
          description: The postal code of the location.
          type: string
          example: '75018'
        address_details:
          description: The details of the location's address.
          type: string
          example: 130 rue mont cenis
        locality:
          description: The locality of the location.
          type: string
          example: Paris
        place_id:
          description: The unique identifier of the Google Maps place.
          type: string
          example: ChIJ3Qu-HpFt5kcRNHUedqwIzQY
        google_verifications:
          description: The status and checked date of the Google verification for
            the location.
          type: object
          properties:
            status:
              description: The status of the Google verification.
              type: string
              example: verified
            checked_at:
              description: The date and time when the Google verification was last
                checked.
              type: string
              format: date-time
              example: '2023-01-30T14:25:11.163950Z'
        phone_numbers:
          description: The phone number associated with the location.
          type: string
          example: '0675181818'
    GoogleLocations:
      description: Paginated Google Locations
      type: object
      properties:
        locations:
          type: array
          items:
            "$ref": "#/components/schemas/GoogleLocation"
        page:
          "$ref": "#/components/schemas/current_page"
        max_page:
          "$ref": "#/components/schemas/max_page"
        count:
          "$ref": "#/components/schemas/count"
    GroupItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        has_puller:
          description: If the group is connected to an automated data puller or not.
            Groups linked to pullers cannot be modified or deleted. Should you want
            to make any changes to a group connected to a puller, please contact support
            for assistance.
          type: boolean
    SectionItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ID of the section
        name:
          type: string
          example: Country
          description: Name of the section, must be unique
        groups:
          type: array
          items:
            "$ref": "#/components/schemas/GroupItem"
        can_edit:
          description: If the current user has the right to edit or delete the section,
            or one of the groups it contains
          type: boolean
        has_puller:
          description: If the section is connected to an automated data puller or
            not. Sections linked to pullers cannot be modified or deleted. Should
            you want to make any changes to a section connected to a puller, please
            contact support for assistance.
          type: boolean
    SectionsGetSuccessResponse:
      type: object
      properties:
        page:
          type: integer
          example: 1
        count:
          type: integer
          example: 6
        max_page:
          type: integer
          example: 1
        sections:
          type: array
          items:
            "$ref": "#/components/schemas/SectionItem"
    SectionName:
      description: 'Name of the section. Cannot include any of the following characters:
        `,;/`'
      type: string
      example: Country
    SectionCreateOrgId:
      description: ID of the organization in which to create the section (only available
        to `PROVIDER` users)
      type: integer
      example: 1
    SectionCreateSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
          - success
        id:
          description: ID of the created section
          type: integer
          example: 1
    SectionCreateNameConflictResponse:
      type: object
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                name:
                  type: string
                  example: name_already_exists
    SectionCreateForbiddenCharactersResponse:
      type: object
      properties:
        errors:
          description: The detail of the error encountered
          type: object
          properties:
            json:
              type: object
              properties:
                name:
                  type: string
                  example: name_contains_forbidden_characters
    SectionUpdateSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
          - success
        id:
          description: ID of the updated section
          type: integer
          example: 1
    SectionDeleteSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
          - success
        id:
          description: ID of the deleted section
          type: integer
          example: 1
    GroupV2Name:
      description: 'Name of the group. Cannot include any of the following characters:
        `,;/`'
      type: string
      example: France
    business_ids:
      description: List of business ids
      type: array
      example:
      - 5409c35a97bbc544d8e26737
      - 595badaef348ab6b3530033f
      - 59d53302b12ff6429f262639
      items:
        "$ref": "#/components/schemas/BusinessId"
    GroupCreateSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
          - success
        id:
          description: ID of the created group
          type: integer
          example: 1
    GetGroupItem:
      type: object
      properties:
        id:
          description: ID of the group
          type: integer
          example: 1
        name:
          description: Name of the group, must be unique
          type: string
          example: France
        has_puller:
          description: If the group is linked to a puller. If so, it's not possible
            to delete the group. Should you want to make any changes to a group connected
            to a puller, please contact support for assistance.
          type: boolean
        business_ids:
          description: list of business ids in the group
          type: array
          items:
            "$ref": "#/components/schemas/BusinessId"
          example:
          - a1f0e2d3b4c5e6f7a8b9c0d1
          - 3f2e1d4c5b6a7f8e9d0c1a2
          - 0e1d2c3b4a5f6e7d8c9a0b1
    GroupDeleteSuccessResponse:
      type: object
      properties:
        status:
          description: Request status
          type: string
          enum:
          - success
        id:
          description: ID of the deleted group
          type: integer
          example: 1
    OrgId:
      description: Organization id
      type: integer
      example: 42
    OrgName:
      description: Organization name
      type: string
      example: Fast Retailer
    OrgAlias:
      description: Organization alias (should match regex `[a-z0-9_]`)
      type: string
      example: fast_retailer
    OrgProvider:
      description: Organization provider
      type: string
      example: partoo
    OrgType:
      description: Organization type
      type: string
      enum:
      - small_medium_business
      - enterprise
      default: small_medium_business
    OrgHasGooglePost:
      deprecated: true
      description: |
        Organization has subscribed Google Post.
        Deprecated, please use <code>features</code> or <code>org_features</code> instead.
      type: boolean
    OrgDisplayGooglePost:
      deprecated: true
      description: |
        Organization can display Google Post
        Deprecated, please use <code>features</code> or <code>org_features</code> instead.
      type: boolean
    OrgFeatures:
      description: |
        List of organization's available features.
        Contains the features the organization can subscribe to as well as the ones only some businesses may have subscribed to additionally.
      type: array
      items:
        "$ref": "#/components/schemas/Feature"
      example:
      - business_edition
      - diffusion
      - review_management
      - review_invite
      - messages
    OrgAvailableFeatures:
      description: |
        List of organization's features.
        Only contains the features the organization has subscribed to.
      type: array
      items:
        "$ref": "#/components/schemas/Feature"
      example:
      - business_edition
      - diffusion
      - review_management
      - review_invite
      - messages
      - review_ai_suggestion
    OrgLastApiCall:
      description: Date of the last API call made with one of the API keys linked
        to the organization
      type: string
      example: 05-11-2021
    OrgMaxBusinesses:
      description: |
        Maximum number of local businesses the organization can have.
        It does not include the global (brand) businesses.
        If null, there is no limit for the organization.
        This field can only be set by a provider.
      type:
      - integer
      - 'null'
      example: 100
    Org:
      description: Organization
      type: object
      properties:
        org_id:
          "$ref": "#/components/schemas/OrgId"
        name:
          "$ref": "#/components/schemas/OrgName"
        alias:
          "$ref": "#/components/schemas/OrgAlias"
        provider:
          "$ref": "#/components/schemas/OrgProvider"
        type:
          "$ref": "#/components/schemas/OrgType"
        has_google_post:
          "$ref": "#/components/schemas/OrgHasGooglePost"
        display_google_post:
          "$ref": "#/components/schemas/OrgDisplayGooglePost"
        features:
          "$ref": "#/components/schemas/OrgFeatures"
        org_features:
          "$ref": "#/components/schemas/OrgAvailableFeatures"
        last_org_api_call:
          "$ref": "#/components/schemas/OrgLastApiCall"
        max_businesses:
          "$ref": "#/components/schemas/OrgMaxBusinesses"
    OrganizationForceDeletion:
      description: Force the deletion of organization even if there are still users
        and business linked to it
      type: boolean
      default: false
    PlanUpdate:
      description: Plan
      type: object
      required:
      - name
      properties:
        name:
          type: string
          enum:
          - presence_management
          - review_management
          - posts
          - messages
          - review_booster
          - bulk_modification
          - feedback_management
          - partoo_smb
          - competitive_benchmark
          - messages_channel_sms
          - review_management_advanced
          - booking_links
          - webhooks
          description: Plan's name.
          example: presence_management
        expiration_date:
          type: string
          pattern: date
          description: Plan's expiration date. If not set, the plan is active indefinitely.
          example: '2026-01-01'
          default: 
    Plan:
      allOf:
      - "$ref": "#/components/schemas/PlanUpdate"
      properties:
        subscription_date:
          type: string
          pattern: date
          description: Plan's subscription date.
          example: '2025-01-01'
    OrgPlans:
      properties:
        plans:
          description: The exhaustive list of the organization's plans.
          type: array
          items:
            "$ref": "#/components/schemas/Plan"
          example:
          - name: presence_management
            subscription_date: '2025-01-01'
            expiration_date: '2026-01-01'
          - name: review_management
            subscription_date: '2025-01-01'
            expiration_date: 
    OrgPlansUpdate:
      properties:
        plans:
          description: The exhaustive list of the organization's plans.
          type: array
          items:
            "$ref": "#/components/schemas/PlanUpdate"
          example:
          - name: presence_management
            expiration_date: '2026-01-01'
          - name: review_management
    postId:
      description: The Post id
      type: integer
      example: 34
    postType:
      type: string
      description: The type of the post to be created. Event and Offer are not yet
        available for Facebook.
      enum:
      - news
      - event
      - offer
      - covid
    postSummary:
      type: string
      description: Main text content of the post.
      example: Wonderful post summary !
    postImageURL:
      description: |
        URLs of the images displayed with the post.

        **Note:**
          - Add up to 10 images for multi-image post on Facebook and IG

          - Multi-image is not supported by Google, only the first image will be displayed

          - Image ratio must be between 4:5 and 16:9 for IG

          - All images must be same ratio for IG or they will be crop at the first image ratio by IG
      anyOf:
      - type: string
      - type: array
        items:
          type: string
      example:
      - https://example.com/1.png
      - https://example.com/2.png
    postMedias:
      description: The photo that will be on the Post
      type: array
      items:
        type: object
        properties:
          media_url:
            "$ref": "#/components/schemas/postImageURL"
    CreatedDate:
      type: string
      description: Creation date on Partoo
      format: datetime
      example: '2019-08-01T19:15:54.256000+02:00'
    UpdatedDate:
      type: string
      description: Last update date (either on Partoo or on Partner platform)
      format: datetime
      example: '2019-09-01T15:12:35.256000+02:00'
    postCreatedOnPartoo:
      description: Indicates whether or not the post was created using Partoo App/API
      type: boolean
      example: false
    postUpdatedOnPartoo:
      description: Indicates whether or not the post was updated using Partoo App/API
      type: boolean
      example: false
    postBusinessInfo:
      description: name and address of the business that the post is related to.
      type: string
      example: Rick - HQ - 157 boulevard Macdonald, Paris
    postPublisherPost:
      type: string
      description: Publisher related to the post
      enum:
      - google_my_business__posts
      - facebook__posts
      example: facebook__posts
    postInsight:
      description: Statistics related to the posts on the different platforms. </br>
        ⚠️ Due to a Google deprecation, on 20/02/2023, Google views and counts won't
        be available anymore. Old insights will still be sent. Facebook ones will
        still be available.
      type: array
      items:
        type: object
        properties:
          name:
            "$ref": "#/components/schemas/postPublisherPost"
          click_count:
            type: integer
            description: number of times a user has clicked on the post.
            example: 1512
          view_count:
            type: integer
            description: number of times the post has been viewed.
            example: 2012
    postState:
      description: The state of the post, indicating at which lifecycle stage it is
        currently.
      type: string
      enum:
      - live
      - pending
      - to_configure
      - scheduled
      - error
      - expired
      example: live
    postCTALink:
      description: Link displayed in the post to redirect the client clicking on it.
      type: string
      example: www.partoo.co
    postStatus:
      description: Status related to the posts on the different platforms.
      type: array
      items:
        type: object
        properties:
          name:
            "$ref": "#/components/schemas/postPublisherPost"
          state:
            "$ref": "#/components/schemas/postState"
          link:
            "$ref": "#/components/schemas/postCTALink"
    postOfferTerms:
      type: string
      description: Terms and conditions of the offer
      example: These are the conditions
    postCouponCode:
      type: string
      description: Offer code that is usable in store or online
      example: PROMO25
    postCTAType:
      description: The type of the post to be created. Some type mig.
      type: string
      enum:
      - book
      - order
      - shop
      - learn_more
      - sign_up
      - call
      - no_cta
    Post:
      description: Post
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/postId"
        business_id:
          "$ref": "#/components/schemas/BusinessId"
        post_type:
          "$ref": "#/components/schemas/postType"
        summary:
          "$ref": "#/components/schemas/postSummary"
        schedule_time:
          description: Date when the Post will be published. No scheduled start time
            means that the Post will be published immediately.
          type: string
          example: '2020-01-01T12:00:00+02:00'
          default: 
        expiration_time:
          description: If this post is a draft, this indicates the date when it will
            be expired (= date after which the BM/GM user will no longer be able to
            validate and publish).
          type: string
          example: '2020-01-01T12:00:00+02:00'
          default: 
        validation_time:
          description: Date when the Draft post has been validated by the BM or GM
            user If the post doesn't also have a schedule time, this date coincides
            with the publishing date
          type: string
          example: '2020-01-01T12:00:00+02:00'
          default: 
        post_medias:
          "$ref": "#/components/schemas/postMedias"
        created_at:
          "$ref": "#/components/schemas/CreatedDate"
        updated_at:
          "$ref": "#/components/schemas/UpdatedDate"
        created_on_partoo:
          "$ref": "#/components/schemas/postCreatedOnPartoo"
        updated_on_partoo:
          "$ref": "#/components/schemas/postUpdatedOnPartoo"
        business_info:
          "$ref": "#/components/schemas/postBusinessInfo"
        post_insight:
          "$ref": "#/components/schemas/postInsight"
        post_status:
          "$ref": "#/components/schemas/postStatus"
        offer_terms:
          "$ref": "#/components/schemas/postOfferTerms"
        offer_code:
          "$ref": "#/components/schemas/postCouponCode"
        cta_link:
          "$ref": "#/components/schemas/postCTALink"
        cta_type:
          "$ref": "#/components/schemas/postCTAType"
    PostBusinessSearch:
      description: Business to create post
      type: object
      required:
      - business__in
      properties:
        business__in:
          type: array
          items:
            "$ref": "#/components/schemas/business_ids"
    PostPublishers:
      description: List of publisher to diffuse the post
      type: array
      items:
        type: string
        enum:
        - google_my_business
        - facebook
        - instagram
      example:
      - google_my_business
      - facebook
      - instagram
    postTitle:
      type: string
      description: Title of the post.
      example: Great post title !
    postLink:
      description: Link displayed in the post to redirect the client clicking on it.
        Use can only have one of the following parameters ('use_business_url' or 'custom_url').
      type: object
      properties:
        use_business_url:
          type: boolean
          description: Use the business google url for link on the post.
        custom_url:
          type: string
          description: An URL to redirect client when they click on the button
    postScheduleTime:
      type: string
      description: Date and time of when the post will be diffused corresponding platforms.
        It needs to be at least 2 hours after the time of the request. The timezone
        used is UTC.
      example: '2050-01-01T09:00:00'
    postExpirationTime:
      type: string
      description: This parameter is mandatory when creating a draft post. It indicates
        when the draft will expire, the time after which BM/GM users will no longer
        be able to validate and publish the post
      example: '2050-01-01T09:00:00'
    postStartAt:
      type: string
      description: For either event or offer post type. Defined when it start. Timezone
        is defined by the business timezone.
      example: '2050-01-01T09:00:00'
    postEndAt:
      type: string
      description: For either event or offer post type. Defined when it end. Timezone
        is defined by the business timezone.
      example: '2050-01-01T09:00:00'
    PostData:
      description: Information on post to create
      type: object
      required:
      - post_type
      - summary
      properties:
        post_type:
          "$ref": "#/components/schemas/postType"
        summary:
          "$ref": "#/components/schemas/postSummary"
        image_url:
          "$ref": "#/components/schemas/postImageURL"
        title:
          "$ref": "#/components/schemas/postTitle"
        cta_type:
          "$ref": "#/components/schemas/postCTAType"
        link:
          "$ref": "#/components/schemas/postLink"
        schedule_time:
          "$ref": "#/components/schemas/postScheduleTime"
        expiration_time:
          "$ref": "#/components/schemas/postExpirationTime"
        coupon_code:
          "$ref": "#/components/schemas/postCouponCode"
        offer_terms:
          "$ref": "#/components/schemas/postOfferTerms"
        start_at:
          "$ref": "#/components/schemas/postStartAt"
        end_at:
          "$ref": "#/components/schemas/postEndAt"
    requestResponsePost:
      properties:
        status:
          description: Request status
          type: string
          enum:
          - success
        code:
          description: Request code
          type: number
          example: 200
        message:
          description: Number of post(s) created
          type: string
          example: 2 posts have been created.
        ids:
          deprecated: true
          description: Id(s) of post(s) created
          type: string
          example: '45,46'
        data:
          description: Post ID and relative business ID pair list
          type: array
          items:
            type: object
            properties:
              post_id:
                type: integer
              business_id:
                type: string
          example:
          - post_id: 101
            business_id: '1234567890'
          - post_id: 102
            business_id: '1234567891'
    PostUpdateData:
      description: Request body to update a Post
      type: object
      properties:
        title:
          "$ref": "#/components/schemas/postTitle"
        summary:
          "$ref": "#/components/schemas/postSummary"
        image_url:
          "$ref": "#/components/schemas/postImageURL"
        cta_type:
          "$ref": "#/components/schemas/postCTAType"
        link:
          "$ref": "#/components/schemas/postLink"
        schedule_time:
          "$ref": "#/components/schemas/postScheduleTime"
        start_at:
          "$ref": "#/components/schemas/postStartAt"
        end_at:
          "$ref": "#/components/schemas/postEndAt"
        coupon_code:
          "$ref": "#/components/schemas/postCouponCode"
        offer_terms:
          "$ref": "#/components/schemas/postOfferTerms"
    GetPlaceActionLinks.Array:
      description: List of available Place Action Links
      type: array
      items:
        type: object
        properties:
          gmb_id:
            type: string
            description: The Google My Business ID for the place action type.
          name:
            type: string
            description: The name for the place action type.
      example:
      - gmb_id: APPOINTMENT
        name: Appointment links
      - gmb_id: DINING_RESERVATION
        name: Reservations links
      - gmb_id: FOOD_DELIVERY
        name: Food delivery links
      - gmb_id: FOOD_ORDERING
        name: Food ordering links
      - gmb_id: FOOD_TAKEOUT
        name: Food takeout links
      - gmb_id: ONLINE_APPOINTMENT
        name: Online appointment links
      - gmb_id: SHOP_ONLINE
        name: Shop Online links
    GetPlaceActionLinksResponse:
      type: object
      properties:
        place_action_links:
          "$ref": "#/components/schemas/GetPlaceActionLinks.Array"
    state:
      type: string
      enum:
      - success
      - pending
      - to_configure
      example: success
    error_type:
      type:
      - string
      - 'null'
      enum:
      - PUBLISHER_CONNEXION
      - USER_INPUT
      - EXTERNAL
      - 
    publisher_state_state:
      type: object
      properties:
        error_type:
          "$ref": "#/components/schemas/error_type"
        state:
          type: string
        url_on_publisher:
          type:
          - string
          - 'null'
    publisher_state_type:
      type: object
      properties:
        business_formatted_address:
          type: string
        business_id:
          type: string
        business_name:
          type: string
        publishers:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/publisher_state_state"
    getPublisherStatesResponse:
      type: object
      properties:
        businesses:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/publisher_state_type"
        count:
          type: integer
          description: number of businesses returned in response
          example: 1
    postPublisherErrorsResponse:
      type: object
      description: 'This response structure identifies and details errors detected
        by publishers in specific sections and fields of business information edits.
        It is organized to clearly indicate which publisher reported an error for
        a particular piece of business information, along with a specific error code
        or message identifier.

        '
      additionalProperties:
        type: object
        description: 'Denotes a particular section of the business edit process, such
          as ''hours'' or ''description'', where a publisher has identified an error.
          Each section can contain one or more fields.

          '
        additionalProperties:
          type: object
          description: 'Specifies the exact field within a business section, like
            ''open_hours'' or ''description_short'', where the error was detected.
            This allows for pinpointing specific areas within business information
            that require attention.

            '
          additionalProperties:
            type: string
            description: 'A mapping of publisher names to their corresponding error
              identifiers for the given field. Each key in this object is a publisher''s
              name, and its value is a string representing a unique error code or
              message key, such as ''name_has_more_than_90_char'' for overly long
              names or ''description_short_too_long'' for descriptions exceeding allowable
              length. This structure supports detailing multiple errors across various
              publishers for a single business information field.

              '
    ReviewPublisherLabel:
      type: string
      description: Publisher label
      enum:
      - google_my_business
      - facebook
      - tripadvisor
    ReviewState:
      type: string
      description: Reply state
      enum:
      - treated
      - not_treated
      - deleted
    TagLabel:
      description: |
        The label of the tag
        Must be <= 30 characters and cannot contain a comma (commas will be ignored)
      type: string
      example: food
    ReviewId:
      type: integer
      description: Review id
      example: 34
    ReviewPublisherId:
      type: string
      description: Review id on publisher
      example: accounts/114063712393225091258/locations/74805271119400652054
    ReviewAuthorName:
      type: string
      description: |
        The author name of the review.

        **Note:** Replies don't have an author.
      example: Castorche
    ReviewCreateDate:
      type: string
      description: Review creation date
      format: datetime
      example: '2017-07-01T16:10:23.156000+02:00'
    ReviewUpdateDate:
      type: string
      description: Review update date
      format: datetime
      example: '2017-08-01T19:15:54.256000+02:00'
    ReviewDeleteDate:
      type: string
      description: Review deletion date
      format: datetime
    ReviewRating:
      type: integer
      description: Review rating (can be null)
      maximum: 5
      minimum: 0
      example: 3
    ReviewRecommended:
      type: boolean
      description: Review recommended (can be null)
    ReviewTitle:
      type: string
      description: Review title
    ReviewBody:
      type: string
      description: Review body content
      example: Magasin un peu vieillot , mais personnel très sympathique, nombreuses
        références en rayons , un très bon choix côté vin...
    ReviewLink:
      type: string
      format: uri
      description: Link to review on publisher platform
    CommentId:
      type: integer
      description: Comment id
      example: 82938
    CommentBody:
      type: string
      description: Reply content
      example: Merci ❤️
    ParentId:
      type: integer
      description: |
        id of the parent comment.
        Is only specified if the comment is a reply to another comment

        **Note:** This applies on Facebook replies only.
    Comment:
      description: Reply to a review
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/CommentId"
        partner_id:
          "$ref": "#/components/schemas/ReviewPublisherId"
        created:
          "$ref": "#/components/schemas/CreatedDate"
        author_name:
          "$ref": "#/components/schemas/ReviewAuthorName"
        content:
          "$ref": "#/components/schemas/CommentBody"
        date:
          type: string
          description: Comment date
          format: datetime
          example: '2017-08-01T19:15:54.256000+02:00'
        update_date:
          type: string
          format: datetime
          description: 'Comment update date. Only specified if the comment was updated

            '
          example: '2017-08-01T19:15:54.256000+02:00'
        can_edit:
          type: boolean
          description: |
            If the current user can or cannot edit a reply

            **Note:** This applies on Facebook replies only.
            A reply left by an external user on Facebook cannot be edited.
          example: true
        review_id:
          "$ref": "#/components/schemas/ReviewId"
        parent_id:
          "$ref": "#/components/schemas/ParentId"
        user_id:
          type: string
          description: 'User id of the comment author

            '
          example: 123456789abcdef2f60c42ff
        is_reply_suggestion:
          type: boolean
          description: 'If AI reply suggestion was used to generate this comment

            '
        replies:
          type: array
          items:
            "$ref": "#/components/schemas/Comment"
          description: 'List of replies to this comment

            '
    TagId:
      description: Tag id
      type: integer
      example: 25
    TagColor:
      description: The color of the tag, in hexadecimal representation
      type: string
      enum:
      - "#808080"
      - "#9B7CDB"
      - "#F47FBE"
      - "#4D4D4D"
      - "#9E6957"
      - "#2F8DE4"
      - "#37CED0"
      - "#53C944"
      - "#B1DA34"
      - "#F78234"
      - "#F4BD38"
      - "#992842"
      example: "#808080"
    Tag:
      description: Tag
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/TagId"
        label:
          description: The label of the tag
          allOf:
          - "$ref": "#/components/schemas/TagLabel"
        color:
          "$ref": "#/components/schemas/TagColor"
    Review:
      description: Business Review on partner
      type: object
      properties:
        key:
          type: string
        org_id:
          "$ref": "#/components/schemas/OrgId"
        id:
          "$ref": "#/components/schemas/ReviewId"
        business_id:
          "$ref": "#/components/schemas/BusinessId"
        partner:
          "$ref": "#/components/schemas/ReviewPublisherLabel"
        partner_id:
          "$ref": "#/components/schemas/ReviewPublisherId"
        author_name:
          "$ref": "#/components/schemas/ReviewAuthorName"
        date:
          "$ref": "#/components/schemas/ReviewCreateDate"
        update_date:
          "$ref": "#/components/schemas/ReviewUpdateDate"
        delete_date:
          "$ref": "#/components/schemas/ReviewDeleteDate"
        rating:
          "$ref": "#/components/schemas/ReviewRating"
        recommended:
          "$ref": "#/components/schemas/ReviewRecommended"
        title:
          "$ref": "#/components/schemas/ReviewTitle"
        content:
          "$ref": "#/components/schemas/ReviewBody"
        state:
          "$ref": "#/components/schemas/ReviewState"
        link:
          "$ref": "#/components/schemas/ReviewLink"
        comments:
          "$ref": "#/components/schemas/Comment"
        tags:
          type: array
          description: Tags associated to the review
          items:
            "$ref": "#/components/schemas/Tag"
    TemplateId:
      type: integer
      description: Template id
      example: 34
    TemplateUpdateDate:
      type: string
      description: Template update date
      format: datetime
      example: '2017-08-01T19:15:54.256000+02:00'
    TemplateCreationDate:
      type: string
      description: Template creation date
      format: datetime
      example: '2017-08-01T19:15:54.256000+02:00'
    TemplateTitle:
      type: string
      description: Template title
    TemplateText:
      description: |
        The content of the reply template.

        Placeholders are recognisable within the text by this exact markup `@[](name_of_the_placeholder)`.
        Where `name_of_the_placeholder` is the `value` field taken from the `GET placeholders` operation.

        Example of usable placeholder values: `client_full_name`, `client_first_name`, `business_name`, `my_first_name`.
      type: string
      example: |-
        hello @[](client_full_name),
        Thanks from the team at @[](business_name).
        @[](my_first_name)
    TemplateNegative:
      type: boolean
      description: Template is made for negative reviews (ex from 1 to 2 stars on
        gmb)
    TemplateNeutral:
      type: boolean
      description: Template is made for neutral reviews (ex 3 stars on gmb)
    TemplatePositive:
      type: boolean
      description: Template is made for positive reviews (ex from 4 to 5 stars on
        gmb)
    Template:
      description: Review's reply tempate
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/TemplateId"
        org_id:
          "$ref": "#/components/schemas/OrgId"
        update_date:
          "$ref": "#/components/schemas/TemplateUpdateDate"
        creation_date:
          "$ref": "#/components/schemas/TemplateCreationDate"
        language:
          "$ref": "#/components/schemas/Lang"
        title:
          "$ref": "#/components/schemas/TemplateTitle"
        text:
          "$ref": "#/components/schemas/TemplateText"
        negative:
          "$ref": "#/components/schemas/TemplateNegative"
        neutral:
          "$ref": "#/components/schemas/TemplateNeutral"
        positive:
          "$ref": "#/components/schemas/TemplatePositive"
    TemplatePlaceholder:
      description: |
        Reply tempates available placeholders.
        A template placeholder is a dynamically updated word depending on the context.
      type: object
      properties:
        id:
          type: integer
          description: Placeholder id
          example: 2
        value:
          type: string
          description: |
            Placeholder value

            This value must be used within the placeholder markup `@[](placeholder_value)` in a template `text` in order to work properly.
          example: my_first_name
    BusinessID:
      description: Business id
      type: string
      example: 5409c35a97bbc544d8e26737
    TotalItemsCount:
      description: 'Total number of results available for the filters and dimensions
        requested.

        '
      type: integer
      example: 1
    BusinessImpressionsDesktopMaps:
      type: integer
      description: |
        Business impressions on Google Maps on Desktop devices.
         Multiple impressions by a unique user within a single day are
         counted as a single impression.
      example: 123
    BusinessImpressionsMobileMaps:
      type: integer
      description: |
        Business impressions on Google Maps on Mobile devices.
         Multiple impressions by a unique user within a single
          day are counted as a single impression.
      example: 123
    BusinessImpressionsDesktopSearch:
      type: integer
      description: |
        Business impressions on Google Search on Desktop devices.
         Multiple impressions by a unique user within a single day
         are counted as a single impression.
      example: 123
    BusinessImpressionsMobileSearch:
      type: integer
      description: |
        Business impressions on Google Search on Mobile devices.
         Multiple impressions by a unique user within a single day
         are counted as a single impression.
      example: 123
    BusinessDirectionRequests:
      type: integer
      description: |
        The number of times a direction request was requested to the
         business location.
      example: 123
    ActionsPhone:
      type: integer
      description: Customers who call your business
      example: 123
    ActionsWebsite:
      type: integer
      description: Customers who click on your website link
      example: 123
    AnalyticsDate:
      type: string
      description: First day of the aggregation
      example: '2019-11-05'
    AnalyticsBucket:
      type: string
      description: Time aggregation requested
      example: day
    PresenceAnalyticsMetricsResults:
      type: array
      items:
        type: object
        properties:
          business_impressions_desktop_maps:
            "$ref": "#/components/schemas/BusinessImpressionsDesktopMaps"
          business_impressions_mobile_maps:
            "$ref": "#/components/schemas/BusinessImpressionsMobileMaps"
          business_impressions_desktop_search:
            "$ref": "#/components/schemas/BusinessImpressionsDesktopSearch"
          business_impressions_mobile_search:
            "$ref": "#/components/schemas/BusinessImpressionsMobileSearch"
          business_direction_requests:
            "$ref": "#/components/schemas/BusinessDirectionRequests"
          call_clicks:
            "$ref": "#/components/schemas/ActionsPhone"
          website_clicks:
            "$ref": "#/components/schemas/ActionsWebsite"
          date:
            "$ref": "#/components/schemas/AnalyticsDate"
          bucket:
            "$ref": "#/components/schemas/AnalyticsBucket"
          business_id:
            "$ref": "#/components/schemas/BusinessID"
    PresenceAnalyticsMetricsResponse:
      type: object
      properties:
        page:
          "$ref": "#/components/schemas/Page"
        count:
          "$ref": "#/components/schemas/TotalItemsCount"
        max_page:
          "$ref": "#/components/schemas/MaxPage"
        metrics:
          "$ref": "#/components/schemas/PresenceAnalyticsMetricsResults"
    Keyword:
      type: string
      description: |
        The lower-cased string that the user entered.

        This is present only if the “keyword” dimension is in the request.
      example: 123
    types_Count:
      type: integer
      description: |
        An aggregation of mountly keyword search count values.

        The count values indicates the number of unique users that used the keyword in a month.
      example: 123
    Threshold:
      type: integer
      description: |
        An aggregation of monthly threshold values.

        The threshold value indicates that the real count of unique users that used the keyword is below this value.
      example: 123
    types_AnalyticsDate:
      type: string
      description: First day of the aggregation
      example: '2019-11-01'
    types_AnalyticsBucket:
      type: string
      description: Time aggregation requested
      example: month
    PresenceAnalyticsKeywordsResults:
      type: array
      items:
        type: object
        properties:
          keyword:
            "$ref": "#/components/schemas/Keyword"
          count:
            "$ref": "#/components/schemas/types_Count"
          threshold:
            "$ref": "#/components/schemas/Threshold"
          date:
            "$ref": "#/components/schemas/types_AnalyticsDate"
          bucket:
            "$ref": "#/components/schemas/types_AnalyticsBucket"
          business_id:
            "$ref": "#/components/schemas/BusinessID"
    PresenceAnalyticsKeywordsResponse:
      type: object
      properties:
        page:
          "$ref": "#/components/schemas/Page"
        count:
          "$ref": "#/components/schemas/TotalItemsCount"
        max_page:
          "$ref": "#/components/schemas/MaxPage"
        keywords:
          "$ref": "#/components/schemas/PresenceAnalyticsKeywordsResults"
    GroupID:
      description: Business id
      type: integer
      example: 12312
    TagID:
      description: Tag id
      type: integer
      example: '10,12,44'
    ReviewMetricsResponse:
      type: object
      required:
      - dimension
      - metrics
      properties:
        dimension:
          oneOf:
          - type: string
          - type: number
          - type: 'null'
          description: |
            Unique identifier of the dimension:
            - <small>string</small> when `dimensions` is `business`, `user`, `day`, `week`, `month`, `year`.
            - <small>number</small> when `dimensions` is `group` or `tag`.
            - <small>null</small> when `dimensions` is not set.

            When `dimensions` is `day` or `week`, the format is `YYYY-MM-DD`<br>
            When `dimensions` is `month`, the format is `YYYY-MM`<br>
            When `dimensions` is `year`, the format is `YYYY`
          example: 59b2645db12ff60643ef832c
        metrics:
          type: object
          properties:
            average_rating:
              type: number
              format: float
              description: Average rating.
            average_rating_distribution:
              type: object
              description: 'Number of businesses within each pre-defined ratings.

                '
              properties:
                'NULL':
                  type: number
                  format: integer
                  description: Number of businesses without any average rating.
                0-3:
                  type: number
                  format: integer
                  description: Number of businesses whose rating is between 0 and
                    3 (excluded).
                3-3.8:
                  type: number
                  format: integer
                  description: Number of businesses whose rating is between 3 (included)
                    and 3.8 (excluded).
                3.8-4.3:
                  type: number
                  format: integer
                  description: Number of businesses whose rating is between 3.8 (included)
                    and 4.3 (excluded).
                4.3-5:
                  type: number
                  format: integer
                  description: Number of businesses whose rating is between 4.3 (included)
                    and 5.
            rank:
              type: number
              format: integer
              description: |
                Rank of the dimension compared to the others, based on the specified `order_by` parameter.

                **Note:** Two results with the same metrics value will have the same rank.
            rating_distribution:
              type: object
              properties:
                '1':
                  type: number
                  format: integer
                  description: Number of 1 star reviews.
                '2':
                  type: number
                  format: integer
                  description: Number of 2 star reviews.
                '3':
                  type: number
                  format: integer
                  description: Number of 3 star reviews.
                '4':
                  type: number
                  format: integer
                  description: Number of 4 star reviews.
                '5':
                  type: number
                  format: integer
                  description: Number of 5 star reviews.
            reply_means:
              type: object
              properties:
                ai_suggestion:
                  type: number
                  format: integer
                  description: Number of reviews replied using an AI suggestion.
                auto_reply:
                  type: number
                  format: integer
                  description: Number of reviews replied using the auto reply.
                manual:
                  type: number
                  format: integer
                  description: Number of reviews replied manually (without an AI suggestion
                    nor a reply template).
                reply_template:
                  type: number
                  format: integer
                  description: Number of reviews replied using a reply template (excluding
                    auto replies).
                total:
                  type: number
                  format: integer
                  description: Total (ai_suggestion + auto_reply + manual + reply_template).
            reply_time:
              type: object
              properties:
                fast:
                  type: number
                  format: integer
                  description: Number of reviews replied in less than 2 days
                slow:
                  type: number
                  format: integer
                  description: Number of reviews replied in more than 2 days
                not_replied:
                  type: number
                  format: integer
                  description: Number of reviews not replied
                total:
                  type: number
                  format: integer
                  description: Total (fast + slow + not_replied)
            reviews_count:
              type: number
              format: integer
              description: Number of reviews
        dimension_name:
          type: string
          description: |
            Name of the dimension:
            - Business name when `dimensions` is `business`
            - Group name when `dimensions` is `group`
            - Tag name when `dimensions` is `tag`
            - User full name when `dimensions` is `user`
            - Not present in the response otherwise
        dimension_info:
          type: object
          description: |
            Additional info about the dimension.

            Only returned when `dimensions` is `business`.
          properties:
            address_full:
              "$ref": "#/components/schemas/AddressFull"
            city:
              "$ref": "#/components/schemas/BusinessCity"
            code:
              "$ref": "#/components/schemas/BusinessCode"
            zipcode:
              "$ref": "#/components/schemas/BusinessZipcode"
    ReviewsStatisticsResponse:
      type: object
      properties:
        answer_time:
          type: number
          format: float
          description: |
            Average reviews answer time in seconds. Only measured for reviews with a comment from Google
            partner.
            It returns the time between the update date of a review and the creation date of its comments.
          example: 10493.90997409
        average:
          type: number
          format: float
          description: 'Average reviews rating.

            '
          maximum: 5
          minimum: 0
          example: 3.0394
        treated:
          type: number
          format: integer
          description: 'Total number of treated reviews.

            '
          example: 9
        not_treated:
          type: number
          format: integer
          description: 'Total number of non treated reviews.

            '
          example: 10
        answered:
          type: number
          format: integer
          description: 'Total number of answered reviews (reviews with a comment).

            '
          example: 8
        satisfied:
          type: number
          format: integer
          description: |
            Total number of reviews of type *satisfied*.

            *Satisfied* reviews are defined by a rating of 4 or more for google_my_business and tripadvisor or recommended
            for facebook.
          example: 10
        neutral:
          type: number
          format: integer
          description: |
            Total number of reviews of type *neutral*.

            *Neutral* reviews are defined by a rating of 3 for google_my_business and tripadvisor.
          example: 6
        dissatisfied:
          type: number
          format: integer
          description: |
            Total number of reviews of type *dissatisfied*.

            *Dissatisfied* reviews are defined by a rating of 2 or less for google_my_business and tripadvisor
            or not recommended for facebook.
          example: 3
        total:
          type: number
          format: integer
          description: 'Total number of reviews.

            '
          example: 19
    InvitationId:
      description: invitation id
      type: string
      example: d3d8c966-0356-4ec0-baae-13ec3622ebc2
    TargetPhone:
      type: string
      description: the exact phone number we would have sent the invitation(s) to
      example: '0701020304'
    UserStatus:
      description: User status in the application
      type: string
      enum:
      - active
      - invited
      example: active
    UserOrgId:
      description: User organization id
      type: integer
      example: 42
    UserFirstName:
      description: User first name
      type: string
      example: Perceval
    UserLastName:
      description: User last name
      type: string
      example: de Galles
    UserEmail:
      description: User email
      type: string
      format: email
      example: perceval@kaamelott.com
    UserPhone:
      description: User phone number
      type: string
    accesses:
      description: |
        List of (list of Group ID).

        Accesses of the users for the new groups system, only for <code>GROUP_MANAGER</code> users.

        See <a href="#tag/Groups-and-Sections">the Groups and Sections description</a>
      type: array
      items:
        type: array
        items:
          type: integer
      example:
      - - 1
        - 2
      - - 1
        - 3
    UserProvider:
      description: User provider label
      type: string
      example: partoo
    Keywords:
      description: Array of keywords
      type: array
      maxItems: 12
      items:
        type: string
    SsoOnly:
      description: |
        <p>Prevent the user from connecting directly from Partoo connexion page.
        <p>This field is available for users which organization has defined an SSO configuration.
        <p>This field can be edited by a user with role <code>ORG_ADMIN</code> or <code>PROVIDER</code>.
      type: boolean
      default: false
    User:
      description: Partoo App User
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/UserId"
        org_id:
          "$ref": "#/components/schemas/UserOrgId"
        first_name:
          "$ref": "#/components/schemas/UserFirstName"
        last_name:
          "$ref": "#/components/schemas/UserLastName"
        email:
          "$ref": "#/components/schemas/UserEmail"
        lang:
          "$ref": "#/components/schemas/Lang"
        phone:
          "$ref": "#/components/schemas/UserPhone"
        sidebar_products:
          deprecated: true
          description: |
            The products the user has access to.
            Deprecated, please use <code>available_features</code> instead (not returned for this endpoint, but can be found in [operation/getUser](https://developers.partoo.co/rest_api/v2/#operation/getUser) and [operation/getMyUser](https://developers.partoo.co/rest_api/v2/#operation/getMyUser)).
          type: array
          items:
            "$ref": "#/components/schemas/Product"
        business_ids:
          description: |
            Populated only for BUSINESS_MANAGER role.

            List of businesses ids the user can access.

            Note: For a reliable way of getting all the businesses the user can access, use [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses).
          type: array
          items:
            "$ref": "#/components/schemas/BusinessId"
        group_id:
          description: Group id of the user (it affects only the group manager), for
            the old group system
          type: integer
          example: 42
          deprecated: true
        accesses:
          "$ref": "#/components/schemas/accesses"
        role:
          "$ref": "#/components/schemas/Role"
        provider:
          "$ref": "#/components/schemas/UserProvider"
        status:
          "$ref": "#/components/schemas/UserStatus"
        keywords:
          "$ref": "#/components/schemas/Keywords"
        created_at:
          description: Timestamp representing the date the user was created
          type: number
          example: 1615299414
        shadow_user_id:
          description: Used internally at Partoo
          type: string
          example: ''
        sso_only:
          "$ref": "#/components/schemas/SsoOnly"
    SidebarPagesFeatureEnum:
      enum:
      - bulk_modification
      - diffusion
      - feedback_management
      - messages
      - posts
      - presence_analytics
      - review_analytics
      - review_invite
      - review_management
    SidebarPages:
      type: array
      description: 'List of features the user can access from the sidebar.

        '
      items:
        allOf:
        - "$ref": "#/components/schemas/SidebarPagesFeatureEnum"
        type: string
        description: Sidebar page feature name
    UserWithFeatures:
      description: Partoo App User
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/UserId"
        org_id:
          "$ref": "#/components/schemas/UserOrgId"
        first_name:
          "$ref": "#/components/schemas/UserFirstName"
        last_name:
          "$ref": "#/components/schemas/UserLastName"
        email:
          "$ref": "#/components/schemas/UserEmail"
        lang:
          "$ref": "#/components/schemas/Lang"
        phone:
          "$ref": "#/components/schemas/UserPhone"
        sidebar_products:
          deprecated: true
          description: The products the user has access to. Deprecated, please use
            <code>available_features</code> instead.
          type: array
          items:
            "$ref": "#/components/schemas/Product"
        sidebar_pages:
          "$ref": "#/components/schemas/SidebarPages"
        available_features:
          description: The features the user has access to.
          type: array
          items:
            "$ref": "#/components/schemas/Feature"
        business_ids:
          description: |
            Populated only for BUSINESS_MANAGER role.

            List of businesses ids the user can access.

            Note: For a reliable way of getting all the businesses the user can access, use [operation/searchBusinesses](https://developers.partoo.co/rest_api/v2/#operation/searchBusinesses).
          type: array
          items:
            "$ref": "#/components/schemas/BusinessId"
        group_id:
          description: Group id of the user (it affects only the group manager), for
            the old group system
          type: integer
          example: 42
          deprecated: true
        accesses:
          "$ref": "#/components/schemas/accesses"
        role:
          "$ref": "#/components/schemas/Role"
        provider:
          "$ref": "#/components/schemas/UserProvider"
        status:
          "$ref": "#/components/schemas/UserStatus"
        keywords:
          "$ref": "#/components/schemas/Keywords"
        created_at:
          description: Timestamp representing the date the user was created
          type: number
          example: 1615299414
        shadow_user_id:
          description: Used internally at Partoo
          type: string
          example: ''
        sso_only:
          "$ref": "#/components/schemas/SsoOnly"
    RoleWithoutProvider:
      description: User role in the application
      type: string
      enum:
      - ORG_ADMIN
      - GROUP_MANAGER
      - BUSINESS_MANAGER
      - PUBLISHER
      example: BUSINESS_MANAGER
    Password:
      description: |
        The User password. It should comply with the following rules:
        - should be at least 8 characters long
        - should have one upper case letter and one lower case letter
        - should have one special character
      type: string
      format: password
      minLength: 8
    DailyReviewPreferences:
      description: Daily report preferences
      type: object
      properties:
        partners:
          description: list of partners to receive daily reviews notifications from.
          type: array
          items:
            description: The partner to receive daily reviews notification from. "facebook",
              "google_my_business" or "tripadvisor"
            type: string
            enum:
            - facebook
            - google_my_business
            - tripadvisor
          example:
          - facebook
          - google_my_business
          - tripadvisor
        review_type:
          description: Review type. 1 to receive negative reviews, 2 for negative
            and neutral reviews, 3 for all reviews.
          type: integer
          enum:
          - 1
          - 2
          - 3
          example: 2
    UserReports:
      description: Daily, weekly and monthly reports preferences
      type: object
      properties:
        review_management_daily:
          description: The user's preference on receiving a daily review management
            email.
          type: boolean
        review_management_weekly:
          description: The user's preference on receiving a weekly review management
            email.
          type: boolean
        review_management_monthly:
          description: The user's preference on receiving a monthly review management
            email.
          type: boolean
        daily_review_preferences:
          "$ref": "#/components/schemas/DailyReviewPreferences"
    ReceiveNegativeReviewsEmailNotifications:
      description: Receive a notification when there is a negative review.
      type: boolean
    BusinessVideos:
      description: Business videos URLs
      deprecated: true
      type: array
      items:
        type: string
        format: uri
    News:
      deprecated: true
      type: object
      required:
      - title
      - description
      properties:
        description:
          type: string
          description: News description
    BusinessNews:
      deprecated: true
      type: array
      items:
        "$ref": "#/components/schemas/News"
    Business:
      description: Partoo App Business
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/BusinessId"
        created:
          description: Timestamp (in seconds) of the business creation
          type: number
          format: float
          example: 1409925979.5
        modified:
          description: Timestamp (in seconds) of the business last modification. It
            doesn’t take into account changes to the Custom Fields or related objects.
          type: number
          format: float
          example: 1561335111.681374
        code:
          "$ref": "#/components/schemas/BusinessCode"
        status:
          "$ref": "#/components/schemas/BusinessStatus"
        org_id:
          "$ref": "#/components/schemas/BusinessOrgId"
        group_id:
          "$ref": "#/components/schemas/GroupId"
        name:
          "$ref": "#/components/schemas/BusinessName"
        address:
          description: Business address. This fields returns the same value as the
            field `address_full` for historical reasons. You should prefer the use
            `address_full`.
          type: string
        address_full:
          "$ref": "#/components/schemas/AddressFull"
        address2:
          "$ref": "#/components/schemas/Address2"
        city:
          "$ref": "#/components/schemas/BusinessCity"
        zipcode:
          "$ref": "#/components/schemas/BusinessZipcode"
        region:
          "$ref": "#/components/schemas/BusinessRegion"
        country:
          "$ref": "#/components/schemas/BusinessCountry"
        default_lang:
          "$ref": "#/components/schemas/BusinessDefaultLang"
        open_hours:
          "$ref": "#/components/schemas/OpenHours"
        specific_hours:
          "$ref": "#/components/schemas/SpecificHours"
        description_short:
          "$ref": "#/components/schemas/BusinessShortDescription"
        description_long:
          "$ref": "#/components/schemas/BusinessLongDescription"
        website_url:
          "$ref": "#/components/schemas/BusinessWebsite"
        facebook_url:
          "$ref": "#/components/schemas/BusinessFacebookPage"
        twitter_url:
          "$ref": "#/components/schemas/BusinessTwitter"
        google_location_id:
          description: Id of Google Location to which the business is linked
          type: string
        facebook_page_id:
          description: Id of Facebook Location to which the business is linked
          type: string
        national_identification_number:
          "$ref": "#/components/schemas/BusinessNationalIdentificationNumber"
        logo_url:
          description: Business LOGO URL
          type: string
          format: uri
        contacts:
          "$ref": "#/components/schemas/BusinessContacts"
        photos:
          "$ref": "#/components/schemas/Photos"
        lat:
          "$ref": "#/components/schemas/Latitude"
        long:
          "$ref": "#/components/schemas/Longitude"
        subscriptions:
          "$ref": "#/components/schemas/Subscriptions"
        features:
          "$ref": "#/components/schemas/Features"
        videos:
          "$ref": "#/components/schemas/BusinessVideos"
        siret:
          deprecated: true
          description: Business SIRET (for french businesses)
          type: string
        completion_rate:
          "$ref": "#/components/schemas/BusinessCompletionRate"
        news:
          "$ref": "#/components/schemas/BusinessNews"
        promos:
          "$ref": "#/components/schemas/BusinessPromos"
    feedback_form:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the form
          example: 674d791c13c9d976e20001b1
        org_id:
          type: integer
          description: The organization ID that the form is for
          example: 42
        email_reply_source:
          type:
          - string
          - 'null'
          description: The source email to use when replying to a feedback
          example: noreply@example.com
        email_reply_subject:
          type:
          - string
          - 'null'
          description: The subject of the email used when replying to a feedback
          example: About your feedback
        email_reply_to_business:
          type: boolean
          default: false
          description: |
            Whether to use the business email address when the feedback
            respondent wants to reply to your reply

            Defaults to false, which means the respondent reply will be sent to the email_reply_source
        email_reply_expeditor_name:
          type:
          - string
          - 'null'
          description: |
            Name to use as the expeditor when replying to a feedback

            This is the name the user sees in his email inbox (which is by default the email_reply_source)
          example: MyCompany
        expiration_interval_seconds:
          type: integer
          default: 1209600
          description: |
            When a date parameter is set on the link sent to the customer,
            this will be used to disable answers to the feedback form after that many seconds

            Does nothing when the date parameter is not used on the link sent to the customer

            Defaults to 2 weeks

            Example: In the link you sent the customer, you set the date parameter to 2025-01-01T00:00:00Z.
            By default, the customer will no longer be able to answer the survey after 2025-01-15T00:00:00Z.
        display_name:
          type: string
          description: Name of your form
          example: Global Satisfaction
    display_name:
      type: string
      description: Name of your form
      example: Global Satisfaction
    feedback_result-state:
      type: string
      enum:
      - treated
      - not_treated
      description: State of the feedback result
    nps:
      type: integer
      minimum: 0
      maximum: 10
      description: NPS of the feedback result
      example: 9
    feedback_form-id:
      type: string
      description: The unique identifier of the form
      example: 674d791c13c9d976e20001b1
    properties-id:
      type: string
      description: Unique identifier of the form
      example: 674d791c13c9d976e20001b1
    feedback_form_field:
      type: object
      properties:
        id:
          type: string
          description: 'Unique identifier of the field

            '
          example: 674d7aaa13e599deae0001b2
        field_type:
          type: string
          enum:
          - NPS
          - FREE_FORM
          - CSAT
          - MULTIPLE_CHOICE
          example: CSAT
        field_label:
          type: string
          description: 'The label of the field (i.e. the question that was answered)

            '
          example: How would you rate our service?
        field_choices:
          type:
          - array
          - 'null'
          items:
            type: object
            properties:
              id:
                type: string
              text:
                type: string
              isOtherOption:
                type: boolean
                description: Whether this is the "Other" option
                example: false
          description: |
            All choices that were ever available for this field

            Only set for MULTIPLE_CHOICE fields
          example: 
    feedback_result_field:
      type: object
      properties:
        rating:
          type:
          - integer
          - 'null'
          description: |
            Rating assigned by the respondent, if any

            Is set for CSAT and NPS fields
          example: 4
        content:
          type:
          - string
          - 'null'
          description: |
            Text content written by the respondent, if any

            Is set for FREE_FORM fields
          example: 
        choices:
          type:
          - array
          - 'null'
          items:
            type: string
          description: |
            Choices selected by the respondent

            Is set for MULTIPLE_CHOICE fields
          example: 
        feedback_form_field:
          "$ref": "#/components/schemas/feedback_form_field"
    feedback_result_reply:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the reply
          example: 1
        created:
          type: string
          format: datetime
          description: Date the reply was created
          example: '2024-11-15T10:00:15+00:00'
        author_name:
          type: string
          description: Author of the reply
          example: Jane Doe
        content:
          type: string
          description: Content of the reply
          example: Thank you for your feedback
        feedback_result_id:
          type: integer
          description: Identifier of the feedback result
          example: 1
        user_id:
          allOf:
          - "$ref": "#/components/schemas/UserId"
        is_reply_suggestion:
          type: boolean
          description: Whether the reply was created using an AI suggestion
          example: false
    feedback_result:
      type: object
      properties:
        id:
          type: integer
          example: 1
        business_id:
          allOf:
          - "$ref": "#/components/schemas/BusinessId"
        firstname:
          type: string
          description: Firstname of the respondent
          example: John
        lastname:
          type: string
          description: Lastname of the respondent
          example: Doe
        nps:
          allOf:
          - "$ref": "#/components/schemas/nps"
        content:
          type: string
          description: Content of the FREE_FORM field
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse
            vulputate efficitur augue, ac auctor nibh scelerisque at. Nulla facilisi.
            Maecenas luctus efficitur sem sit amet ullamcorper. Donec tempor augue
            lorem, vitae convallis sapien aliquam id. Maecenas eu odio non est pretium
            eleifend. Nullam at odio eu ligula ultrices tincidunt. Nulla euismod aliquet
            ex eget efficitur.
        state:
          allOf:
          - "$ref": "#/components/schemas/feedback_result-state"
        optin:
          type: boolean
          description: Whether the respondent accepts to be contacted
          enum:
          - true
          - false
        created:
          type: string
          format: datetime
          description: Date the feedback result was created on
          example: '2024-10-25T15:12:11+00:00'
        feedback_form:
          type: object
          properties:
            id:
              allOf:
              - "$ref": "#/components/schemas/properties-id"
            display_name:
              allOf:
              - "$ref": "#/components/schemas/display_name"
          description: Information about the corresponding feedback form
        feedback_result_fields:
          type: array
          items:
            "$ref": "#/components/schemas/feedback_result_field"
          description: The various fields of the feedback result
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/feedback_result_reply"
          description: The replies of the feedback result
        extra:
          type: object
          description: The additional hidden fields (other than `firstname`, `lastname`,
            `store_code`, `email` and `date`)
          example:
            extra_field: value
            extra_field_2: value_2
    url:
      type: string
      description: The URL receiving the webhook's data.
      example: https://example.com/webhook
    event_type:
      type: string
      description: The webhook event type.
      enum:
      - business_created
      - business_updated
      - business_deleted
      - message_updated
      - message_created
      - lead_received
      example: business_created
    WebhookItem:
      type: object
      required:
      - id
      - url
      - event_type
      - created_at
      - updated_at
      - org_id
      properties:
        id:
          type: integer
          description: The identifier for the webhook configuration.
          example: 1
        url:
          "$ref": "#/components/schemas/url"
        event_type:
          "$ref": "#/components/schemas/event_type"
        created_at:
          type: string
          description: An ISO 8601 date-time string representing the webhook creation
            date.
          example: '2024-11-27T16:10:44.929678Z'
        updated_at:
          type: string
          description: An ISO 8601 date-time string representing the webhook last
            update date.
          example: '2024-11-27T16:10:44.929678Z'
        org_id:
          type: integer
          description: The organization identifier for the webhook configuration.
          example: 1
    webhook_url:
      type: string
      description: The URL receiving the webhook's data. Only HTTPS URLs are supported.
      example: https://example.com/webhook
    webhook_event_type:
      type: string
      description: The webhook event type.
      example: business_created
    CreateWebhookPayloadItem:
      type: object
      required:
      - url
      - event_type
      properties:
        url:
          "$ref": "#/components/schemas/webhook_url"
        event_type:
          "$ref": "#/components/schemas/webhook_event_type"
    CreateWebhooksPayload:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/CreateWebhookPayloadItem"
          description: The list of webhook configurations to create.
    WebhookDeleteSuccess:
      type: object
      required:
      - status
      properties:
        status:
          type: string
          description: The status of the webhook deletion.
          example: success
    UpdateWebhookPayload:
      type: object
      required:
      - url
      properties:
        url:
          "$ref": "#/components/schemas/webhook_url"
    tryout_result_status:
      type: string
      description: Result status of the webhook tryout.
      enum:
      - success
      - error
      example: success
    WebhookTryoutResult:
      type: object
      properties:
        payload:
          type: object
          description: The webhook sent payload. Varies depending on the event type.
        event_type:
          "$ref": "#/components/schemas/event_type"
        url:
          "$ref": "#/components/schemas/url"
        status:
          "$ref": "#/components/schemas/tryout_result_status"
    WebhookEventTypes:
      type: array
      items:
        "$ref": "#/components/schemas/event_type"
      example:
      - business_created
      - business_updated
      - business_deleted
      - message_updated
      - message_created
      - lead_received
    WebhookConversation:
      type: object
      title: Conversation
      properties:
        id:
          type: integer
        consumer_img:
          type:
          - string
          - 'null'
          format: url
          description: The url of the consumer's profile picture
          example: https://www.example.com/profile-picture.jpg
        consumer_name:
          type:
          - string
          - 'null'
          description: |
            The name of the consumer, can be empty. The format may differ depending
            on the platform of contact (ex: "John Doe", "John Doe (@johndoe)",
            "@johndoe", "", ...).
          example: John Doe
        business:
          type: object
          properties:
            id:
              description: The id of the business
              type: integer
        messaging_partner:
          "$ref": "#/components/schemas/MessagingPartner"
    MessageCreatedEvent:
      properties:
        message:
          allOf:
          - "$ref": "#/components/schemas/Message"
          - type: object
        conversation:
          allOf:
          - "$ref": "#/components/schemas/WebhookConversation"
          - type: object
        org_id:
          type: integer
          description: The id of the organization
    MessageReceivedEvent:
      allOf:
      - "$ref": "#/components/schemas/Message"
      - type: object
        properties:
          message_id:
            type: integer
            deprecated: true
            description: |
              The id of the message.

              Deprecated, use `id` instead.
          org_id:
            type: integer
            description: The id of the organization
          business_id:
            type: string
            description: The id of the business
          received_at:
            deprecated: true
            type: string
            description: |
              The date at which the message was received
              format (ex: "2023-01-31T16:22:17.327878+00:00").

              Deprecated, use `date` instead.
            example: '2023-01-31T16:22:17.327878+00:00'
          consumer_img:
            type:
            - string
            - 'null'
            format: url
            description: The url of the consumer's profile picture
            example: https://www.example.com/profile-picture.jpg
          consumer_name:
            type:
            - string
            - 'null'
            description: |
              The name of the consumer, can be empty. The format may differ depending
              on the platform of contact (ex: "John Doe", "John Doe (@johndoe)",
              "@johndoe", "", ...).
            example: John Doe
          messaging_partner:
            "$ref": "#/components/schemas/MessagingPartner"
          event_type:
            type: string
            enum:
            - message_received
    LeadFieldType:
      type: string
      description: The lead field type. `OPT-IN` type is a `BOOLEAN` type
      enum:
      - TEXT
      - NUMBER
      - EMAIL
      - PHONE_NUMBER
      - BOOLEAN
      - OPT_IN
      example: TEXT
    LeadItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          "$ref": "#/components/schemas/LeadFieldType"
        name:
          type: string
          description: name of the field collected
          example: Your firstname
        value:
          type: string
          description: value of the field corresponding to the lead
          example: John
    LeadWebhook:
      type: object
      properties:
        id:
          type: integer
          description: The identifier for the webhook configuration.
          example: 1
        source:
          type: string
          description: The source of the lead, how we retrieved it.
          example: chatbot
        created_at:
          type: string
          description: An ISO 8601 date-time string representing the webhook creation
            date.
          example: '2024-11-27T16:10:44.929678Z'
        chatbot_id:
          type: integer
          description: The identifier of the chatbot that collected the lead
          example: 1
        chatbot_name:
          type: string
          description: Name of the chatbot that collected the lead
          example: Jim
        business_name:
          type: string
          description: Name of the business related to the lead
          example: Partoo
        store_code:
          type: string
          description: Store code of the business related to the lead
          example: Partoo123
        values:
          type: array
          items:
            "$ref": "#/components/schemas/LeadItem"
  responses:
    '400':
      description: Your request is incorrect
      content:
        application/json:
          schema:
            description: 'Error that occcurs when your request is incorrect

              '
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  json:
                    type: object
    '401':
      description: You are not authenticated
      content:
        application/json:
          schema:
            description: Error that occurs when you are not authenticated
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  authentication:
                    type: string
                    default: User not authenticated
    '403':
      description: 'You are not allowed to perform this action

        '
      content:
        application/json:
          schema:
            description: 'Error that occurs when you are authenticated but you are
              trying to perform an action you are not allowed to perform

              '
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  authorization:
                    type: string
                    default: Operation not allowed
    '404':
      description: Resource does not exist
      content:
        application/json:
          schema:
            description: Error that occcurs when you are trying to reach a resource
              that does not exist
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  json:
                    type: string
                    default: Resource not found
  parameters:
    query_filter_by_fuzzy_query_on_business:
      in: query
      name: query
      schema:
        type: string
      required: false
      description: Parameter to fuzzy search businesses on city, zipcode and name
    query_business__in:
      in: query
      name: business__in
      description: Filter by business ids
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/BusinessId"
    query_filter_by_org_id:
      in: query
      name: org_id
      schema:
        type: integer
      required: false
      description: Filter by organization id
    query_filter_by_groups:
      in: query
      name: groups
      schema:
        type: array
        items:
          type: integer
      required: false
      description: |
        Filter by groups, using the access logic with the and/or depending on the groups sections

        See <a href="#tag/Groups-and-Sections">the Groups and Sections description</a>
      example: '1,2,3'
    query_filter_by_country:
      in: query
      name: country
      schema:
        type: string
      required: false
      description: Filter by country - ISO 3166 alpha2 code (i.e. “FR” for France)
    query_filter_by_business_name:
      in: query
      name: name
      schema:
        type: string
      required: false
      description: Filter by name
    query_filter_by_business_status:
      in: query
      name: status
      schema:
        "$ref": "#/components/schemas/BusinessStatusFilter"
    query_filter_by_zipcode:
      in: query
      name: zipcode
      schema:
        type: string
      required: false
      description: Filter by zipcode
    query_filter_by_city:
      in: query
      name: city
      schema:
        type: string
      required: false
      description: Filter by city
    query_filter_by_business_code:
      in: query
      name: code
      schema:
        type: string
      required: false
      description: Filter by code
    query_filter_by_business_modification_timestamp:
      in: query
      name: modified__gte
      deprecated: false
      schema:
        type: number
      required: false
      description: Filter by modified attribute (modified >= modified_gte)
    query_filter_by_business_features__in:
      in: query
      name: features__in
      schema:
        allOf:
        - "$ref": "#/components/schemas/FeatureEnum"
        description: 'Filter businesses that have all the features provided, separated
          by commas.

          '
        type: string
        example: diffusion,review_management
    query_filter_by_business_features__notin:
      in: query
      name: features__notin
      schema:
        allOf:
        - "$ref": "#/components/schemas/FeatureEnum"
        description: 'Filter businesses that *do not* have all the features provided,
          separated by commas.

          '
        type: string
        example: diffusion,review_management
    query_filter_by_business_subscription_to_review_management:
      in: query
      deprecated: false
      name: subscribed_to_rm
      schema:
        type: string
        enum:
        - 'True'
        - 'False'
      required: false
      description: |
        Filter by current subscription to `review_management`.
        Equivalent to using `features__in=review_management`.
    query_filter_by_business_subscription_to_presence_management:
      in: query
      deprecated: false
      name: subscribed_to_pm
      schema:
        type: string
        enum:
        - 'True'
        - 'False'
      required: false
      description: |
        Filter by current subscription to `presence_management`.
        Equivalent to using `features__in=diffusion`.
    query_filter_by_business_subscription_to_review_booster:
      in: query
      deprecated: false
      name: subscribed_to_rb
      schema:
        type: string
        enum:
        - 'True'
        - 'False'
      required: false
      description: |
        Filter by current subscription to `review_booster`.
        Equivalent to using `features__in=review_invite`.
    query_filter_by_business_subscription_to_messages:
      in: query
      deprecated: false
      name: subscribed_to_bm
      schema:
        type: string
        enum:
        - 'True'
        - 'False'
      required: false
      description: |
        Filter by current subscription to `messages`
        Equivalent to using `features__in=messages`
    query_filter_by_business_completion_rate__gte:
      in: query
      name: completion_rate__gte
      deprecated: false
      schema:
        type: number
      required: false
      description: Filter by completion_rate attribute (completion_rate >= completion_rate__gte)
    query_filter_by_business_completion_rate__lte:
      in: query
      name: completion_rate__lte
      deprecated: false
      schema:
        type: number
      required: false
      description: Filter by completion_rate attribute (completion_rate <= completion_rate__lte)
    query_filter_by_business_completion_rate:
      in: query
      name: completion_rate
      deprecated: false
      schema:
        type: string
        enum:
        - low
        - mid
        - high
        example: low,mid
      required: false
      description: Filter by completion_rate attribute. You can separate the values
        by a comma, as done in the example.
    query_filter_by_business_promo:
      in: query
      name: has_promo
      deprecated: true
      schema:
        type: string
        enum:
        - 'True'
        - 'False'
      required: false
      description: Retrieve only businesses having promotional offers
    query_page_up_to_100:
      in: query
      name: page
      schema:
        type: integer
        default: 1
      description: Page number, Starts at 1. From 1 to 100 results per page (see `per_page`)
    query_per_page_1_100:
      in: query
      name: per_page
      schema:
        type: integer
        default: 30
        minimum: 1
        maximum: 100
      description: Number of items to return per page. Currently limited to 100.
    business_id:
      in: path
      name: business_id
      required: true
      schema:
        type: string
      description: |
        Business id.<br/>
        It may be replaced by `c-{code}` where code is the store code, which should be unique per organization. This can be used only for `ORG_ADMIN`, `GROUP_MANAGER` and `BUSINESS_MANAGER` users.
    category_name_optional:
      in: query
      name: category_name
      required: false
      schema:
        type: string
        example: gcid:restaurant
      description: Category for which availabe attributes will be fetched.
    country:
      in: query
      name: country
      required: true
      schema:
        type: string
      description: '<p>Country for which available attributes will be fetched - use
        ISO 3166 alpha2 code ("FR", "EN", "IT").

        '
      example: FR
    category_more_hours_business:
      in: query
      name: category
      required: false
      schema:
        type: string
        example: gcid:restaurant
      description: If supplied, will only return more hours that are available for
        the specified business category. If not supplied, the business' main category
        will be used.
    country_more_hours_business:
      in: query
      name: country
      required: false
      schema:
        type: string
      description: 'If supplied, will only return more hours that are available in
        the specified country. - use ISO 3166 alpha2 code ("FR", "EN", "IT"). If not
        supplied, the country from the business'' address will be used.

        '
      example: FR
    path_service_id:
      in: path
      name: service_id
      required: true
      schema:
        type: string
      description: <p> Id of the service (For creation you can get this id by calling
        <a href="#operation/getServicesSuggestions">get services suggestions endpoint</a>)</p>
    path_org_id:
      in: path
      name: org_id
      required: true
      schema:
        type: integer
      description: Organization id
    query_category_country:
      in: query
      name: country
      required: false
      description: |
        Filters categories available for businesses in given country.

        If no country is given, then the endpoint returns the list of all existing available categories.

        Use country ISO 3166 alpha2 code.
      schema:
        type: string
      example: FR
    query_category_lang:
      in: query
      name: lang
      required: false
      schema:
        "$ref": "#/components/schemas/Lang"
      description: 'Language to get the category name. If not given, the user''s language
        is used.

        '
    query_category_state:
      in: query
      name: state
      required: false
      schema:
        type: string
        enum:
        - OK
        - DEPRECATED
    query_category_block_push_long:
      in: query
      name: block_push_long_description_on_gmb
      description: Filter on `block_push_long_description_on_gmb` param (boolean indicating
        if the business long description can be pushed to Google when the business
        belongs to this category)
      required: false
      schema:
        type: boolean
    query_category_search_query:
      in: query
      name: search_query
      description: Fuzzy search on gmb_id and names translations
      required: false
      schema:
        type: string
    query_category_order_by:
      in: query
      name: order_by
      description: 'Order results by colum. Add "-" before for ordering by descending
        order.

        '
      required: false
      schema:
        type: string
        enum:
        - gmb_id
        - "-gmb_id"
    query_category_live__isnull:
      in: query
      name: live__isnull
      description: |
        Filter on `live_id` parameter value

        True: Recover categories which `live_id` is null

        False: Recover categories which `live_id` is not null

        Null: Do not filter on `live_id`
      schema:
        type: boolean
    query_page:
      in: query
      name: page
      schema:
        type: integer
        default: 0
      description: Page number. 30 results per page
    query_category_with_names_categories:
      in: query
      name: with_names
      description: |
        Returns an object representing the list of translations in the available languages for the requested category. See example on the right.

        If `with_names` is true, the translations will appear in the field __names__
      required: false
      schema:
        type: boolean
        default: false
    query_category_with_countries:
      in: query
      name: with_countries
      description: |
        Returns an array of strings representing the list of country codes in which the requested category is available.

        If `with_countries` is true, the country list will appear in the field __countries__
      required: false
      schema:
        type: boolean
        default: false
    query_category_return_live:
      in: query
      name: return_live
      description: Return the corresponding live category instead of the requested
        category
      required: false
      schema:
        type: boolean
        default: false
    query_category_with_names:
      in: query
      name: with_names
      description: |
        Returns an object representing the list of translations in the available languages for the requested category. See example on the right.

        If `with_names` is true, the translations will appear in the field __names__
      required: false
      schema:
        type: boolean
        default: false
    PerPage:
      in: query
      name: per_page
      schema:
        type: integer
        default: 30
        minimum: 1
        maximum: 100
      description: Number of items to return per page.
    Cursor:
      in: query
      name: cursor
      schema:
        type: string
      description: |
        The cursor identifiying the page of data to fetch.
        If no cursor is provided, the query will return the first page of data.
        A cursor for the next page of data is provided in the response of this
        request.
    path_template_id:
      in: path
      name: template_id
      required: true
      schema:
        type: number
      description: Template id
    Page:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Current page number.
    custom_field_id:
      in: path
      name: custom_field_id
      required: true
      schema:
        "$ref": "#/components/schemas/CustomFieldId"
    custom_field_force_update:
      in: query
      name: force
      required: false
      schema:
        "$ref": "#/components/schemas/CustomFieldForceUpdate"
    query_org_id:
      in: query
      name: org_id
      schema:
        type: integer
      description: Organization id
    section_id:
      in: path
      name: section_id
      required: true
      schema:
        "$ref": "#/components/schemas/CustomFieldSectionId"
    category_name:
      in: query
      name: category_name
      required: true
      schema:
        type: string
        example: gcid:restaurant
      description: Category for which availabe attributes will be fetched.
    lang:
      in: query
      name: lang
      required: false
      schema:
        type: string
        enum:
        - fr
        - es
        - it
        - en
        - de
        - pt
        - pt-BR
      description: "<p> Language in which the attributes name and groups name will
        be translated. <p> If language is not specified, by default we take the language
        of the user.\n"
    category_more_hours_list:
      in: query
      name: category
      required: true
      schema:
        type: string
        example: gcid:restaurant
      description: Category for which availabe More Hour IDs will be fetched.
    country_more_hours_list:
      in: query
      name: country
      required: true
      schema:
        type: string
      description: '<p>Country for which available More Hour IDs will be fetched -
        use ISO 3166 alpha2 code ("FR", "EN", "IT").

        '
      example: FR
    lang_more_hours:
      in: query
      name: lang
      required: false
      schema:
        type: string
        enum:
        - fr
        - es
        - it
        - en
        - de
        - pt
        - pt-BR
      description: "<p> Language in which the More Hours names will be translated.
        <p> If language is not specified, by default we take the language of the user.\n"
    google_location_id:
      in: path
      name: google_location_id
      required: true
      schema:
        type: string
      description: Google location unique id on Partoo
    path_section_id:
      in: path
      name: section_id
      required: true
      schema:
        type: string
      description: Section id
    path_group_id:
      in: path
      name: group_id
      required: true
      schema:
        type: integer
      description: Group id
    organization_force_delete:
      in: query
      name: force
      required: false
      schema:
        "$ref": "#/components/schemas/OrganizationForceDeletion"
    query_post_start_datetime:
      in: query
      name: start_datetime
      schema:
        type: string
        example: '2020-11-06T23:59:59'
      required: false
      description: |
        Filters Posts based on their start datetime.

        The start datetime represents the moment on which a Post of type <b>event/offer</b>
        will become available. In case of Posts of type <b>news</b>, the `start_datetime`
        it will be compare to the creation date of the Post, as the field is not
        present in this context.
    query_post_end_datetime:
      in: query
      name: end_datetime
      schema:
        type: string
        example: '2020-11-06T23:59:59'
      required: false
      description: |
        Filter Posts based on their end datetime.

        The end datetime represents the date on which the Post of type <b>event/offer</b>
        will expire. In case of Posts of type <b>news</b>, the `end_datetime`
        it will be compare to exactly one week after the creation date of the Post,
        as the field is not present in this context.
    query_post_summary:
      in: query
      name: summary
      schema:
        type: string
      required: false
      description: |
        Filter Posts based on their description.

        It returns Posts that contain in their description the given string.
        The text does not have to match perfectly.
    query_post_state_in:
      in: query
      name: state__in
      schema:
        type: string
        enum:
        - live
        - to_configure
        - pending
        - scheduled
        - error
        - expired
        - to_validate
      required: false
      description: Filter Posts based on its state.
    query_post_topic_type:
      in: query
      name: topic_type
      schema:
        type: string
        enum:
        - standard
        - event
        - offer
        - alert
      required: false
      description: Filter Posts based on its type.
    query_post_topic_type_in:
      in: query
      name: topic_type__in
      schema:
        type: string
        enum:
        - standard
        - event
        - offer
        - alert
      required: false
      description: Filter Posts based on a list of different types.
    path_post_id:
      in: path
      name: post_id
      required: true
      schema:
        type: number
      description: Post id
    query_place_action_link_lang:
      in: query
      name: lang
      required: false
      schema:
        "$ref": "#/components/schemas/Lang"
      description: Preferred language for place action links. If no language is provided,
        the user's default language will be used. If the user's default language is
        unavailable, the country's primary language will be used.
    query_business__notin:
      in: query
      name: business__notin
      description: Excludes from the request all businesses provided
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/BusinessId"
    query_content__isnull:
      in: query
      name: content__isnull
      description: |
        Filter by review's content

        If set to `true`, the endpoint will return all the reviews without content.

        **Note:** This is the content of the review and not the content of the reply.
      schema:
        type: string
        enum:
        - 'true'
        - 'false'
        example: false
    query_partner__in:
      in: query
      name: partner__in
      description: Filter by publisher
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/ReviewPublisherLabel"
        example: google_my_business,facebook
    query_gmb_rating__in:
      in: query
      name: gmb_rating__in
      description: 'Filter only by Google ratings

        '
      schema:
        type: array
        items:
          type: number
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        example: '4,5'
    query_tripadvisor_rating__in:
      in: query
      name: tripadvisor_rating__in
      description: 'Filter only by Tripadvisor ratings

        '
      schema:
        type: array
        items:
          type: number
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        example: '1,2'
    query_recommended__in:
      in: query
      name: recommended__in
      description: 'Filter only by Facebook recommendation

        '
      schema:
        type: array
        items:
          type: boolean
          enum:
          - true
          - false
        example: false
    query_review_update_date__gte:
      in: query
      name: update_date__gte
      description: |
        Filter by `update_date`

        Return all the reviews whose `update_date` >= `given_date`.

        For example : `update_date__gte=2019-01-01T00:00:00` will return all reviews from the first January of 2019
        until today.

        **Note** : The update dates are stored in UTC.
      schema:
        type: string
        format: datetime
        example: '2017-08-01T00:00:00'
    query_review_update_date__lte:
      in: query
      name: update_date__lte
      description: |
        Filter by `update_date`

        Return all the reviews whose `update_date` <= `given_date`.

        For example : `update_date__lte=2020-01-01T00:00:00` will return all reviews from the date of the first review
        until the first january of 2020.

        **Note** : The update dates are stored in UTC.
      schema:
        type: string
        format: datetime
        example: '2017-08-02T00:00:00'
    query_review_state:
      in: query
      name: state__in
      description: Filter by state
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/ReviewState"
        example: treated,not_treated
    query_tag_label_in:
      in: query
      name: tag_label__in
      description: |
        Filter by Tag label

        Will partially match given labels (ie `foo` will match reviews with tag `food`)
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/TagLabel"
        example: food,drink
    query_review_without_tag:
      in: query
      name: without_tag
      description: 'Filter only reviews without tags

        '
      schema:
        type: boolean
        example: true
    query_keywords:
      in: query
      name: keywords
      description: |
        Filter by keywords

        Return all the reviews with not-nullable content, that contain the provided list of keywords.

        **Note:** This is the content of the review and not the content of the reply.

        The filter accepts both simple and composed words.
        To indicate it's a composed keyword, add the `+` as separator.
        For example:

         `keywords=bonjour` returns all reviews containing the keyword `bonjour`

         `keywords=good+service` returns all reviews containing the
         combined keyword **good service**, without splitting the keyword.
         No reviews containing just **good** or just **service** will be returned.

         `keywords=bonjour,good+service`: returns all reviews that contain either just **bonjour**,
         either just **good service** or both keywords at the same time.
      schema:
        type: array
        items:
          type: string
        example: bonjour,good+service
    query_order_by:
      in: query
      name: order_by
      schema:
        type: string
        enum:
        - update_date
        - "-update_date"
        example: update_date
      description: 'A `-` sign in front of the value indicates a descending order.

        '
    query_positive_template:
      in: query
      name: positive
      description: Filter on templates made to answer positive reviews (ex from 4
        to 5 stars on gmb).
      required: false
      schema:
        type: boolean
    query_neutral_template:
      in: query
      name: neutral
      description: Filter on templates made to answer neutral reviews (ex 3 stars
        on gmb).
      required: false
      schema:
        type: boolean
    query_negative_template:
      in: query
      name: negative
      description: Filter on templates made to answer negative reviews (ex from 1
        to 2 stars on gmb).
      required: false
      schema:
        type: boolean
    query_language__in:
      in: query
      name: language__in
      description: Filter on templates in the specified languages.
      required: false
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/Lang"
        example: fr,it
    query_title_query:
      in: query
      name: title_query
      schema:
        type: string
      required: false
      description: Filter on templates based on their title
    query_text_query:
      in: query
      name: text_query
      schema:
        type: string
      required: false
      description: Filter on templates based on their text
    query_metrics:
      in: query
      name: metrics
      required: true
      description: |
        List of analytics to return.
         At least one in that list.
      schema:
        type: string
        enum:
        - business_impressions_desktop_maps
        - business_impressions_desktop_search
        - business_impressions_mobile_maps
        - business_impressions_mobile_search
        - business_direction_requests
        - call_clicks
        - website_clicks
    query_dimensions:
      in: query
      name: dimensions
      required: false
      description: |
        How the returned data will be aggregated.
        At most 'business' and one time dimensions of the list.
        If no dimension is given, the request will return the sum of each metric for all requested days and businesses.
      schema:
        type: string
        enum:
        - business
        - day
        - week
        - month
        - year
    parameters_query_order_by:
      in: query
      name: order_by
      required: false
      description: |
        Where the object is either a dimension or a metric
         and is used in the request. At most one in the list.
         - before a field to order_by DESC, nothing for ASC
      schema:
        type: string
        enum:
        - "<object>"
        - "-<object>"
        example: order_by=-call_clicks
    parameters_query_business__in:
      in: query
      name: business__in
      description: Filter by business ids
      required: false
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/BusinessID"
    parameters_query_business__notin:
      in: query
      name: business__notin
      required: false
      description: |
        Filter by all allowed businesses except
         the ones given in `business__notin`
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/BusinessID"
    query_city:
      in: query
      name: city
      required: false
      description: Filter by city
      schema:
        type: string
    query_query:
      in: query
      name: query
      required: false
      description: |
        Parameter to fuzzy search businesses on city,
         zipcode and name
      schema:
        type: string
    query_filter_date__gte:
      in: query
      name: filter_date__gte
      required: false
      description: |
        Filter by `date`

        Return all the analytics whose `date` >= `given_date`.
      schema:
        type: string
        format: datetime
    query_filter_date__lte:
      in: query
      name: filter_date__lte
      description: |
        Filter by `date`.

        Return all the analytics whose `filter_date` <= `given_date`.
      schema:
        type: string
        format: datetime
    parameters_query_page:
      in: query
      name: page
      required: false
      description: |
        The page number you want to request.

        The value defaults to 1, when it is not included.
      schema:
        type: integer
        minimum: 1
    query_per_page:
      in: query
      name: per_page
      required: false
      description: |
        The maximum number of result items to return in a page.

        The value defaults to 500, when it is not included.
      schema:
        type: integer
        maximum: 500
    parameters_query_metrics:
      in: query
      name: metrics
      required: true
      description: |
        List of analytics to return.
         At least one in that list.
      schema:
        type: string
        enum:
        - count
        - threshold
        example: metrics=count,threshold
    parameters_query_dimensions:
      in: query
      name: dimensions
      required: false
      description: |
        How the returned data will be aggregated.
        At most 'business' and one time dimensions of the list.
        If no dimension is given, the request will return the sum of each metric for all requested days and businesses.
      schema:
        type: string
        enum:
        - business
        - keyword
        - month
        - year
        example: dimensions=keyword,month
    parameters_query_order_by-2:
      in: query
      name: order_by
      required: false
      description: |
        Where the object is either a dimension or a metric
         and is used in the request. At most one in the list.
         - before a field to order_by DESC, nothing for ASC
      schema:
        type: string
        enum:
        - "<object>"
        - "-<object>"
        example: order_by=-count
    parameters_query_filter_date__gte:
      in: query
      name: filter_date__gte
      required: false
      description: |
        Filter by date.

        Return all the analytics whose `date >= given_date`.
      schema:
        type: string
        format: datetime
    parameters_query_filter_date__lte:
      in: query
      name: filter_date__lte
      required: false
      description: |
        Filter by date.

        Return all the analytics whose `date <= give_date`.
      schema:
        type: string
        format: datetime
    parameters_query_metrics-2:
      in: query
      name: metrics
      required: true
      description: |
        List of analytics to return.
         At least one in that list.
      schema:
        type: string
        enum:
        - average_rating
        - rating_distribution
        - reviews_count
        - reply_time
        - reply_means
        - average_rating_distribution
        - rank
    parameters_query_dimensions-2:
      in: query
      name: dimensions
      required: false
      description: |
        How the returned data will be aggregated.
        If no dimension is given, the request will return the sum of each metric for all requested days and businesses.
      schema:
        type: string
        enum:
        - day
        - week
        - month
        - year
        - business
        - group
        - user
        - tag
    parameters_query_order_by-3:
      in: query
      name: order_by
      required: false
      description: |
        See above for the list of all orders available. At most one in the list.
         - `-` before a field to order_by DESC, nothing for ASC
      schema:
        type: string
        example: "-average_rating"
    query_groups:
      in: query
      name: groups
      description: Filter by groups ids
      required: false
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/GroupID"
    query_tags:
      in: query
      name: tags
      description: 'Restrict the data returned on reviews that have been assigned
        the specified tags.

        '
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/TagID"
    query_update_date__gte:
      in: query
      name: update_date__gte
      required: false
      description: 'Restrict the data returned on reviews which `update_date` are
        after the given date.

        '
      schema:
        type: string
        format: datetime
    query_update_date__lte:
      in: query
      name: update_date__lte
      description: 'Restrict the data returned on reviews which `update_date` are
        before the given date.

        '
      schema:
        type: string
        format: datetime
    parameters_query_page-2:
      in: query
      name: page
      required: false
      description: 'The page number you want to request.

        '
      schema:
        type: integer
        minimum: 1
        default: 1
    parameters_query_per_page:
      in: query
      name: per_page
      required: false
      description: 'The maximum number of result items to return in a page.

        '
      schema:
        type: integer
        default: 30
    query_review_business__in:
      in: query
      name: business__in
      description: |
        Filter by business ids

        Return the reviews of the businesses given in list.
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/BusinessId"
    query_review_bucket:
      in: query
      name: bucket
      schema:
        type: string
        default: week
        enum:
        - day
        - week
        - month
        - year
      description: |
        Defining the time range of a data bucket.

        This will determine the precision of the returned data. For example, if you choose `day`, you will receive the
        number of reviews for each day.
    query_review_cumulative:
      in: query
      name: cumulative
      schema:
        type: string
        default: 'true'
        enum:
        - 'true'
        - 'false'
      description: |
        If `cumulative` = `false`, return the average rating of reviews from the current bucket only.

        If `cumulative` = `true`, return the average rating of reviews from all the buckets until the current one
        (included). The cumulative representation show the evolution of the average rating over time.
    path_user_id:
      in: path
      required: true
      name: user_id
      schema:
        type: string
      description: User id
    query_filter_by_email:
      in: query
      name: email
      schema:
        type: string
        format: email
      description: Filter by email
    query_filter_by_user_status:
      in: query
      name: status
      schema:
        "$ref": "#/components/schemas/UserStatus"
      description: Filter by status
    state__in:
      in: query
      name: state__in
      schema:
        type: array
        items:
          allOf:
          - "$ref": "#/components/schemas/feedback_result-state"
        example: treated,not_treated
      description: State of the feedback result
    created__lte:
      in: query
      name: created__lte
      schema:
        type: string
        format: datetime
        example: '2024-10-01T00:00:00Z'
      description: Max date the feedback result was created on
    created__gte:
      in: query
      name: created__gte
      schema:
        type: string
        format: datetime
        example: '2024-11-01T00:00:00Z'
      description: Min date the feedback result was created on
    nps__lte:
      in: query
      name: nps__lte
      schema:
        allOf:
        - "$ref": "#/components/schemas/nps"
      description: Max NPS of the feedback result
    nps__gte:
      in: query
      name: nps__gte
      schema:
        allOf:
        - "$ref": "#/components/schemas/nps"
      description: Min NPS of the feedback result
    nps__in:
      in: query
      name: nps__in
      schema:
        type: array
        items:
          allOf:
          - "$ref": "#/components/schemas/nps"
        example: 0,1,2,8,9,10
      description: The possible NPS values of the feedback result
    search:
      in: query
      name: search
      schema:
        type: array
        maxItems: 6
        items:
          type: string
      description: The possible words contained in the text field of the feedback
        result
    optin:
      in: query
      name: optin
      schema:
        type: boolean
        enum:
        - true
        - false
      description: Whether the respondent accepts to be contacted
    feedback_form_ids:
      in: query
      name: feedback_form_ids
      schema:
        type: array
        items:
          allOf:
          - "$ref": "#/components/schemas/feedback_form-id"
      description: The forms for which the feedback result is for
    org_id:
      name: org_id
      in: query
      schema:
        type: integer
      description: Organization identifier, only required for `PROVIDER` users.
      example: 1
      required: false
    webhook_id:
      name: webhook_id
      in: path
      required: true
      schema:
        type: integer
      description: The webhook object identifier.
  securitySchemes:
    ApiKeyAuth:
      description: 'The authentication system on Partoo API is using API Key that
        should be put in the header of the request (the name of the header is `x-APIKey`).
        An api_key is linked to a user. This user''s role will give you different
        access level to the API features.

        '
      type: apiKey
      in: header
      name: x-APIKey
webhooks:
  businessCreated:
    post:
      operationId: business_created
      tags:
      - Webhooks
      summary: New Business Created
      description: |
        This event is triggered when a Business is created in Partoo Database.

        The event payload contains the event type and the business contents.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - business_created
                payload:
                  type: object
                  properties:
                    business:
                      "$ref": "#/components/schemas/Business"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
  businessUpdated:
    post:
      operationId: business_updated
      tags:
      - Webhooks
      summary: Business Updated
      description: |
        This event is triggered when a Business is updated in Partoo Database.

        The event payload contains the event type and the business contents.

        Attention, the hook may be triggered on internal changes that may not reflect on the contents sent.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - business_updated
                payload:
                  type: object
                  properties:
                    business:
                      "$ref": "#/components/schemas/Business"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
  businessDeleted:
    post:
      operationId: business_deleted
      tags:
      - Webhooks
      summary: Business Deleted
      description: |
        This event is triggered when a Business is removed from Partoo Database.

        The event payload contains the event type and the business id.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - business_deleted
                payload:
                  type: object
                  properties:
                    business_id:
                      "$ref": "#/components/schemas/BusinessId"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
  messageCreated:
    post:
      operationId: message_created
      tags:
      - Webhooks
      summary: Message Created
      description: |
        This event is triggered when a conversation has a new message.

        The event payload contains the event type, the content of the message
        created, and additional information about the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - message_created
                payload:
                  "$ref": "#/components/schemas/MessageCreatedEvent"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
  messageReceived:
    post:
      operationId: message_received
      tags:
      - Webhooks
      summary: New message received
      deprecated: true
      description: |
        ⚠️ Deprecated, please use the [Message Created](#operation/message_created) webhook instead, and filter on
         `sender_type=Consumer` and `status=Success` to reproduce this webhook comportement.

        This event is triggered when a business receives a new message sent by a
        Consumer.
        It is not triggered for messages sent as the business by a User.

        The event payload contains the event type, the content of the message
        received, and additional information about the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  "$ref": "#/components/schemas/MessageReceivedEvent"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
  messageUpdated:
    post:
      operationId: message_updated
      tags:
      - Webhooks
      summary: Message Updated
      description: |
        This event is triggered if the field of a message is updated (example: `status`, `is_deleted`).

        Messages send via Partoo are created with the status `Sending`, and
        propagated to the messaging channel.
        If the message is sent successfully, the status is changed to `Success`.
        If the messaging channel fails to send the message, the status changed to
        `Failed`. A failed message can be retried using the [/retry endpoint](#operation/retrySendMessage).

        The event payload contains the event type, the content of the updated message and additional information about the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - message_updated
                payload:
                  "$ref": "#/components/schemas/MessageCreatedEvent"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
  leadReceived:
    post:
      operationId: lead_received
      tags:
      - Webhooks
      summary: Lead Received
      description: |
        This event is triggered when a Lead is added in Partoo Database.

        The event payload contains the event type and the lead contents.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - lead_received
                payload:
                  type: object
                  "$ref": "#/components/schemas/LeadWebhook"
      responses:
        '200':
          description: 'Return a 200 status to indicate that the event was properly
            received

            '
        '500':
          description: |
            An error in range 500-599 will trigger a retry from webhook delivery system, up to 5 times, with an exponential backout.

            > ⚠️ You may have to deal with events not received in order
      security: []
security:
- ApiKeyAuth: []
